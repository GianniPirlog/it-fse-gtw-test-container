[{
  "_id": {
    "$oid": "63c5d6c4d370ce753aa68175"
  },
  "name_schematron": "schematronFSEv19.sch",
  "content_schematron": {
    "$binary": {
      "base64": "<?xml version="1.0" encoding="UTF-8"?>
<!-- schematron versione:19.0 -->
<schema xmlns="http://purl.oclc.org/dsdl/schematron" 
		xmlns:cda="urn:hl7-org:v3"
        xmlns:iso="http://purl.oclc.org/dsdl/schematron"
        xmlns:sch="http://www.ascc.net/xml/schematron"
        queryBinding="xslt2">
	<title>Schematron Laboratorio Analisi 1.3</title>
	<ns prefix="hl7" uri="urn:hl7-org:v3"/>
	<ns prefix="xsi" uri="http://www.w3.org/2001/XMLSchema-instance"/>
	<pattern id="all">

	<!--________________________________ HEADER _____________________________________________________________-->
	
		<!-- ClinicalDocument -->
		<rule context="hl7:ClinicalDocument">

			<!--Controllo realmCode-->	
			<assert test="count(hl7:realmCode)>=1"
			>ERRORE-1| L'elemento <name/> DEVE avere almeno un elemento 'realmCode'</assert>
			<assert test="count(hl7:realmCode[@code='IT'])= 1"
			>ERRORE-2| Almeno un elemento 'realmCode' DEVE avere l'attributo @root valorizzato come 'IT'</assert>

			<!-- Controllo su templateId-->
			<let name="num_tid" value="count(hl7:templateId)"/>
			<assert test="$num_tid >= 1"
			>ERRORE-3| L'elemento <name/> DEVE avere almeno un elemento di tipo 'templateId'</assert>
			<assert test="count(hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.1']) = 1 and  count(hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.1']/@extension)=1"
			>ERRORE-4| Almeno un elemento 'templateId' DEVE essere valorizzato attraverso l'attributo  @root='2.16.840.1.113883.2.9.10.1.1' (id del template nazionale)  associato all'attributo @extension che  indica la versione a cui il templateId fa riferimento</assert>
							
			<!-- Controllo su code-->	
			<assert test="count(hl7:code[@code='11502-2'][@codeSystem='2.16.840.1.113883.6.1']) = 1"
			>ERRORE-5| L'elemento <name/>/code deve essere valorizzato con l'attributo @code='11502-2' e il @codeSystem='2.16.840.1.113883.6.1'</assert>
				
			<report test="not(count(hl7:code[@codeSystemName='LOINC'])=1) or not(count(hl7:code[@displayName='REFERTO DI LABORATORIO'])=1 or
			count(hl7:code[@displayName='Referto di Laboratorio'])=1 or count(hl7:code[@displayName='Referto di laboratorio'])=1)"
			>W001| Si raccomanda di valorizzare gli attributi dell'elemento <name/>/code nel seguente modo: @codeSystemName ='LOINC' e @displayName ='Referto di laboratorio'.--> </report>
			
			<!-- Controllo su confidentialityCode-->
			<assert test="(count(hl7:confidentialityCode[@code='N'][@codeSystem='2.16.840.1.113883.5.25'])= 1) or 
			(count(hl7:confidentialityCode[@code='V'][@codeSystem='2.16.840.1.113883.5.25'])= 1)"
			>ERRORE-6| L'elemento  'confidentialityCode' di <name/> DEVE avere l'attributo @code  valorizzato con 'N' o 'V', e il suo @codeSystem  con '2.16.840.1.113883.5.25'</assert>
			
			<!--Controllo languageCode-->	
			<assert test="count(hl7:languageCode)=1"
			>ERRORE-7| L'elemento <name/> DEVE contenere un solo elemento 'languageCode' </assert>
			
			<!-- Controllo incrociato tra setId-versionNumber-relatedDocument-->
			<let name="versionNumber" value="hl7:versionNumber/@value"/>
			<assert test="(string(number($versionNumber)) = 'NaN') or
					($versionNumber= 1 and hl7:id/@root = hl7:setId/@root and hl7:id/@extension = hl7:setId/@extension) or
					($versionNumber!= '1' and hl7:id/@root = hl7:setId/@root and hl7:id/@extension != hl7:setId/@extension) or
					(hl7:id/@root != hl7:setId/@root)"
					>ERRORE 8| Se ClinicalDocument.id e ClinicalDocument.setId usano lo stesso dominio di identificazione (@root identico) allora l’attributo @extension del
					ClinicalDocument.id deve essere diverso da quello del ClinicalDocument.setId a meno che ClinicalDocument.versionNumber non sia uguale ad 1; cioè i valori del setId ed id per un documento clinico possono coincidere solo per la prima versione di un documento.</assert>
			
			<assert test="(string(number($versionNumber)) ='NaN') or
						  ($versionNumber=1) or 
						  (($versionNumber &gt;1) and count(hl7:relatedDocument)=1)"
			>ERRORE-9| Se l'attributo <name/>/versionNumber/@value maggiore di  1 l'elemento <name/>  deve contenere un elemento di tipo 'relatedDocument'.</assert>
			
			<!--Controllo recordTarget-->
			<assert test="count(hl7:recordTarget)=1"
			>ERRORE-10| L'elemento <name/> DEVE contenere un solo elemento 'recordTarget' </assert>
			
			<!--Controllo recordTarget/patientRole/id-->
			<assert test="count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.4.3.2'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.4.3.7'])=1 or 
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.4.3.3'])=1 or 
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.4.3.18'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.4.3.17'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.4.3.15'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.2.10.4.1'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.2.20.4.1'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.2.30.4.1'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.2.41.4.1'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.2.42.4.1'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.2.50.4.1'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.2.60.4.1'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.2.70.4.1'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.2.80.4.1'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.2.90.4.1'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.2.100.4.1'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.2.110.4.1'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.2.120.4.1'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.2.130.4.1'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.2.140.4.1'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.2.150.4.1'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.2.160.4.1'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.2.170.4.1'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.2.180.4.1'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.2.190.4.1'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.2.200.4.1'])=1"
			>ERRORE-11a| L'elemento <name/>/recordTarget/patientRole/id  deve avere l'attributo @root valorizzato tramite una  delle seguenti identificatori Nazionanli:
			CF 2.16.840.1.113883.2.9.4.3.2
			TEAM 2.16.840.1.113883.2.9.4.3.7 o 2.16.840.1.113883.2.9.4.3.3
			ENI 2.16.840.1.113883.2.9.4.3.18
			STP 2.16.840.1.113883.2.9.4.3.17
			ANA 2.16.840.1.113883.2.9.4.3.15
			Oppure tramite gli identificatori regionali generati per rappresentare l'id del paziente.
			</assert>

			<!--Controllo recordTarget/patientRole/addr-->
			<let name="num_addr" value="count(hl7:recordTarget/hl7:patientRole/hl7:addr)"/>
			<assert test="$num_addr=0 or (count(hl7:recordTarget/hl7:patientRole/hl7:addr/hl7:country)=$num_addr and 
			count(hl7:recordTarget/hl7:patientRole/hl7:addr/hl7:city)=$num_addr and 
			count(hl7:recordTarget/hl7:patientRole/hl7:addr/hl7:streetAddressLine)=$num_addr)"
			>ERRORE-11| L'elemento <name/>/recordTarget/patientRole/addr DEVE riportare i sotto-elementi 'country', 'city' e 'streetAddressLine' </assert>
			
			<!--Controllo recordTarget/patientRole/patient/name-->
			<let name="patient" value="hl7:recordTarget/hl7:patientRole/hl7:patient"/>
			<assert test="count($patient)=1 "
			>ERRORE-12| L'elemento <name/>/recordTaget/patientRole DEVE contenere l'elemento patient</assert>
			<assert test="count($patient)=0 or count($patient/hl7:name)=1"
			>ERRORE-13| L'elemento <name/>/recordTaget/patientRole/patient DEVE contenere l'elemento 'name'</assert>
			<assert test="count($patient)=0 or (count($patient/hl7:name/hl7:given)=1 and count($patient/hl7:name/hl7:family)=1)"
			>ERRORE-14| L'elemento <name/>/recordTaget/patientRole/patient/name DEVE riportare gli elementi 'given' e 'family'</assert>

			<!--Controllo recordTarget/patientRole/patient/administrativeGenderCode-->
			<let name="genderOID" value="hl7:recordTarget/hl7:patientRole/hl7:patient/hl7:administrativeGenderCode/@codeSystem"/>
			
			<assert test="count($patient)=0 or count(hl7:recordTarget/hl7:patientRole/hl7:patient/hl7:administrativeGenderCode)=1"
			>ERRORE-15| L'attributo <name/>/recordTarget/patientRole/patient DEVE contenere l'elemento administrativeGenderCode </assert>
			<assert test="count($patient)=0 or $genderOID='2.16.840.1.113883.5.1'"
			>ERRORE-16| L'OID assegnato all'attributo <name/>/recordTarget/patientRole/patient/administrativeGenderCode/@codeSystem='<value-of select="$genderOID"/>' non è corretto. L'attributo DEVE essere valorizzato con '2.16.840.1.113883.5.1' </assert>
					
			<!--Controllo recordTarget/patientRole/patient/birthTime-->
			<assert test="count($patient)=0 or count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.4.3.2' or 
			@root='2.16.840.1.113883.2.9.4.3.7' or @root='2.16.840.1.113883.2.9.4.3.3' or 
			@root='2.16.840.1.113883.2.9.4.3.17'])=0 or 
			count(hl7:recordTarget/hl7:patientRole/hl7:patient/hl7:birthTime)=1"
			>ERRORE-17| L'elemento <name/>/recordTaget/patientRole/patient DEVE riportare un elemento 'birthTime'.</assert>
			
			<!--Controllo recordTarget/patientRole/patient/birthplace/place/addr-->
			<assert test="count(hl7:recordTarget/hl7:patientRole/hl7:patient/hl7:birthplace)=0 or 
			count(hl7:recordTarget/hl7:patientRole/hl7:patient/hl7:birthplace/hl7:place/hl7:addr)=1"
			>ERRORE-18| L'elemento <name/>/recordTarget/patientRole/patient/birthplace DEVE contenere un elemento place/addr </assert>	
			

			<!--Controllo ClinicalDocument/dataEnterer-->	
			<assert test="count(hl7:dataEnterer)=0 or count(hl7:dataEnterer/hl7:time)=1"
			>ERRORE-23| L'elemento <name/>/dataEnterer DEVE contenere un elemento 'time'</assert>
			
			<!-- Controllo dataEnterer/assignedEntity/id -->
			<let name="id_dataEnterer" value="hl7:dataEnterer/hl7:assignedEntity/hl7:id"/>
			<assert test="count(hl7:dataEnterer)=0 or count($id_dataEnterer[@root='2.16.840.1.113883.2.9.4.3.2'])=1"
			>ERRORE-24| L'elemento ClinicalDocument/dataEnterer DEVE avere almeno un elemento 'id' <value-of select="$id_dataEnterer"/> con l'attributo @root valorizzato con '2.16.840.1.113883.2.9.4.3.2'</assert>
			
			<!--Controllo dataEnterer/assignedEntity/assignedPerson-->
			<let name="nome" value="hl7:dataEnterer/hl7:assignedEntity/hl7:assignedPerson/hl7:name"/>
			<assert test="count(hl7:dataEnterer)=0 or (count(hl7:dataEnterer/hl7:assignedEntity/hl7:assignedPerson/hl7:name)=1)"
			>ERRORE-25| L'elemento <name/>/dataEnterer/assignedEntity DEVE riportare l'elemento 'assignedPerson/name'.</assert>
			<assert test="count(hl7:dataEnterer)=0 or (count($nome/hl7:family)=1 and count($nome/hl7:given)=1)"
			>ERRORE-26| L'elemento <name/>/dataEnterer/assignedEntity/assignedPerson/name DEVE avere gli elementi 'given' e 'family'.</assert>

			<!-- Controllo ClinicalDocument/custodian/assignedCustodian/representedCustodianOrganization-->
			<assert test="count(hl7:custodian/hl7:assignedCustodian/hl7:representedCustodianOrganization/hl7:name)=1"
			>ERRORE-27| ClinicalDocument/custodian/assignedCustodian/representedCustodianOrganization deve contenere un elemento 'name'</assert>
			<let name="num_addr_cust" value="count(hl7:custodian/hl7:assignedCustodian/hl7:representedCustodianOrganization/hl7:addr)"/>
			<let name="addr_cust" value="hl7:custodian/hl7:assignedCustodian/hl7:representedCustodianOrganization/hl7:addr"/>
			<assert test="$num_addr_cust=0 or (count($addr_cust/hl7:country)=$num_addr_cust and count($addr_cust/hl7:city)=$num_addr_cust and count($addr_cust/hl7:streetAddressLine)=$num_addr_cust)"
			>ERRORE-28| L'elemento <name/>/custodian/assignedCustodian/representedCustodianOrganization/addr DEVE riportare i sotto-elementi 'country', 'city' e 'streetAddressLine'.</assert>


			<!--legalAuthenticator -->
			<assert test = "count(hl7:legalAuthenticator)= 1" 
			>ERRORE-29| L'elemento <name/>/legalAuthenticator è obbligatorio </assert>
			<assert test = "count(hl7:legalAuthenticator)= 0 or count(hl7:legalAuthenticator/hl7:signatureCode[@code='S'])= 1" 
			>ERRORE-30| L'elemento legalAuthenticator/signatureCode deve essere valorizzato con il codice "S"  </assert>
			<assert test = "count(hl7:legalAuthenticator)= 0 or count(hl7:legalAuthenticator/hl7:assignedEntity/hl7:id[@root='2.16.840.1.113883.2.9.4.3.2'])= 1"
			>ERRORE-31| L'elemento legalAuthenticator/assignedEntity DEVE contenere almeno un elemento id valorizzato con l'attributo @root '2.16.840.1.113883.2.9.4.3.2'</assert>
			<assert test = "count(hl7:legalAuthenticator)= 0 or count(hl7:legalAuthenticator/hl7:assignedEntity/hl7:assignedPerson/hl7:name)=1"
			>ERRORE-32| ClinicalDocument/legalAuthenticator/assignedEntity/assignedPerson DEVE contenere l'elemento 'name'. </assert>
			<assert test = "count(hl7:legalAuthenticator)= 0 or (count(hl7:legalAuthenticator/hl7:assignedEntity/hl7:assignedPerson/hl7:name/hl7:family)=1 and count(hl7:legalAuthenticator/hl7:assignedEntity/hl7:assignedPerson/hl7:name/hl7:given)=1)"
			>ERRORE-33| ClinicalDocument/legalAuthenticator/assignedEntity/assignedPerson/name DEVE riportare gli elementi 'given' e 'family'</assert>
						
			
			<!-- controllo su inFulfillmentOf-->
			<assert test ="count(hl7:inFulfillmentOf)>=1" 
			>ERRORE-36| In ClinicalDocuemnt DEVE essere presente almeno un elemento 'inFulfillmentOf'. </assert>
					
			<!--controllo su documentationOf-->
			<!--report test = "count (hl7:documentationOf/hl7:serviceEvent/hl7:performer)!=0 or 
			(count (hl7:documentationOf/hl7:serviceEvent/hl7:performer/hl7:assignedEntity/hl7:addr)!=1 and 
			count (hl7:documentationOf/hl7:serviceEvent/hl7:performer/hl7:assignedEntity/hl7:telecom)!=1 )"
			>W003 | L'elemento ClinicalDocument/documentationOf/serviceEvent/performer/assignedEntity dovrebbe contenere address e telecom </report-->
			<assert test = "count (hl7:documentationOf/hl7:serviceEvent/hl7:performer/hl7:assignedEntity/hl7:assignedPerson)=0 or 
			count (hl7:documentationOf/hl7:serviceEvent/hl7:performer/hl7:assignedEntity/hl7:assignedPerson/hl7:name)=1"
			>ERRORE-38| L'elemento ClinicalDocument/documentationOf/serviceEvent/performer/assignedEntity/assignedPerson se presente, deve contenere l'elemento name </assert>
			<assert test = "count (hl7:documentationOf/hl7:serviceEvent/hl7:performer/hl7:assignedEntity/hl7:assignedPerson/hl7:name)=0 or 
			(count (hl7:documentationOf/hl7:serviceEvent/hl7:performer/hl7:assignedEntity/hl7:assignedPerson/hl7:name/hl7:given)=1 and 
			count (hl7:documentationOf/hl7:serviceEvent/hl7:performer/hl7:assignedEntity/hl7:assignedPerson/hl7:name/hl7:family)=1)"
			>ERRORE-39|l'elemento ClinicalDocument/documentationOf/serviceEvent/performer/assignedEntity/assignedPerson/name deve contenere gli attributi given e family </assert>
						

			<!--controllo su componentOf-->
			<let name="path_name" value="hl7:componentOf/hl7:encompassingEncounter/hl7:responsibleParty/hl7:assignedEntity/hl7:assignedPerson/hl7:name"/>
			<assert test = "count(hl7:componentOf/hl7:encompassingEncounter/hl7:responsibleParty/hl7:assignedEntity/hl7:assignedPerson)=0 or 
			count (hl7:componentOf/hl7:encompassingEncounter/hl7:responsibleParty/hl7:assignedEntity/hl7:assignedPerson/hl7:name)=1 "
			>ERRORE-40| Deve essere presente l'elemento ClinicalDocument/componentOf/encompassingEncounter/responsibleParty/assignedentity/assignedPerson/name </assert>
			<assert test = "count(hl7:componentOf/hl7:encompassingEncounter/hl7:responsibleParty/hl7:assignedEntity/hl7:assignedPerson)=0 or 
			(count($path_name/hl7:given)=1 and count($path_name/hl7:family)=1)"
			>ERRORE-41| L'elemento ClinicalDocument/componentOf/encompassingEncounter/responsibleParty/assignedentity/assignedPerson/name deve contenere gli elementi given e family </assert>
			<assert test = "count(hl7:componentOf/hl7:encompassingEncounter/hl7:location/hl7:healthCareFacility/hl7:serviceProviderOrganization)=0 or 
			count (hl7:componentOf/hl7:encompassingEncounter/hl7:location/hl7:healthCareFacility/hl7:serviceProviderOrganization/hl7:id)=1"
			>ERRORE-42| L'elemento ClinicalDocument/componentOf/encompassingEncounter/location/healthcareFacility/serviceProviderOrganization deve contenere l'elemento 'id' </assert>
		
		</rule>
		
		<!-- Controllo author-->
		<rule context="hl7:ClinicalDocument/hl7:author">
			<!-- Controllo author/assignedAuthor/id/@root -->
			<assert test="count(hl7:assignedAuthor/hl7:id[@root='2.16.840.1.113883.2.9.4.3.2'])= 1"
			>ERRORE-19| L'elemento <name/>/assignedAuthor DEVE contenere almeno un elemento 'id' con il relativo attributo @root valorizzato con '2.16.840.1.113883.2.9.4.3.2'</assert>
			
			<!--Controllo author/assignedAuthor/assignedPerson/name-->
			<let name="name_author" value="hl7:assignedAuthor/hl7:assignedPerson"/>
			
			<assert test="count($name_author/hl7:name)=1"
			>ERRORE-20| L'elemento <name/>/assignedAuthor/assignedPerson DEVE avere l'elemento 'name' </assert>
			<assert test="count($name_author/hl7:name)=0 or (count($name_author/hl7:name/hl7:given)=1 and count($name_author/hl7:name/hl7:family)=1)"
			>ERRORE-21| L'elemento <name/>/assignedAuthor/assignedPerson/name DEVE avere gli elementi 'given' e 'family'</assert>

			<!-- controllo author/assignedAuthor/telecom -->
			<assert test="count(hl7:assignedAuthor/hl7:telecom)>=1"
			>ERRORE-22| L'elemento <name/>/assignedAuthor DEVE deve contenere almeno un elemento 'telecom'</assert>
			
		</rule>
		
		<!-- Controllo participant-->
		<rule context="hl7:ClinicalDocument/hl7:participant">
			<assert test="count(hl7:associatedEntity/hl7:associatedPerson)=0 or 
			(count(hl7:associatedEntity/hl7:associatedPerson/hl7:name)=1)"
			>ERRORE-34| L'elemento <name/>/associatedEntity/associatedPerson deve contenere l'elemento 'name'</assert>
			
			<assert test="count(hl7:associatedEntity/hl7:associatedPerson)=0 or 
			(count(hl7:associatedEntity/hl7:associatedPerson/hl7:name/hl7:family)=1 and count(hl7:associatedEntity/hl7:associatedPerson/hl7:name/hl7:given)=1)"
			>ERRORE-35| L'elemento <name/>/associatedEntity/associatedPerson/name deve contenere gli elementi 'given' e 'family'</assert>
			
		</rule>
		<!-- Controllo inFulfillmentOf-->
		<rule context="hl7:ClinicalDocument/hl7:inFulfillmentOf">
			<let name="prioriry" value="hl7:order/hl7:priorityCode/@code"/>
			 <assert test ="count(hl7:order/hl7:priorityCode)=0 or 
			count(hl7:order/hl7:priorityCode[@codeSystem='2.16.840.1.113883.5.7'][@code='R' or @code='P' or @code='UR' or @code='EM'])=1"
            >ERRORE-37| <name/>/order/priorityCode DEVE avere l'attributo '@codeSystem='2.16.840.1.113883.5.7' e @code valorizzato con uno dei seguenti valori: 'R'|'P'|'UR'|'EM' </assert>
		</rule>
		
		
	<!--________________________________CONTROLLI GENERICI_____________________________________________________________-->
		
		<!-- 6 -->
		<!-- verifica che gli elementi organizer di tipo battery contengano obbligatoriamente un elemento code -->
		<rule context="//*[@classCode='BATTERY']">
			<assert test="(count(hl7:code)=1)"
			>ERRORE-43| L’elemento organizer di tipo 'BATTERY' (@classCode='BATTERY') DEVE contenere l’elemento organizer/code.
			</assert>
		</rule>
		
		<rule context="//hl7:telecom">
			<assert test="(count(@use)=1)"
			>ERRORE-44| L’elemento 'telecom' DEVE contenere l'attributo @use.
			</assert>
		</rule>
		
		<!-- Controllo formato: -->
		<!--campi Codice Fiscale: 16 cifre [A-Z0-9]{16} -->
		<rule context="//hl7:id[@root='2.16.840.1.113883.2.9.4.3.2']">
			<let name="CF" value="@extension"/>
			<assert test="matches(@extension, '[A-Z0-9]{16}') and string-length($CF)=16"
			> ERRORE-45| codice fiscale '<value-of select="$CF"/>' cittadino ed operatore: 16 cifre [A-Z0-9]{16}</assert>
		</rule>
		
		
		<!--Verifica che i codici relativi al CodeSystem "UCUM" utilizzati siano corretti-->
		<!--rule context="//*[@unit]">
			<let name="val_UCUM" value="@unit"/>
			<assert test="doc('DIZ/XML_FSE_v1/2.16.840.1.113883.4.642.3.912.xml')//el[@code=$val_UCUM]"
			>ERRORE-46| Codice UCUM <value-of select="$val_UCUM"/> errato
			</assert>
		</rule-->


	<!-- _____________________________________________ BODY______________________________________________________-->
	
		<!--Controllo Sezione di Specialità-->
		
		<rule context="hl7:ClinicalDocument/hl7:component/hl7:structuredBody/hl7:component/hl7:section">
			
			<assert test="count(hl7:code[@code='18717-9'])>= 1 or count(hl7:code[@code='18718-7'])>= 1 or
						count(hl7:code[@code='18719-5'])>= 1 or count(hl7:code[@code='18720-3'])>= 1 or
						count(hl7:code[@code='18721-1'])>= 1 or count(hl7:code[@code='18722-9'])>= 1 or
						count(hl7:code[@code='18723-7'])>= 1 or count(hl7:code[@code='18724-5'])>= 1 or
						count(hl7:code[@code='18725-2'])>= 1 or count(hl7:code[@code='18727-8'])>= 1 or
						count(hl7:code[@code='18729-6'])>= 1 or count(hl7:code[@code='18729-4'])>= 1 or
						count(hl7:code[@code='18767-4'])>= 1 or count(hl7:code[@code='18768-2'])>= 1 or
						count(hl7:code[@code='18769-0'])>= 1 or count(hl7:code[@code='26435-8'])>= 1 or
						count(hl7:code[@code='26436-6'])>= 1 or count(hl7:code[@code='26437-4'])>= 1 or
						count(hl7:code[@code='26438-2'])>= 1 or count(hl7:code[@code='18716-1'])>= 1 or
						count(hl7:code[@code='26439-0'])>= 1 "
						>ERRORE-b1| L'elemento code della section DEVE essere valorizzato con uno dei seguenti codici LOINC individuati:
						18717-9 BANCA DEL SANGUE
						18718-7 MARCATORI CELLULARI 
						18719-5 CHIMICA
						18720-3	COAGULAZIONE
						18721-1 MONITORAGGIO TERAPEUTICO DEI FARMACI
						18722-9 FERTILITÀ
						18723-7 EMATOLOGIA
						18724-5 HLA
						18725-2 MICROBIOLOGIA
						18727-8 SEROLOGIA
						18728-6 TOSSICOLOGIA
						18729-4 ESAMI DELLE URINE
						18767-4 EMOGASANALISI
						18768-2 CONTE CELLULARE+DIFFERENZIALE
						18769-0 SUSCETTIBILITÀ ANTIMICROBICA
						26435-8 PATOLOGIA MOLECOLARE
						26436-6 ESAMI DI LABORATORIO
						26437-4 TEST DI SENSIBILITÀ A SOSTANZE CHIMICHE
						26438-2 CITOLOGIA
						18716-1 ALLERGOLOGIA
						26439-0 PATOLOGIA CHIRURGICA</assert>
			
			<assert test="count(hl7:code[@codeSystem='2.16.840.1.113883.6.1'])=1"
			>ERRORE-b2| L'elemento code della section di specialità deve avere l'attributo @codeSystem valorizzato con '2.16.840.1.113883.6.1'.</assert>
			
			<!-- controllo su text --> 
			<assert test="(count(hl7:component/hl7:section)>=1 or count(hl7:text)=1) or (count(hl7:component/hl7:section)>=1 and count (hl7:text)=1)"
			>ERORE-b3| L'elemento component/structuredBody/component/section/text DEVE essere presente nel caso in cui non è riportata la sezione foglia. </assert>
			
					
			<!-- controllo section/entry/act/entryRelationship -->
			<assert test = "count(hl7:entry/hl7:act)=0 or 
			(count(hl7:entry/hl7:act/hl7:statusCode[@code='active' or @code='completed' or @code='aborted'])=1)"
			>ERRORE-b4| L'elemento <name/> /entry/act deve contenere l'elemento 'statusCode' valorizzato con uno dei seguenti valori:  active|completed|aborted </assert>
			
			<assert test = "count(hl7:entry/hl7:act)=0 or 
			(count(hl7:entry/hl7:act/hl7:entryRelationship[@typeCode='SUBJ'])=1 and 
			count(hl7:entry/hl7:act/hl7:entryRelationship[@inversionInd='true'])=1)"
			>ERRORE-b5| L'elemento <name/> /entry/act/entryRelationship deve avere gli attributi @typeCode="SUBJ"e @inversionInd="true" </assert>
		
			<assert test = "count(hl7:entry/hl7:act/hl7:entryRelationship)=0 or 
			(count(hl7:entry/hl7:act/hl7:entryRelationship/hl7:act/hl7:code[@code='48767-8'])=1 and 
			count(hl7:entry/hl7:act/hl7:entryRelationship/hl7:act/hl7:code[@codeSystem='2.16.840.1.113883.6.1'])=1)"
			>ERROR-b6| L'elemento <name/> /entry/act/entryRelationship/act/code deve avere gli attributi @code="48767-8" e @codeSystem="2.16.840.1.113883.6.1" </assert>
			
			<assert test = "count(hl7:entry/hl7:act/hl7:entryRelationship)=0 or 
			(count(hl7:entry/hl7:act/hl7:entryRelationship/hl7:act/hl7:text/hl7:reference)=1)"
			>ERROR-b7| L'elemento <name/> /entry/act/entryRelationship/act/text deve contenere l'elemento reference </assert>
		
		</rule>
		
		<!--controllo entry/act/specimen sezione specialità-->	
		<rule context="hl7:ClinicalDocument/hl7:component/hl7:structuredBody/hl7:component/hl7:section/hl7:entry/hl7:act/hl7:specimen">
			<assert test="count(hl7:specimenRole/hl7:id)>=1"
			>ERRORE-b8| Gli elementi entry/act/specimen/specimenRole DEVONO avere un elemento 'id'. </assert>
			<assert test="count(hl7:specimenRole/hl7:specimenPlayingEntity)=1" 
			>ERRORE-b9| L'elemento component/struturedBody/component/section/entry/act/specimen deve contenere l'elemento specimenRole/specimenPlayingEntity </assert>
			<assert test="count(hl7:specimenRole/hl7:specimenPlayingEntity/hl7:code)=1" 
			>ERRORE-b10| L'elemento entry/act/specimen/specimenRole/specimenPlayingEntity deve contenere l'elemento code</assert>
			
		</rule>
		
		<rule context = "hl7:ClinicalDocument/hl7:component/hl7:structuredBody/hl7:component/hl7:section/hl7:component/hl7:section">
		
				
		<!--Controllo Sezione Foglia-->
			
			<assert test = "count(hl7:component/hl7:section)=0" 
			>ERRORE-b11| La sezione foglia non deve includere ulteriori component</assert>
			
			<let name="stCode" value="hl7:entry/hl7:act/hl7:statusCode/@code"/>
			<assert test = "count(hl7:entry/hl7:act/hl7:statusCode)=1 and ($stCode='completed' or $stCode='active' or $stCode='aborted')"
			>ERRORE-b12| L'elemento entry/act/statusCode deve contenere l'attibuto @code = 'completed' or 'active' or 'aborted' </assert>
			
			<report test="not(count(hl7:entry/hl7:act/hl7:code[@codeSystem='2.16.840.1.113883.6.1'])=1)"
			>W003 | Si consiglia di utilizzare il sistema di codifica LOINC per la valorizzazione dell'elemento  <name/> /entry/act/code.--> </report>

		</rule>
		
		<!-- 5 -->			
			<!-- controllo code Observation -->
		<rule context="hl7:ClinicalDocument/hl7:component/hl7:structuredBody/hl7:component/hl7:section/hl7:component/hl7:section/hl7:entry/hl7:act/hl7:entryRelationship/hl7:observation">
		
		    <report test ="not(count(hl7:code[@codeSystem='2.16.840.1.113883.6.1'])=1)"
			>W004 | Si consiglia di utilizzare il sistema di codifica LOINC per la valorizzazione dell'elemento entry/act/entryRelationship/observation/code.--> </report>
			
			<let name="obs_int" value="hl7:interpretationCode/@codeSystem"/>
			<assert test ="count(hl7:interpretationCode)=0 or $obs_int='2.16.840.1.113883.5.83'"
			> ERRORE-b13| L'elemento observation/interpretationCode DEVE essere valorizzato secondo il value set HL7 Observation Interpretation (2.16.840.1.113883.5.83)</assert>
			
		</rule>
		
		
		
		
		
	</pattern>
</schema>
",
      "subType": "00"
    }
  },
  "version": "3.1",
  "template_id_root": "2.16.840.1.113883.2.9.10.1.1",
  "last_update_date": {
    "$date": "2023-01-16T22:59:16.111Z"
  },
  "deleted": false,
  "last_sync": {
    "$date": "2023-01-16T23:00:03.543Z"
  }
},{
  "_id": {
    "$oid": "63c5d6c7d370ce753aa68176"
  },
  "name_schematron": "schematronFSE_LDO_V5.0.sch",
  "content_schematron": {
    "$binary": {
      "base64": "<?xml version="1.0" encoding="UTF-8"?>
<!-- schematron versione:5.0 -->
<schema xmlns="http://purl.oclc.org/dsdl/schematron" 
		xmlns:cda="urn:hl7-org:v3"
        xmlns:iso="http://purl.oclc.org/dsdl/schematron"
        xmlns:sch="http://www.ascc.net/xml/schematron"
        queryBinding="xslt2">
	<title>Schematron Lettera Dimissione Ospedaliera V 1.2</title>
	<ns prefix="hl7" uri="urn:hl7-org:v3"/>
	<ns prefix="xsi" uri="http://www.w3.org/2001/XMLSchema-instance"/>
	
	<pattern id="all">
		
	<!--________________________________ HEADER _____________________________________________________________-->
	
	<!-- ClinicalDocument -->
		<rule context="hl7:ClinicalDocument">
	        <!--Controllo realmCode-->	
			<assert test="count(hl7:realmCode)>=1"
			>ERRORE-1| L'elemento <name/> DEVE avere almeno un elemento 'realmCode'</assert>
			<assert test="count(hl7:realmCode[@code='IT'])= 1"
			>ERRORE-2| L'elemento 'realmCode' DEVE avere l'attributo @code valorizzato come 'IT'</assert>
	        
			<!--Controllo templateId-->
			<let name="num_tid" value="count(hl7:templateId)"/>
			<assert test="$num_tid >= 1"
			>ERRORE-3| L'elemento <name/> DEVE avere almeno un elemento di tipo 'templateId'</assert>
			<assert test="count(hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.5'])= 1 and  count(hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.5']/@extension)= 1"
			>ERRORE-4| Almeno un elemento 'templateId' DEVE essere valorizzato attraverso l'attributo @root='2.16.840.1.113883.2.9.10.1.5' (id del template nazionale), associato all'attributo @extension che  indica la versione a cui il templateId fa riferimento</assert>
			
			<!--Controllo code-->	
			<assert test="count(hl7:code[@code='34105-7'][@codeSystem='2.16.840.1.113883.6.1']) = 1"
			>ERRORE-5| L'elemento <name/>/code deve essere valorizzato con l'attributo @code='34105-7' e il @codeSystem='2.16.840.1.113883.6.1'</assert>
	
			<report test="not(count(hl7:code[@codeSystemName='LOINC'])=1) or not(count(hl7:code[@displayName='Lettera di dimissione ospedaliera'])=1 or
			count(hl7:code[@displayName='LETTERA DI DIMISSIONE OSPEDALIERA'])=1)"
			>W001| Si raccomanda di valorizzare gli attributi dell'elemento <name/>/code nel seguente modo: @codeSystemName ='LOINC' e @displayName ='Lettera di dimissione ospedaliera'.--> </report>
						
			<!--Controllo confidentialityCode-->
			<assert test="(count(hl7:confidentialityCode[@code='N'][@codeSystem='2.16.840.1.113883.5.25'])= 1) or 
			(count(hl7:confidentialityCode[@code='V'][@codeSystem='2.16.840.1.113883.5.25'])= 1)"
			>ERRORE-6| L'elemento 'confidentialityCode' di <name/> DEVE avere l'attributo @code valorizzato con 'N' o 'V', e il @codeSystem='2.16.840.1.113883.5.25'</assert>
			
			<!--Controllo languageCode-->	
			<assert test="count(hl7:languageCode)=1"
			>ERRORE-7| L'elemento <name/> DEVE contenere un solo elemento 'languageCode' </assert>
			
			<!--Controllo incrociato tra setId-versionNumber e relatedDocument-->
			<let name="versionNumber" value="hl7:versionNumber/@value"/>
			<assert test="(string(number($versionNumber)) = 'NaN') or
					($versionNumber= 1 and hl7:id/@root = hl7:setId/@root and hl7:id/@extension = hl7:setId/@extension) or
					($versionNumber!= '1' and hl7:id/@root = hl7:setId/@root and hl7:id/@extension != hl7:setId/@extension) or
					(hl7:id/@root != hl7:setId/@root)"
			>ERRORE-8| Se ClinicalDocument.id e ClinicalDocument.setId usano lo stesso dominio di identificazione (@root identico) allora l’attributo @extension del
			ClinicalDocument.id deve essere diverso da quello del ClinicalDocument.setId a meno che ClinicalDocument.versionNumber non sia uguale ad 1; cioè i valori di setId ed id per un documento clinico possono coincidere solo per la prima versione di un documento</assert>
			
			<assert test="(string(number($versionNumber)) ='NaN') or
						  ($versionNumber=1) or 
						  (($versionNumber &gt;1) and count(hl7:relatedDocument)=1)"
			>ERRORE-9| Se l'attributo <name/>/versionNumber/@value è maggiore di 1, l'elemento <name/>  deve contenere un elemento di tipo 'relatedDocument'</assert>
			
			<!--Controllo recordTarget-->
			<assert test="count(hl7:recordTarget)=1"
			>ERRORE-10| L'elemento <name/> DEVE contenere un solo elemento 'recordTarget' </assert>
			
            <!--Controllo recordTarget/patientRole/id-->
			<assert test="count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.4.3.2'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.4.3.7'])=1 or 
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.4.3.3'])=1 or 
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.4.3.18'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.4.3.17'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.4.3.15'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.2.10.4.1'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.2.20.4.1'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.2.30.4.1'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.2.41.4.1'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.2.42.4.1'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.2.50.4.1'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.2.60.4.1'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.2.70.4.1'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.2.80.4.1'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.2.90.4.1'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.2.100.4.1'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.2.110.4.1'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.2.120.4.1'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.2.130.4.1'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.2.140.4.1'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.2.150.4.1'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.2.160.4.1'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.2.170.4.1'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.2.180.4.1'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.2.190.4.1'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.2.200.4.1'])=1"
			>ERRORE-11a| L'elemento <name/>/recordTarget/patientRole/id  deve avere l'attributo @root valorizzato tramite una  delle seguenti identificatori Nazionanli:
			CF 2.16.840.1.113883.2.9.4.3.2
			TEAM 2.16.840.1.113883.2.9.4.3.7 o 2.16.840.1.113883.2.9.4.3.3
			ENI 2.16.840.1.113883.2.9.4.3.18
			STP 2.16.840.1.113883.2.9.4.3.17
			ANA 2.16.840.1.113883.2.9.4.3.15
			Oppure tramite gli identificatori regionali generati per rappresentare l'id del paziente.
			</assert>
			
			<!--Controllo recordTarget/patientRole/addr-->
			<let name="num_addr" value="count(hl7:recordTarget/hl7:patientRole/hl7:addr)"/>
			<assert test="$num_addr=0 or (count(hl7:recordTarget/hl7:patientRole/hl7:addr/hl7:country)=$num_addr and 
			count(hl7:recordTarget/hl7:patientRole/hl7:addr/hl7:city)=$num_addr and 
			count(hl7:recordTarget/hl7:patientRole/hl7:addr/hl7:streetAddressLine)=$num_addr)"
			>ERRORE-11| L'elemento <name/>/recordTarget/patientRole/addr DEVE riportare i sotto-elementi 'country', 'city' e 'streetAddressLine' </assert>
			
		    <!--Controllo recordTarget/patientRole/patient/name-->
			<let name="patient" value="hl7:recordTarget/hl7:patientRole/hl7:patient"/>
			<assert test="count($patient)=1 "
			>ERRORE-12| L'elemento <name/>/recordTaget/patientRole DEVE contenere l'elemento patient</assert>
			<assert test="count($patient)=0 or count($patient/hl7:name)=1"
			>ERRORE-13| L'elemento <name/>/recordTaget/patientRole/patient DEVE contenere l'elemento 'name'</assert>
			<assert test="count($patient)=0 or (count($patient/hl7:name/hl7:given)=1 and count($patient/hl7:name/hl7:family)=1)"
			>ERRORE-14| L'elemento <name/>/recordTaget/patientRole/patient/name DEVE riportare gli elementi 'given' e 'family'</assert>
			
			<!--Controllo recordTarget/patientRole/patient/administrativeGenderCode-->
			<let name="genderOID" value="hl7:recordTarget/hl7:patientRole/hl7:patient/hl7:administrativeGenderCode/@codeSystem"/>
			
			<assert test="count($patient)=0 or count(hl7:recordTarget/hl7:patientRole/hl7:patient/hl7:administrativeGenderCode)=1"
			>ERRORE-15| L'attributo <name/>/recordTarget/patientRole/patient DEVE contenere l'elemento administrativeGenderCode </assert>
			<assert test="count($patient)=0 or $genderOID='2.16.840.1.113883.5.1'"
			>ERRORE-16| L'OID assegnato all'attributo <name/>/recordTarget/patientRole/patient/administrativeGenderCode/@codeSystem='<value-of select="$genderOID"/>' non è corretto. L'attributo DEVE essere valorizzato con '2.16.840.1.113883.5.1' </assert>
			
			
			<!--Controllo recordTarget/patientRole/patient/birthTime-->
			<assert test="count($patient)=0 or
			(count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.4.3.2' or 
			@root='2.16.840.1.113883.2.9.4.3.7' or @root='2.16.840.1.113883.2.9.4.3.3' or 
			@root='2.16.840.1.113883.2.9.4.3.17'])=0) or 
			count(hl7:recordTarget/hl7:patientRole/hl7:patient/hl7:birthTime)=1"
			>ERRORE-17| L'elemento <name/>/recordTaget/patientRole/patient DEVE riportare un elemento 'birthTime'.</assert>
			
			<!--Controllo recordTarget/patientRole/patient/birthplace/place/addr-->
			<assert test="count(hl7:recordTarget/hl7:patientRole/hl7:patient/hl7:birthplace)=0 or 
			count(hl7:recordTarget/hl7:patientRole/hl7:patient/hl7:birthplace/hl7:place/hl7:addr)=1"
			>ERRORE-18| L'elemento <name/>/recordTarget/patientRole/patient/birthplace DEVE contenere un elemento place/addr </assert>	
			
			
			<!--Controllo ClinicalDocument/dataEnterer-->	
			<assert test="count(hl7:dataEnterer)=0 or count(hl7:dataEnterer/hl7:time)=1"
			>ERRORE-23| L'elemento <name/>/dataEnterer DEVE contenere un elemento 'time'</assert>
			
			<let name="id_dataEnterer" value="hl7:dataEnterer/hl7:assignedEntity/hl7:id"/>
			
			<assert test="count(hl7:dataEnterer)=0 or count($id_dataEnterer[@root='2.16.840.1.113883.2.9.4.3.2'])=1"
			>ERRORE-24| L'elemento <name/>/dataEnterer/assignedEntity DEVE avere almeno un elemento 'id' <value-of select="$id_dataEnterer"/> con l'attributo @root='2.16.840.1.113883.2.9.4.3.2'</assert>
			
			<!--Controllo dataEnterer/assignedEntity/assignedPerson-->
			<let name="nome" value="hl7:dataEnterer/hl7:assignedEntity/hl7:assignedPerson/hl7:name"/>
			<assert test="count(hl7:dataEnterer)=0 or (count(hl7:dataEnterer/hl7:assignedEntity/hl7:assignedPerson/hl7:name)=1)"
			>ERRORE-25| L'elemento <name/>/dataEnterer/assignedEntity DEVE riportare l'elemento 'assignedPerson/name'.</assert>
			<assert test="count(hl7:dataEnterer)=0 or (count($nome/hl7:family)=1 and count($nome/hl7:given)=1)"
			>ERRORE-26| L'elemento <name/>/dataEnterer/assignedEntity/assignedPerson/name DEVE avere gli elementi 'given' e 'family'.</assert>	
			
		    <!--Controllo ClinicalDocument/custodian/assignedCustodian/representedCustodianOrganization-->
			<assert test="count(hl7:custodian/hl7:assignedCustodian/hl7:representedCustodianOrganization/hl7:name)=1"
			>ERRORE-27| <name/>/custodian/assignedCustodian/representedCustodianOrganization deve contenere un elemento 'name'</assert>
			<let name="num_addr_cust" value="count(hl7:custodian/hl7:assignedCustodian/hl7:representedCustodianOrganization/hl7:addr)"/>
			<let name="addr_cust" value="hl7:custodian/hl7:assignedCustodian/hl7:representedCustodianOrganization/hl7:addr"/>
			<assert test="$num_addr_cust=0 or (count($addr_cust/hl7:country)=$num_addr_cust and count($addr_cust/hl7:city)=$num_addr_cust and count($addr_cust/hl7:streetAddressLine)=$num_addr_cust)"
			>ERRORE-28| L'elemento <name/>/custodian/assignedCustodian/representedCustodianOrganization/addr DEVE riportare i sotto-elementi 'country','city' e 'streetAddressLine'</assert>
		
		    <!--Controllo ClinicalDocument/legalAuthenticator-->
			<!--let name='statusCode' value='hl7:sdtc:statusCode'/-->
			<assert test = "count(hl7:legalAuthenticator)= 1" 
			>ERRORE-29| L'elemento <name/>/legalAuthenticator è obbligatorio </assert>
			<assert test = "count(hl7:legalAuthenticator)= 0 or count(hl7:legalAuthenticator/hl7:signatureCode[@code='S'])= 1" 
			>ERRORE-30| L'elemento <name/>/legalAuthenticator/signatureCode deve essere valorizzato con il codice "S" </assert>
			<assert test = "count(hl7:legalAuthenticator)= 0 or count(hl7:legalAuthenticator/hl7:assignedEntity/hl7:id[@root='2.16.840.1.113883.2.9.4.3.2'])= 1"
			>ERRORE-31| L'elemento <name/>/legalAuthenticator/assignedEntity DEVE contenere almeno un elemento id valorizzato con l'attributo @root='2.16.840.1.113883.2.9.4.3.2'</assert>
			
			<assert test = "count(hl7:legalAuthenticator)= 0 or count(hl7:legalAuthenticator/hl7:assignedEntity/hl7:assignedPerson/hl7:name)=1"
			>ERRORE-32| L'elemento <name/>/legalAuthenticator/assignedEntity/assignedPerson DEVE contenere l'elemento 'name'</assert>
			<assert test = "count(hl7:legalAuthenticator)= 0 or count(hl7:legalAuthenticator/hl7:assignedEntity/hl7:assignedPerson/hl7:name/hl7:family)=1 and count(hl7:legalAuthenticator/hl7:assignedEntity/hl7:assignedPerson/hl7:name/hl7:given)=1"
			>ERRORE-33| L'elemento <name/>/legalAuthenticator/assignedEntity/assignedPerson/name DEVE riportare gli elementi 'given' e 'family'</assert>
			
			
		    <!--Controllo ClinicalDocument/componentOf-->
			<assert test="count(hl7:componentOf)=1"
			>ERRORE-39| L'elemento componentOf è obbligatorio </assert>
			<assert test="count(hl7:componentOf)=0 or count(hl7:componentOf/hl7:encompassingEncounter/hl7:id)=1"
			>ERRORE-40| L'elemento <name/>/componentOf/encompassingEncounter deve contenere l'elemento 'id' </assert>
			<assert test="count(hl7:componentOf)=0 or 
			count(hl7:componentOf/hl7:encompassingEncounter/hl7:effectiveTime/hl7:low)=1 and count(hl7:componentOf/hl7:encompassingEncounter/hl7:effectiveTime/hl7:high)=1"
			>ERRORE-41| L'elemento <name/>/componentOf/encompassingEncounter/effectiveTime deve contenere gli elementi 'low' e 'high' valorizzati </assert>
			
			<let name="path_name" value="hl7:componentOf/hl7:encompassingEncounter/hl7:responsibleParty/hl7:assignedEntity/hl7:assignedPerson/hl7:name"/>
			<assert test="count(hl7:componentOf/hl7:encompassingEncounter/hl7:responsibleParty/hl7:assignedEntity/hl7:assignedPerson)=0 or 
			count (hl7:componentOf/hl7:encompassingEncounter/hl7:responsibleParty/hl7:assignedEntity/hl7:assignedPerson/hl7:name)=1 "
			>ERRORE-42| Deve essere presente l'elemento <name/>/componentOf/encompassingEncounter/responsibleParty/assignedentity/assignedPerson/name </assert>
			<assert test="count(hl7:componentOf/hl7:encompassingEncounter/hl7:responsibleParty/hl7:assignedEntity/hl7:assignedPerson)=0 or 
			(count($path_name/hl7:given)=1 and count($path_name/hl7:family)=1)"
			>ERRORE-43| L'elemento <name/>/componentOf/encompassingEncounter/responsibleParty/assignedentity/assignedPerson/name deve contenere gli elementi 'given' e 'family' </assert>
			<assert test="count(hl7:componentOf)=0 or count(hl7:componentOf/hl7:encompassingEncounter/hl7:location)=1"
			>ERRORE-44| L'elemento componentOf/encompassingEncounter DEVE contenere l'elemento 'location'</assert>
			<assert test="count(hl7:componentOf/hl7:encompassingEncounter/hl7:location/hl7:healthCareFacility/hl7:serviceProviderOrganization)=0 or 
			count (hl7:componentOf/hl7:encompassingEncounter/hl7:location/hl7:healthCareFacility/hl7:serviceProviderOrganization/hl7:id)=1"
			>ERRORE-45| L'elemento <name/>/componentOf/encompassingEncounter/location/healthcareFacility/serviceProviderOrganization deve contenere l'elemento 'id' </assert>
						
		</rule>
		
		<!-- Controllo author-->
		<rule context="hl7:ClinicalDocument/hl7:author">
			<!-- Controllo author/assignedAuthor/id/@root -->
			<assert test="count(hl7:assignedAuthor/hl7:id[@root='2.16.840.1.113883.2.9.4.3.2'])= 1"
			>ERRORE-19| L'elemento <name/>/assignedAuthor DEVE contenere almeno un elemento 'id' con il relativo attributo @root valorizzato con '2.16.840.1.113883.2.9.4.3.2'</assert>
			
			<!-- controllo author/assignedAuthor/telecom -->
			<assert test="count(hl7:assignedAuthor/hl7:telecom)>=1"
			>ERRORE-20| L'elemento <name/>/assignedAuthor DEVE deve contenere almeno un elemento 'telecom'</assert>
			
			<!--Controllo author/assignedAuthor/assignedPerson/name-->
			<let name="name_author" value="hl7:assignedAuthor/hl7:assignedPerson"/>
			
			<assert test="count($name_author/hl7:name)=1"
			>ERRORE-21| L'elemento <name/>/assignedAuthor/assignedPerson DEVE avere l'elemento 'name' </assert>
			<assert test="count($name_author/hl7:name)=0 or (count($name_author/hl7:name/hl7:given)=1 and count($name_author/hl7:name/hl7:family)=1)"
			>ERRORE-22| L'elemento <name/>/assignedAuthor/assignedPerson/name DEVE avere gli elementi 'given' e 'family'</assert>
		</rule>
		
		<!-- Controllo participant-->
		<rule context="hl7:ClinicalDocument/hl7:participant">
			<assert test="count(hl7:associatedEntity/hl7:id)>=1"
			>ERRORE-34| L'elemento <name/>/associatedEntity deve contenere l'elemento 'id'.</assert>
			<let name="num_addr_pcp" value="count(hl7:associatedEntity/hl7:addr)"/>
            <let name="addr_pcp" value="hl7:associatedEntity/hl7:addr"/>
            <assert test="$num_addr_pcp=0 or (count($addr_pcp/hl7:country)=$num_addr_pcp and
                          count($addr_pcp/hl7:city)=$num_addr_pcp and
                          count($addr_pcp/hl7:streetAddressLine)=$num_addr_pcp)"
            >ERRORE-35| L'elemento <name/>/associatedEntity/addr DEVE riportare i sotto-elementi 'country', 'city' e 'streetAddressLine' </assert>
			<assert test="count(hl7:associatedEntity/hl7:associatedPerson)=0 or 
			(count(hl7:associatedEntity/hl7:associatedPerson/hl7:name)=1)"
			>ERRORE-36| L'elemento <name/>/associatedEntity/associatedPerson deve contenere l'elemento 'name'</assert>
			
			<assert test="count(hl7:associatedEntity/hl7:associatedPerson)=0 or 
			(count(hl7:associatedEntity/hl7:associatedPerson/hl7:name/hl7:family)=1 and count(hl7:associatedEntity/hl7:associatedPerson/hl7:name/hl7:given)=1)"
			>ERRORE-37| L'elemento <name/>/associatedEntity/associatedPerson/name deve contenere gli elementi 'given' e 'family'</assert>
		</rule>
		
		<!-- Controllo inFulfillmentOf-->
		<rule context="hl7:ClinicalDocument/hl7:inFulfillmentOf">
			<let name="prioriry" value="hl7:order/hl7:priorityCode/@code"/>
			<assert test ="count(hl7:order/hl7:priorityCode)=0 or 
			count(hl7:order/hl7:priorityCode[@codeSystem='2.16.840.1.113883.5.7'][@code='R' or @code='P' or @code='UR' or @code='EM'])=1"
            >ERRORE-38| <name/>/order/priorityCode DEVE avere l'attributo '@codeSystem='2.16.840.1.113883.5.7' e @code valorizzato con uno dei seguenti valori: 'R'|'P'|'UR'|'EM' </assert>
		</rule>
		
	<!--________________________________CONTROLLI GENERICI_____________________________________________________________-->
	
		<!--Controllo use Telecom-->
		<rule context="//hl7:telecom">
			<assert test="(count(@use)=1)"
			>Errore-46| L’elemento 'telecom' DEVE contenere l'attributo @use </assert>
		</rule>	
		
		<!-- Controllo formato: -->
		<!--campi Codice Fiscale: 16 cifre [A-Z0-9]{16} -->
		<rule context="//hl7:id[@root='2.16.840.1.113883.2.9.4.3.2']">
			<let name="CF" value="@extension"/>
			<assert test="matches(@extension, '[A-Z0-9]{16}') and string-length($CF)=16"
			>Errore-47| codice fiscale '<value-of select="$CF"/>' cittadino ed operatore: 16 cifre [A-Z0-9]{16}</assert>
		</rule>
	
		<!--Controllo sugli attributi di observation-->
		<rule context="//hl7:observation">
			<let name="moodCd" value="@moodCode"/>
			<assert test="count(@classCode)=1"
			>Errore-48| L'attributo "@classCode" dell'elemento "observation" deve essere presente </assert>
			<assert test="$moodCd='EVN'"
			>Errore-49| L'attributo "@moodCode" dell'elemento "observation" deve essere valorizzato con "EVN" </assert>
		</rule>

		<!--Controllo sugli attributi di act-->
		<rule context="//hl7:act">
			<let name="mood_act" value="@moodCode"/>
			<let name="class_act" value="@classCode"/>
			<assert test="$mood_act='EVN'"
			>Errore-50| L'attributo "@moodCode" dell'elemento "Act" deve essere valorizzato con "EVN" </assert>
			<assert test="$class_act='ACT'"
			>Errore-51| L'attributo "@classCode" dell'elemento "Act" deve essere valorizzato con "ACT" </assert>
		</rule>
		
		<!--Verifica che i codici relativi al CodeSystem "UCUM" utilizzati siano corretti-->
		<!--rule context="//*[@unit]">
			<let name="val_UCUM" value="@unit"/>
			<assert test="doc('DIZ/XML_FSE_v1/2.16.840.1.113883.4.642.3.912.xml')//el[@code=$val_UCUM]"
			>ERRORE-52| Codice UCUM <value-of select="$val_UCUM"/> errato
			</assert>
		</rule-->
		
		
		
	<!-- _____________________________________________ BODY______________________________________________________-->
	  
		
		<rule context="hl7:ClinicalDocument/hl7:component/hl7:structuredBody">
		                             <!--Controllo sulle Section obbligatorie-->
			<!-- Motivo del Ricovero-->
			<assert test="count(hl7:component/hl7:section/hl7:code[@code='46241-6'][@codeSystem='2.16.840.1.113883.6.1'])=1"
			>ERRORE-b1| Sezione Motivo del Ricovero: la sezione DEVE essere presente</assert>
			<assert test="count(hl7:component/hl7:section[hl7:code[@code='46241-6']]/hl7:text)=1"
			>ERRORE-b2| Sezione Motivo del Ricovero: la sezione deve contenere l'elemento 'text'</assert>
					
			<!--Decorso Ospedaliero-->
			<assert test="count(hl7:component/hl7:section/hl7:code[@code='8648-8'][@codeSystem='2.16.840.1.113883.6.1'])=1"
			>ERRORE-b3| Sezione Decorso Ospedaliero: la sezione DEVE essere presente</assert>
			<assert test="count(hl7:component/hl7:section[hl7:code[@code='8648-8']]/hl7:text)=1"
			>ERRORE-b4| Sezione Decorso Ospedaliero: La sezione deve contenere l'elemento 'text'</assert>
			
			<!--Condizioni del paziente e diagnosi alla dimissione-->
			<assert test="count(hl7:component/hl7:section/hl7:code[@code='11535-2'][@codeSystem='2.16.840.1.113883.6.1'])=1"
			>ERRORE-b5| Sezione Condizioni del paziente e diagnosi alla dimissione: la sezione DEVE essere presente</assert>
			<assert test="count(hl7:component/hl7:section[hl7:code[@code='11535-2']]/hl7:text)=1"
			>ERRORE-b6| Sezione Condizioni del paziente e diagnosi alla dimissione: La sezione DEVE contenere l'elemento 'text'</assert>
			<report test="not(count(hl7:component/hl7:section[hl7:code[@code='11535-2']]/hl7:entry)&gt;=1)"
			>W003|  Sezione Condizioni del paziente e diagnosi alla dimissione: La sezione PUO' contenere l'elemento 'entry' </report>
		   
                                        
									<!--Controllo sulle Section opzionali-->
		   	<!--Inquadramento Clinico Iniziale-->
			<assert test="count(hl7:component/hl7:section[hl7:code[@code='47039-3']])=0 or count(hl7:component/hl7:section[hl7:code[@code='47039-3']]/hl7:text)=1"
			>ERRORE-b7| Sezione Inquadramento Clinico Iniziale: deve contenere l'elemento 'text'</assert>
			
			<!--Complicanze-->
			<assert test="count(hl7:component/hl7:section[hl7:code[@code='55109-3']])=0 or count(hl7:component/hl7:section[hl7:code[@code='55109-3']]/hl7:text)=1"
			>ERRORE-b8| Sezione Complicanze: deve contenere l'elemento "text"</assert>
			
			<!--Riscontri e accertamenti significativi-->
			<assert test="count(hl7:component/hl7:section[hl7:code[@code='11493-4']])=0 or count(hl7:component/hl7:section[hl7:code[@code='11493-4']]/hl7:text)=1"
			>ERRORE-b9| Sezione Riscontri ed accertamenti significativi: deve contenere l'elemento 'text'</assert>
			
			<!--Consulenza-->
			<assert test="count(hl7:component/hl7:section[hl7:code[@code='34104-0']])=0 or count(hl7:component/hl7:section[hl7:code[@code='34104-0']]/hl7:text)=1"
			>ERRORE-b10| Sezione Consulenza: deve contenere l'elemento 'text'</assert>
			
			<!--Esami eseguiti durante il ricovero-->
			<assert test="count(hl7:component/hl7:section[hl7:code[@code='30954-2']])=0 or count(hl7:component/hl7:section[hl7:code[@code='30954-2']]/hl7:text)=1"
			>ERRORE-b11| Sezione Esami eseguiti durante il ricovero: deve contenere l'elemento "text" </assert>
		   
		   <!--Procedure Eseguite durante il ricovero-->
			<assert test="count(hl7:component/hl7:section[hl7:code[@code='47519-4']])=0 or count(hl7:component/hl7:section[hl7:code[@code='47519-4']]/hl7:text)=1"
			>ERRORE-b12| Sezione Procedure Eseguite durante il ricovero: deve contenere l'elemento 'text'</assert>
			
		   	<!--Allergie-->
			<assert test="count(hl7:component/hl7:section[hl7:code[@code='48765-2']])=0 or count(hl7:component/hl7:section[hl7:code[@code='48765-2']]/hl7:text)=1"
			>ERRORE-b13| Sezione Allergie: deve contenere l'elemento "text" </assert>
			
			<!--Terapia farmacologica effettuata durante il ricovero-->
			<assert test="count(hl7:component/hl7:section[hl7:code[@code='10160-0']])=0 or count(hl7:component/hl7:section[hl7:code[@code='10160-0']]/hl7:text)=1"
			>ERRORE-b14| Sezione Terapia farmacologica effettuata durante il ricovero: deve contenere l'elemento "text" </assert>	
		  		   
		    <!--Terapia farmacologica alla dimissione-->
			 <assert test="count(hl7:component/hl7:section[hl7:code[@code='10183-2']])=0 or count(hl7:component/hl7:section[hl7:code[@code='10183-2']]/hl7:text)=1"
			 >ERRORE-b15| Sezione Terapia farmacologica alla dimissione: deve contenere l'elemento "text" </assert>
			 
			 <!--Istruzioni di follow-up-->
			 <assert test="count(hl7:component/hl7:section[hl7:code[@code='18776-5']])=0 or count(hl7:component/hl7:section[hl7:code[@code='18776-5']]/hl7:text)=1"
			 >ERRORE-b16| Sezione Istruzioni di follow-up: deve contenere l'elemento 'text'</assert>

		</rule>

		<!--Controllo sui codici delle Section-->
		<rule context="hl7:ClinicalDocument/hl7:component/hl7:structuredBody/hl7:component/hl7:section">
		
			<let name="codice" value="hl7:code/@code"/>
			<assert test="count(hl7:code[@code='46241-6'][@codeSystem='2.16.840.1.113883.6.1'])=1 or count(hl7:code[@code='47039-3'][@codeSystem='2.16.840.1.113883.6.1'])=1 or count(hl7:code[@code='8648-8'][@codeSystem='2.16.840.1.113883.6.1'])=1 
			or count(hl7:code[@code='55109-3'][@codeSystem='2.16.840.1.113883.6.1'])=1 or count(hl7:code[@code='11493-4'][@codeSystem='2.16.840.1.113883.6.1'])=1 or count(hl7:code[@code='34104-0'][@codeSystem='2.16.840.1.113883.6.1'])=1 
			or count(hl7:code[@code='30954-2'][@codeSystem='2.16.840.1.113883.6.1'])=1 or count(hl7:code[@code='47519-4'][@codeSystem='2.16.840.1.113883.6.1'])=1 or count(hl7:code[@code='48765-2'][@codeSystem='2.16.840.1.113883.6.1'])=1 or count(hl7:code[@code='10160-0'][@codeSystem='2.16.840.1.113883.6.1'])=1 
			or count(hl7:code[@code='11535-2'][@codeSystem='2.16.840.1.113883.6.1'])=1 or count(hl7:code[@code='10183-2'][@codeSystem='2.16.840.1.113883.6.1'])=1 or count(hl7:code[@code='18776-5'][@codeSystem='2.16.840.1.113883.6.1'])=1"
			>ERRORE-b17| Il codice '<value-of select="$codice"/>' non è corretto. La sezione deve essere valorizzata con uno dei seguenti codici:
			46241-6	Sezione Motivo del ricovero
			47039-3	Sezione Inquadramento clinico iniziale
			8648-8  Sezione Decorso Ospedaliero
			55109-3 Sezione Complicanze
			11493-4 Sezione Riscontri ed accertamenti significativi
			34104-0 Sezione Consulenza
			30954-2 Sezione Esami eseguiti durante il ricovero
			47519-4 Sezione Procedure eseguite durante il ricovero
			48765-2 Sezione Allergie
			10160-0 Sezione Terapia farmacologica effettuata durante il ricovero
			11535-2 Sezione Condizioni del paziente alla dimissione e diagnosi alla dimissione
			10183-2 Sezione Terapia farmacologica alla dimissione
			18776-5 Sezione Istruzioni di follow-up
			</assert>
		</rule>	
		 
		<!-- Motivo di Ricovero: controllo sulle entry -->
		<rule context="hl7:ClinicalDocument/hl7:component/hl7:structuredBody/hl7:component/hl7:section[hl7:code[@code='46241-6']]/hl7:entry">
		
			<assert test="count(hl7:observation/hl7:code[@code='8646-2'][@codeSystem='2.16.840.1.113883.6.1'])=1"
			>ERRORE-b18| Sezione Motivo di Ricovero: l'elemento entry/observation/code deve avere l'attributo @code='8646-2' e @codeSystem='2.16.840.1.113883.6.1'</assert>
			<assert test="count(hl7:observation/hl7:value)=1"
			>ERRORE-b19| Sezione Motivo di Ricovero: l'elemento entry/observation DEVE contenere l'elemento value che dettaglia il Motivo del Ricovero</assert>
			<assert test="count(hl7:observation/hl7:value[@codeSystem='2.16.840.1.113883.6.103'])=1"
			>ERRORE-b20| Sezione Motivo di Ricovero: l'elemento entry/observation/value  DEVE  essere valorizzato attraverso il dizionario ICD9-CM </assert>
		</rule>
		
		<!--Inquadramento Clinico Iniziale: Controllo sulle sotto-sezioni opzionali (Anamnesi, Esame Obiettivo, Terapia Farmacoloica all'ingresso)-->
		<rule context="hl7:ClinicalDocument/hl7:component/hl7:structuredBody/hl7:component/hl7:section[hl7:code[@code='47039-3']]/hl7:component">
		
			<!--Anamnesi-->
			<assert test="count(hl7:section[hl7:code[@code='11329-0']])=0 or count(hl7:section[hl7:code[@code='11329-0']]/hl7:text)=1"
			>ERRORE-b21| Sotto-sezione Anamnesi: deve contenere l'elemento 'text'</assert>
			<!--Esame Obiettivo-->
			<assert test="count(hl7:section[hl7:code[@code='29545-1']])=0 or count(hl7:section[hl7:code[@code='29545-1']]/hl7:text)=1"
			>ERRORE-b22| Sotto-sezione Esame Obiettivo: deve contenere l'elemento 'text'</assert>
			<!--Terapia Farmacologica all'ingresso-->
			<assert test="count(hl7:section[hl7:code[@code='42346-7']])=0 or count(hl7:section[hl7:code[@code='42346-7']]/hl7:text)=1"
			>ERRORE-b23| Sotto-sezione Terapia Farmacologica all'ingresso: deve contenere l'elemento 'text'</assert>
		</rule>
		
			<!--Anamnesi: controllo sulle entry-->
			<rule context="hl7:ClinicalDocument/hl7:component/hl7:structuredBody/hl7:component/hl7:section[hl7:code[@code='47039-3']]/hl7:component/hl7:section[hl7:code[@code='11329-0']]/hl7:entry">

				<assert test="count(hl7:observation/hl7:code[@code='75326-9'][@codeSystem='2.16.840.1.113883.6.1'])=1"
				>ERRORE-b24| Sotto-sezione Anamnesi: l'elemento entry/observation/code deve avere gli attributi @code='75326-9' e @codeSystem='2.16.840.1.113883.6.1'</assert>
				<assert test="count(hl7:observation/hl7:statusCode[@code='completed'])=1"
				>ERRORE-b25| Sotto-sezione Anamnesi: l'elemento entry/observation/statusCode deve avere l'attributo @code='completed'</assert>
				<assert test="count(hl7:observation/hl7:effectiveTime/hl7:low)=1"
				>ERRORE-b26| Sotto-sezione Anamnesi: l'elemento entry/observation/effectiveTime deve essere presente e deve avere l'elemento 'low' valorizzato</assert>
				<assert test="count(hl7:observation/hl7:value[@xsi:type='CD'])=1"
				>ERRORE-b27| Sotto-sezione Anamnesi: l'elemento entry/observation/value deve avere l'attributo @xsi:type="CD" </assert>
				<assert test="(count(hl7:observation/hl7:value/@code)=0 and count(hl7:observation/hl7:value/hl7:originalText/hl7:reference)=1) or
				count(hl7:observation/hl7:value/@code)=1"
				>ERRORE-b28| Sotto-sezione Anamnesi: nel caso di 'value' non codificato (in entry/observation), deve essere valorizzato l'elemento 'originalText/reference'</assert>
					
			</rule>
		
			<!--Anamnesi: Cronicità e Stato Clinico della patologia (entry/observation/entryRelationship/observation)-->
			<rule context="hl7:ClinicalDocument/hl7:component/hl7:structuredBody/hl7:component/hl7:section[hl7:code[@code='47039-3']]/hl7:component/hl7:section[hl7:code[@code='11329-0']]/hl7:entry/hl7:observation/hl7:entryRelationship">
				
				<assert test="(count(hl7:observation/hl7:code[@code='89261-2'][@codeSystem='2.16.840.1.113883.6.1'])=1 or
				count(hl7:observation/hl7:code[@code='33999-4'][@codeSystem='2.16.840.1.113883.6.1'])=1)"
				>ERRORE-b29| Sotto-sezione Anamnesi: l'elemento entry/observation/entryRelationship/observation/code deve avere l'attributo @code valorizzato con:
				"89261-2" per "Dettaglio Cronicità patologia"
				"33999-4" per "Dettaglio Stato patologia"
				</assert>
				<assert test="count(hl7:observation[hl7:code[@code='89261-2']]/hl7:value)=0 or 
				(count(hl7:observation[hl7:code[@code='89261-2']]/hl7:value[@codeSystem='2.16.840.1.113883.6.1'])=1 or 
				count(hl7:observation[hl7:code[@code='89261-2']]/hl7:value[@codeSystem='2.16.840.1.113883.2.9.77.22.11.10'])=1)"
				>ERRORE-b30| Sotto-sezione Anamnesi: l'elemento 'value' relativo alla Cronicità deve essere valorizzato secondo il Value set "CronicitàProblema"</assert>
				
				<assert test="count(hl7:observation[hl7:code[@code='89261-2']]/hl7:value)=0 or 
				(count(hl7:observation[hl7:code[@code='89261-2']]/hl7:value[@code='LA28752-6'])=1 or
				count(hl7:observation[hl7:code[@code='89261-2']]/hl7:value[@code='LA18821-1'])=1)"
				>ERRORE-b30a| Sotto-sezione Anamnesi: l'attributo @code di entry/observation/entryRelationship/observation/value relativo alla Cronicità deve essere valorizzato con:
				- "LA28752-6" se "chronic";
				- "LA18821-1" se "acute".
				</assert>
					
				<!--per il controllo inerente al sistema di codifica da utilizzare, c'è la possibilità di usare anche sistemi di codifica locali-->
				<assert test="count(hl7:observation[hl7:code[@code='33999-4']]/hl7:value)=0 or 
				(count(hl7:observation[hl7:code[@code='33999-4']]/hl7:value[@codeSystem='2.16.840.1.113883.6.1'])=1 or 
				count(hl7:observation[hl7:code[@code='33999-4']]/hl7:value[@codeSystem='2.16.840.1.113883.2.9.77.22.11.7'])=1)"
				>ERRORE-b31| Sotto-sezione Anamnesi: l'elemento 'value' relativo allo Stato Clinico della patologia deve essere valorizzato secondo il Value set "StatoClinicoProblema"</assert>
				
				<assert test="count(hl7:observation[hl7:code[@code='33999-4']]/hl7:value)=0 or 
				(count(hl7:observation[hl7:code[@code='33999-4']]/hl7:value[@code='LA16666-2'])=1 or
				count(hl7:observation[hl7:code[@code='33999-4']]/hl7:value[@code='LA18632-2'])=1)"
				>ERRORE-b31a| Sotto-sezione Anamnesi: l'attributo @code di entry/observation/entryRelationship/observation/value relativo allo Stato Clinico della patologia deve essere valorizzato con:
				- "LA16666-2" se "active";
				- "LA18632-2" se "inactive".
				</assert>
					
			</rule>
		
		<!--Complicanze: controllo sui sotto-elementi di entry-->
		<rule context="hl7:ClinicalDocument/hl7:component/hl7:structuredBody/hl7:component/hl7:section[hl7:code[@code='55109-3']]/hl7:entry">
			
			<assert test="count(hl7:observation/hl7:code[@code='75326-9'][@codeSystem='2.16.840.1.113883.6.1'])=1"
			>ERRORE-b32| Sezione Complicanze:l'elemento entry DEVE contenere al suo interno un observation che valorizza  l'elemento "code" con attributi @code='75326-9' e @codeSystem='2.16.840.1.113883.6.1 </assert>
			<assert test="count(hl7:observation/hl7:value)=1"
			>ERRORE-b33| Sezione Complicanze: entry/observation deve contenere l'elemento "value"</assert>
		</rule>
		
		<!--Consulenza: controllo sui sotto elementi di entry-->
		<rule context="hl7:ClinicalDocument/hl7:component/hl7:structuredBody/hl7:component/hl7:section[hl7:code[@code='34104-0']]/hl7:entry">	

			<assert test="count(hl7:observation/hl7:value)=1"
			>ERRORE-b34| Sezione Consulenza: l'elemento entry/observation DEVE contenere l'elemento 'value'</assert>
		</rule>
		
			<!--Consulenza: controllo sui sotto elementi del performer-->
			<rule context="hl7:ClinicalDocument/hl7:component/hl7:structuredBody/hl7:component/hl7:section[hl7:code[@code='34104-0']]/hl7:entry/hl7:observation/hl7:performer">
				
				<assert test="count(hl7:assignedEntity/hl7:assignedPerson/hl7:name)=1"
				>ERRORE-b35| Sezione Consulenza: l'elemento entry/observation/performer/assignedEntity/assignedPerson DEVE contenere l'elemento name</assert>
				<assert test="count(hl7:assignedEntity/hl7:assignedPerson/hl7:name/hl7:given)=1 and 
				count(hl7:assignedEntity/hl7:assignedPerson/hl7:name/hl7:family)=1"
				>ERRORE-b36| Sezione Consulenza: se presente section/entry/observation/performer/assignedEntity/assignedPerson/name deve contenere gli elementi "given" e "family" </assert>
				
			</rule>
			<!--Consulenza: controllo sui sotto elementi del participant-->
			<rule context="hl7:ClinicalDocument/hl7:component/hl7:structuredBody/hl7:component/hl7:section[hl7:code[@code='34104-0']]/hl7:entry/hl7:observation/hl7:participant">
				
				<assert test="count(hl7:participantRole)=1 and count(hl7:participantRole/hl7:id)>=1"
				>ERRORE-b37| Sezione Consulenza: l'elemento entry/observation/participant DEVE contenere l'elemento 'participantRole' e almeno un elemento 'id'</assert>
				<assert test="count(hl7:participantRole/hl7:playingEntity/hl7:name)=1"
				>ERRORE-b38| Sezione Consulenza: l'elemento entry/observation/participant/participantRole/playingEntity DEVE contenere l'elemento name</assert>
				<assert test="count(hl7:participantRole/hl7:playingEntity/hl7:name/hl7:given)=1 and 
				count(hl7:participantRole/hl7:playingEntity/hl7:name/hl7:family)=1"
				>ERRORE-b39| Sezione Consulenza: se presente section/entry/observation/participant/participantRole/playingEntity/name deve contenere gli elementi "given" e "family" </assert>
			
			</rule>
			
		<!--Esami eseguiti durante il ricovero: controllo sui sotto elementi di entry-->	
		<rule context="hl7:ClinicalDocument/hl7:component/hl7:structuredBody/hl7:component/hl7:section[hl7:code[@code='30954-2']]/hl7:entry">
		
			<assert test="count(hl7:observation)=1"
			>ERRORE-b40| Sezione Esami eseguiti durante il ricovero: se presente l'elemento section/entry, deve contenere l'elemento "observation" </assert>
			<!--assert test="count(hl7:observation/hl7:code[@codeSystem='2.16.840.1.113883.6.1'])=1 or 
			count(hl7:observation/hl7:code[@codeSystem='2.16.840.1.113883.6.103'])=1"
			>ERRORE-87| Sezione Esami eseguiti durante il ricovero: l'entry/observation/code può essere valorizzato secondo i sistemi di codifica
			LOINC @codeSystem='2.16.840.1.113883.6.1'
			ICD-9-CM @codeSystem='2.16.840.1.113883.6.103'</assert-->
			<report test="not(count(hl7:observation/hl7:code[@codeSystem='2.16.840.1.113883.6.1'])=1) and 
			not(count(hl7:observation/hl7:code[@codeSystem='2.16.840.1.113883.6.103'])=1)"
			>W004 | Sezione Esami eseguiti durante il ricovero: l'entry/observation/code può essere valorizzato secondo i sistemi di codifica
			LOINC @codeSystem='2.16.840.1.113883.6.1'
			ICD-9-CM @codeSystem='2.16.840.1.113883.6.103'</report>
		</rule>
		
			<!--Esami eseguiti durante il ricovero: controllo sui sotto elementi di performer-->
			<rule context="hl7:ClinicalDocument/hl7:component/hl7:structuredBody/hl7:component/hl7:section[hl7:code[@code='30954-2']]/hl7:entry/hl7:observation/hl7:performer">
				
				<assert test="count(hl7:assignedEntity/hl7:assignedPerson/hl7:name)=1"
				>ERRORE-b41| Sezione Esami eseguiti durante il ricovero: section/entry/observation/performer/assignedEntity/assignedPerson deve avere l'elemento "name" </assert>
				<assert test="count(hl7:assignedEntity/hl7:assignedPerson/hl7:name/hl7:given)=1 and count(hl7:assignedEntity/hl7:assignedPerson/hl7:name/hl7:family)=1"
				>ERRORE-b42| Sezione Esami eseguiti durante il ricovero: section/entry/observation/performer/assignedEntity/assignedPerson/name deve contenere gli elementi "given" e "family" </assert>
			</rule>
		
			<!--Esami eseguiti durante il ricovero: controllo sui sotto elementi di participant-->
			<rule context="hl7:ClinicalDocument/hl7:component/hl7:structuredBody/hl7:component/hl7:section[hl7:code[@code='30954-2']]/hl7:entry/hl7:observation/hl7:participant">
				
				<assert test="count(hl7:participantRole/hl7:id)>=1"
				>ERRORE-b43| Sezione Esami eseguiti durante il ricovero: se presente section/entry/observation/participant deve avere l'elemento "participantRole/id" </assert>
				<assert test="count(hl7:participantRole/hl7:playingEntity/hl7:name)=1"
				>ERRORE-b44| Sezione Esami eseguiti durante il ricovero: se presente section/entry/observation/participant/participantRole/playingEntity deve avere l'elemento "name" </assert>
				<assert test="count(hl7:participantRole/hl7:playingEntity/hl7:name/hl7:family)=1 and count(hl7:participantRole/hl7:playingEntity/hl7:name/hl7:given)=1"
				>ERRORE-b45| Sezione Esami eseguiti durante il ricovero: se presente section/entry/observation/participant/participantRole/playingEntity/name deve contenere gli elementi "given" e "family" </assert>
			</rule>
	
		<!--Procedure eseguite durante il ricovero: controllo sulle entry-->
		<rule context="hl7:ClinicalDocument/hl7:component/hl7:structuredBody/hl7:component/hl7:section[hl7:code[@code='47519-4']]/hl7:entry">
			
			<assert test="count(hl7:procedure/hl7:code[@codeSystem='2.16.840.1.113883.6.1'])=1 or
			count(hl7:procedure/hl7:code[@codeSystem='2.16.840.1.113883.6.103'])=1 or count(hl7:procedure/hl7:code[@codeSystem='2.16.840.1.113883.2.9.77.22.11.12'])=1"
			>ERRORE-b46|Sezione Procedure Eseguite durante il ricovero: l'elemento entry/procedure/code deve essere valorizzato con uno dei seguenti sistemi di codifica:
			  -2.16.840.1.113883.6.1
			  -2.16.840.1.113883.6.103
			  -2.16.840.1.113883.2.9.77.22.11.12
			</assert>
		</rule>	
		<rule context="hl7:ClinicalDocument/hl7:component/hl7:structuredBody/hl7:component/hl7:section[hl7:code[@code='47519-4']]/hl7:entry/hl7:procedure/hl7:entryRelationship">
		
			<assert test="@typeCode='RSON'"
			>ERRORE-b47|Sezione Procedure Eseguite durante il ricovero: L'elemento proceduere/entryRelationship, deve avere un attributo @typeCode='RSON' </assert>
			<assert test="count(hl7:observation)=1"
			>ERRORE-b48| Sezione Procedure Eseguite durante il ricovero: L'elemento proceduere/entryRelationship, deve avere un elemento 'observation'.</assert>
			<report test="not(count(hl7:observation/hl7:code[@codeSystem='2.16.840.1.113883.6.103'])=1)"
			>W005| Si consiglia di valorizzare l'attributo @codeSystem dell'elemento procedure/entryRelationship/observation/code con il sistema di codifica ICD-9-CM (@codesystem='2.16.840.1.113883.6.103')--> </report>
		</rule>
		
		<!--Allergie-->	
		<rule context="hl7:ClinicalDocument/hl7:component/hl7:structuredBody/hl7:component/hl7:section[hl7:code[@code='48765-2']]/hl7:entry">
		
			<assert test="count(hl7:act)=1"
			>ERRORE-b49| Sezione Allergie: la sezione deve contenere l'elemento entry di tipo 'act'</assert>
			<let name="status" value="hl7:act/hl7:statusCode/@code"/>
			
			<assert test="count(hl7:act)=0 or 
			$status='active' or $status='completed' or $status='aborted' or $status='suspended'"
			>ERRORE-b50| Sezione Allergie: l'elemento 'statusCode' deve essere valorizzato secondo il value set ActStatus: 'active'|'completed'|'aborted'|'suspended'</assert>
			<assert test="count(hl7:act)=0 or count(hl7:act/hl7:effectiveTime/hl7:low)=1"
			>ERRORE-b51| Sezione Allergie: l'elemento 'effectiveTime' deve essere presente e deve avere l'elemento 'low' valorizzato</assert>
			<assert test="count(hl7:act)=0 or ($status='completed' and count(hl7:act/hl7:effectiveTime/hl7:high)=1) or
					($status='aborted' and count(hl7:act/hl7:effectiveTime/hl7:high)=1) or 
					($status='suspended' and count(hl7:act/hl7:effectiveTime/hl7:high)=0) or 
					($status='active' and count(hl7:act/hl7:effectiveTime/hl7:high)=0)"
			>ERRORE-b52| Sezione Allergie: l'elemento 'effectiveTime/high' deve essere presente nel caso in cui lo 'statusCode' sia 'completed'oppure'aborted'</assert>
			<assert test="count(hl7:act)=0 or count(hl7:act/hl7:entryRelationship/hl7:observation/hl7:code[@code='52473-6'][@codeSystem='2.16.840.1.113883.6.1'])=1"
			>ERRORE-b53| Sezione Allergie: l'entry/act deve includere uno ed un solo elemento entryRelationship/observation con attributo @code='52473-6'</assert>	
			<assert test="count(hl7:act/hl7:entryRelationship/hl7:observation/hl7:text)=0 or 
						count(hl7:act/hl7:entryRelationship/hl7:observation/hl7:text/hl7:reference/@value)=1"
			>ERRORE-b54| Sezione Allergie: l'entry/act/entryRelationship/observation/text/reference/value deve essere valorizzato con l'URI che punta alla descrizione di allarme, allergia o intolleranza nel narrative block della sezione </assert>
			<assert test="count(hl7:act)=0 or count(hl7:act/hl7:entryRelationship/hl7:observation/hl7:statusCode[@code='completed'])=1"
			>ERRORE-b55| Sezione Allergie: l'elemento entry/act/entryRelationship/observation/statusCode/@code deve assumere il valore costante 'completed'</assert>
			<assert test="count(hl7:act)=0 or count(hl7:act/hl7:entryRelationship/hl7:observation/hl7:effectiveTime/hl7:low)=1"
			>ERRORE-b56| Sezione Allergie: l'elemento 'effectiveTime' deve essere presente e deve avere l'elemento 'low' valorizzato </assert>
			<assert test="count(hl7:act/hl7:entryRelationship/hl7:observation/hl7:value)=0 or 
						count(hl7:act/hl7:entryRelationship/hl7:observation/hl7:value[@xsi:type='CD'])=1"
			>ERRORE-b57| Sezione Allergie: l'elemento entry/act/entryRelationship/observation/value deve avere l'attributo @xsi:type='CD'</assert>
			<assert test="count(hl7:act/hl7:entryRelationship/hl7:observation/hl7:value/@code)=0 or 
						count(hl7:act/hl7:entryRelationship/hl7:observation/hl7:value[@codeSystem='2.16.840.1.113883.5.4' or @codeSystem='2.16.840.1.113883.1.11.19700'])=1"
			>ERRORE-b58| Sezione Allergie: l'elemento entry/act/entryRelationship/observation/value codificato, deve avere l'attributo @code valorizzato secondo il 
			value set "ObservationIntoleranceType" (@codeSystem=2.16.840.1.113883.1.11.19700) oppure il dizionario "ActCode" (@codeSystem=2.16.840.1.113883.5.4).</assert>
			<assert test="count(hl7:act)=0 or count(hl7:act/hl7:entryRelationship/hl7:observation/hl7:value/@code)=1 or 
						count(hl7:act/hl7:entryRelationship/hl7:observation/hl7:value/hl7:originalText/hl7:reference)=1"
			>ERRORE-b59| Sezione Allergie: l'elemento entry/act/entryRelationship/observation/value non codificato, deve avere l'elemento originalText/reference valorizzato </assert>
			<assert test="count(hl7:act/hl7:entryRelationship/hl7:observation/hl7:value/hl7:originalText)=0 or 
						count(hl7:act/hl7:entryRelationship/hl7:observation/hl7:value/hl7:originalText/hl7:reference/@value)=1"
			>ERRORE-b60| Sezione Allergie: entry/act/entryRelationship/observation/value/originalText/reference/value deve essere valorizzato con l'URI che punta alla descrizione del concetto espresso all'interno del narrative block </assert>
			<assert test="count(hl7:act)=0 or count(hl7:act/hl7:entryRelationship/hl7:observation/hl7:participant)>=1"
			>ERRORE-b61| Sezione Allergie: entry/act/entryRelationship/observation deve contenere almeno un elemento 'participant'</assert>
			<assert test="(count(hl7:act/hl7:entryRelationship/hl7:observation/hl7:entryRelationship[@typeCode='SUBJ']/hl7:observation)&lt;=1)"
			>ERRORE-b62| Sezione Allergie: entry/act/entryRelationship/observation deve contenere solo un elemento 'entryRelationship/observation' relativo alla Criticità</assert>
			<assert test="(count(hl7:act/hl7:entryRelationship/hl7:observation/hl7:entryRelationship[@typeCode='REFR']/hl7:observation)&lt;=1)"
			>ERRORE-b63| Sezione Allergie: entry/act/entryRelationship/observation deve contenere solo un elemento 'entryRelationship/observation' relativo allo Stato dell'allergia</assert>
			<assert test="(count(hl7:act/hl7:entryRelationship/hl7:observation/hl7:entryRelationship[@typeCode='SUBJ']/hl7:act)&lt;=1)"
			>ERRORE-b64| Sezione Allergie: entry/act/entryRelationship/observation deve contenere solo un elemento 'entryRelationship/act' relativo ai Commenti</assert>
			
		</rule>
		
			<!--Descrizione Agente-->
			<rule context="hl7:ClinicalDocument/hl7:component/hl7:structuredBody/hl7:component/hl7:section[hl7:code[@code='48765-2']]/hl7:entry/hl7:act/hl7:entryRelationship/hl7:observation/hl7:participant">
				
				<!--Descrizione Agente Codificato-->
				<assert test="count(hl7:participantRole/hl7:playingEntity/hl7:code[@codeSystem='2.16.840.1.113883.6.73'])=1 or
					count(hl7:participantRole/hl7:playingEntity/hl7:code[@codeSystem='2.16.840.1.113883.2.9.6.1.5'])=1 or
					count(hl7:participantRole/hl7:playingEntity/hl7:code[@codeSystem='2.16.840.1.113883.2.9.77.22.11.2'])=1"
					>ERRORE-b65| Sezione Allergie: l'elemento participant/participantRole/playingEntity deve avere l'attributo code/@codeSystem valorizzato come segue:
					- '2.16.840.1.113883.6.73' per la codifica "WHO ATC"
					- '2.16.840.1.113883.2.9.6.1.5' per la codifica "AIC"
					- '2.16.840.1.113883.2.9.77.22.11.2' per il value set "AllergenNoDrugs" (- per le allergie non a farmaci –)
				</assert>
			</rule>
			
			<!--Descrizione Reazione-->
			<rule context="hl7:ClinicalDocument/hl7:component/hl7:structuredBody/hl7:component/hl7:section[hl7:code[@code='48765-2']]/hl7:entry/hl7:act/hl7:entryRelationship/hl7:observation/hl7:entryRelationship[@typeCode='MFST']">	
				
				<assert test="count(hl7:observation/hl7:code[@code='75321-0'][@codeSystem='2.16.840.1.113883.6.1'])=1"
				>ERRORE-b66| Sezione Allergie: entryRelationship/observation (Descrizione Reazioni) deve avere un elemento 'code' con gli attributi @code=75321-0' e @codeSystem='2.16.840.1.113883.6.1' e @displayName='Obiettività Clinica'</assert>
				<assert test="count(hl7:observation/hl7:effectiveTime/hl7:low)=1"
				>ERRORE-b67| Sezione Allergie: L'entryRelationship/observation (Descrizione Reazioni) deve avere un 'effectiveTime' con l'elemento 'low' valorizzato</assert>
		
				<!--Descrizione Reazione Codificata-->
				<assert test="count(hl7:observation/hl7:value)=0 or	count(hl7:observation/hl7:value[@xsi:type='CD'])=1"
				>ERRORE-b68| Sezione Allergie: l'elemento 'value' di entryRelationship/observation (Descrizione Reazioni) deve avere l'attributo @xsi:type='CD'</assert>
				<assert test="count(hl7:observation/hl7:value)=0 or
							(count(hl7:observation/hl7:value/@code)=0 and count(hl7:observation/hl7:value/hl7:originalText/hl7:reference)=1) or
							(count(hl7:observation/hl7:value/@code)=1 and (count(hl7:observation/hl7:value/hl7:originalText/hl7:reference)&lt;=1))"
				>ERRORE-b69| Sezione Allergie: nel caso di 'value' non codificato (in Descrizione Reazioni), questo deve avere l'elemento originalText/reference valorizzato</assert>
				<assert test="count(hl7:observation/hl7:value/@code)=0 or
							(count(hl7:observation/hl7:value[@codeSystem='2.16.840.1.113883.2.9.77.22.11.4'])=1 or 
							count(hl7:observation/hl7:value[@codeSystem='2.16.840.1.113883.2.9.77.22.11.3'])=1 or 
							count(hl7:observation/hl7:value[@codeSystem='2.16.840.1.113883.6.103'])=1)"
				>ERRORE-b70| Sezione Allergie: entryRelationship/observation/value (in Descrizione Reazioni) deve avere l'attributo @codeSystem valorizzato come segue:
				- "2.16.840.1.113883.2.9.77.22.11.4" per le reazioni da allergia 
				- "2.16.840.1.113883.2.9.77.22.11.3" per le reazioni da intolleranza 
				- "2.16.840.1.113883.6.103" per le reazioni riportate nel sistema ICD-9-CM
				</assert>
			</rule>
		
			<!--Criticità dell'allergia o intolleranza-->
			<rule context="hl7:ClinicalDocument/hl7:component/hl7:structuredBody/hl7:component/hl7:section[hl7:code[@code='48765-2']]/hl7:entry/hl7:act/hl7:entryRelationship/hl7:observation/hl7:entryRelationship[@typeCode='SUBJ'][hl7:observation]">
				
				<assert test="count(hl7:observation/hl7:code[@codeSystem='2.16.840.1.113883.5.4'])=1"
				>ERRORE-b71| Sezione Allergie: entryRelationship/observation (Criticità dell'allergia) deve avere l'attributo @codesystem='2.16.840.1.113883.5.4'</assert>
				<assert test="count(hl7:observation/hl7:value[@codeSystem='2.16.840.1.113883.5.1063'])=1"
				>ERRORE-b72| Sezione Allergie: entryRelationship/observation/value (Criticità dell'allergia) deve essere valorizzato secondo il value set "CriticalityObservation" @codesystem='2.16.840.1.113883.5.1063'</assert>
				<assert test="count(hl7:observation/hl7:text)=0 or count(hl7:observation/hl7:text/hl7:reference/@value)=1"
				>ERRORE-b73| Sezione Allergie: entry/act/entryRelationship/observation/text/reference/value deve essere valorizzato con l'URI che punta alla descrizione della severità nel narrative block della sezione </assert>	
			</rule>
			
			<!--Stato dell'Allergia-->
			<rule context="hl7:ClinicalDocument/hl7:component/hl7:structuredBody/hl7:component/hl7:section[hl7:code[@code='48765-2']]/hl7:entry/hl7:act/hl7:entryRelationship/hl7:observation/hl7:entryRelationship[@typeCode='REFR']">
				
				<assert test="count(hl7:observation/hl7:code[@code='33999-4'][@codeSystem='2.16.840.1.113883.6.1'])=1"
				>ERRORE-b74| Sezione Allergie: l'elemento 'code' all'interno di entryRelationship/observation (Stato dell'allergia) deve avere l'attributo @code='33999-4' e @codesystem='2.16.840.1.113883.6.1'</assert>
				<assert test="count(hl7:observation/hl7:value[@codeSystem='2.16.840.1.113883.6.1' or @codeSystem='2.16.840.1.113883.2.9.77.22.11.7'])=1"
				>ERRORE-b75| Sezione Allergie: l'elemento 'value' all'interno di entryRelationship/observation (Stato dell'allergia) deve essere valorizzato secondo il value set "StatoClinicoProblema" (@codesystem='2.16.840.1.113883.2.9.77.22.11.7') oppure secondo il dizionario LOINC (@codesystem='2.16.840.1.113883.6.1')</assert>
				
				<assert test="count(hl7:observation/hl7:value[@code='LA16666-2'])=1 or
				count(hl7:observation/hl7:value[@code='LA18632-2'])=1"
				>ERRORE-b75a| Sezione Allergie (stato dell'allergia): il @code di entry/act/entryRelationship/observation/entryRelationship/observation/value deve essere valorizzato con:
				- "LA16666-2" se "active";
				- "LA18632-2" se "inactive".
				</assert>
			</rule>
			
			<!--Commenti-->
			<rule context="hl7:ClinicalDocument/hl7:component/hl7:structuredBody/hl7:component/hl7:section[hl7:code[@code='48765-2']]/hl7:entry/hl7:act/hl7:entryRelationship/hl7:observation/hl7:entryRelationship[@typeCode='SUBJ'][hl7:act]">
				
				<assert test="count(hl7:act/hl7:code[@code='48767-8'][@codeSystem='2.16.840.1.113883.6.1'])=1"
				>ERRORE-b76| Sezione Allergie: l'elemento 'code' all'interno di entryRelationship/act (Commenti) deve avere l'attributo @code='48767-8' e @codeSystem='2.16.840.1.113883.6.1'</assert>
			</rule>
		
		<!--Terapia farmacologica effettuata durante il ricovero: controllo sotto-elementi di entry-->		
		<rule context="hl7:ClinicalDocument/hl7:component/hl7:structuredBody/hl7:component/hl7:section[hl7:code[@code='10160-0']]/hl7:entry">
			
			<assert test="count(hl7:substanceAdministration[@moodCode='EVN'])=1"
			>ERRORE-b77| Sezione Terapia farmacologica effettuata durante il ricovero: se presente section/entry deve avere l'elemento "substanceAdministration" con attributi "classCode=SBADM"e "moodCode=EVN" </assert> 
			<assert test="count(hl7:substanceAdministration/hl7:consumable/hl7:manufacturedProduct/hl7:manufacturedMaterial/hl7:code[@codeSystem='2.16.840.1.113883.2.9.6.1.5'])=1 or
						count(hl7:substanceAdministration/hl7:consumable/hl7:manufacturedProduct/hl7:manufacturedMaterial/hl7:code[@codeSystem='2.16.840.1.113883.6.73'])=1"
			>ERRORE-b78| Sezione Terapia farmacologica effettuata durante il ricovero: l'elemento section/entry/substanceAdministration/consumable/manufacturedProduct/manufacturedMaterial/code deve avere l'attributo "@codeSystem" valorizzato come segue:
			- '2.16.840.1.113883.2.9.6.1.5' codifica "AIC"
			- '2.16.840.1.113883.6.73' codifica "WHO ATC" </assert>
			
			<let name="stats" value="hl7:substanceAdministration/hl7:statusCode/@code"/>
			<assert test="$stats='active' or $stats='completed' or $stats='aborted' or $stats='suspended'"
			>ERRORE-b79| Sezione Terapia farmacologica effettuata durante il ricovero: section/entry/substanceAdministration deve avere l'elemento "statusCode" valorizzato secondo il value set ActStatus: 'active'|'completed'|'aborted'|'suspended'</assert>
			<assert test="count(hl7:substanceAdministration/hl7:effectiveTime[@xsi:type='IVL_TS']/hl7:low)=1"
			>ERRORE-b80| Sezione Terapia farmacologica effettuata durante il ricovero: section/entry/substanceAdministration/effectiveTime deve avere l'elemento 'low' valorizzato </assert>
			<assert test="($stats='completed' and count(hl7:substanceAdministration/hl7:effectiveTime[@xsi:type='IVL_TS']/hl7:high)=1) or
					($stats='aborted' and count(hl7:substanceAdministration/hl7:effectiveTime[@xsi:type='IVL_TS']/hl7:high)=1) or 
					($stats='suspended' and count(hl7:substanceAdministration/hl7:effectiveTime[@xsi:type='IVL_TS']/hl7:high)=0) or 
					($stats='active' and count(hl7:substanceAdministration/hl7:effectiveTime[@xsi:type='IVL_TS']/hl7:high)=0)"
			>ERRORE-b81| Sezione Terapia farmacologica effettuata durante il ricovero: section/entry/substanceAdministration/effectiveTime/high deve essere presente solo nel caso in cui lo 'statusCode' è 'completed'oppure'aborted'</assert>
		</rule>
		
			<!--Terapia farmacologica effettuata durante il ricovero: controllo sotto-elementi di performer-->
			<rule context="hl7:ClinicalDocument/hl7:component/hl7:structuredBody/hl7:component/hl7:section[hl7:code[@code='10160-0']]/hl7:entry/hl7:substanceAdministration/hl7:performer">
			
				<assert test="count(hl7:assignedEntity/hl7:assignedPerson/hl7:name)=1"
				>ERRORE-b82| Sezione Terapia farmacologica effettuata durante il ricovero: se presente section/entry/substanceAdministration/assignedEntity/assignedPerson deve avere l'elemento "name" </assert>
				<assert test="count(hl7:assignedEntity/hl7:assignedPerson/hl7:name/hl7:given)=1 and count(hl7:assignedEntity/hl7:assignedPerson/hl7:name/hl7:family)=1"
				>ERRORE-b83| Sezione Terapia farmacologica effettuata durante il ricovero: se presente section/entry/substanceAdministration/performer/assignedEntity/assignedPerson/name deve contenere gli elementi "given" e "family" </assert>
			</rule>
	
			<!--Terapia farmacologica effettuata durante il ricovero: controllo sotto-elementi di participant-->	
			<rule context="hl7:ClinicalDocument/hl7:component/hl7:structuredBody/hl7:component/hl7:section[hl7:code[@code='10160-0']]/hl7:entry/hl7:substanceAdministration/hl7:participant">
				
				<assert test="count(hl7:participantRole/hl7:id)>=1"
				>ERRORE-b84| Sezione Terapia farmacologica effettuata durante il ricovero: se presente section/entry/substanceAdministration/participant, deve avere almeno un elemento "participantRole/id" </assert>
				<assert test="count(hl7:participantRole/hl7:playingEntity/hl7:name)=1"
				>ERRORE-b85| Sezione Terapia farmacologica effettuata durante il ricovero: se presente section/entry/substanceAdministration/participant/participantRole/playingEntity, deve avere l'elemento "name" </assert>
				<assert test="count(hl7:participantRole/hl7:playingEntity/hl7:name/hl7:given)=1 and count(hl7:participantRole/hl7:playingEntity/hl7:name/hl7:family)=1"
				>ERRORE-b86| Sezione Terapia farmacologica effettuata durante il ricovero: se presente section/entry/substanceAdministration/participant/participantRole/playingEntity/name, deve contenere gli elementi "given" e "family" </assert>
			</rule>
			
			<!--Terapia farmacologica effettuata durante il ricovero: controllo sotto-elementi di entryRelationship-->
			<rule context="hl7:ClinicalDocument/hl7:component/hl7:structuredBody/hl7:component/hl7:section[hl7:code[@code='10160-0']]/hl7:entry/hl7:substanceAdministration/hl7:entryRelationship">
				
				<assert test="count(hl7:observation)=1 or count(hl7:supply)=1"
				>ERRORE-b87| Sezione Terapia farmacologica effettuata durante il ricovero: se presente section/entry/substanceAdministration/entryRelationship  deve contenere uno o più elementi di tipo "observation" o "supply" </assert>
			</rule>
		
		<!--Condizioni paziente diagnosi dimissione-->
		<rule context="hl7:ClinicalDocument/hl7:component/hl7:structuredBody/hl7:component/hl7:section[hl7:code[@code='11535-2']]/hl7:entry">
			
			<assert test="count(hl7:observation)=1"
			>ERRORE-b88| Sezione Condizioni del paziente e diagnosi alla dimissione: la section/entry deve contenere l'elemento 'observation'</assert>
			<assert test="count(hl7:observation/hl7:code[@code='8651-2'][@codeSystem='2.16.840.1.113883.6.1'])=1"
			>ERRORE-b89| Sezione Condizioni del paziente e diagnosi alla dimissione: l'elemento entry/observation/code deve avere l'attributo @code='8651-2' e @codeSystem='2.16.840.1.113883.6.1'</assert>
			<assert test="count(hl7:observation/hl7:value)=0 or count(hl7:observation/hl7:value[@codeSystem='2.16.840.1.113883.6.103'])=1"
			>ERRORE-b90| Sezione Condizioni del paziente e diagnosi alla dimissione: l'elemento entry/observation/value deve avere l'attributo @codeSystem='2.16.840.1.113883.6.103'</assert>
		</rule>
		
		<!--Terapia farmacologica alla dimissione: controllo sotto-elementi di entry-->		
		<rule context="hl7:ClinicalDocument/hl7:component/hl7:structuredBody/hl7:component/hl7:section[hl7:code[@code='10183-2']]/hl7:entry">
		
			<assert test="count(hl7:substanceAdministration[@classCode='SBADM'][@moodCode='INT'])=1"
			>ERRORE-b91|Sezione Terapia farmacologica alla dimissione: se presente section/entry deve avere l'elemento "substanceAdministration" con attributi "classCode=SBADM"e "moodCode=INT" </assert> 
			<assert test="count(hl7:substanceAdministration/hl7:consumable/hl7:manufacturedProduct/hl7:manufacturedMaterial/hl7:code[@codeSystem='2.16.840.1.113883.2.9.6.1.5'])=1 or
						count(hl7:substanceAdministration/hl7:consumable/hl7:manufacturedProduct/hl7:manufacturedMaterial/hl7:code[@codeSystem='2.16.840.1.113883.6.73'])=1 or 
						count(hl7:substanceAdministration/hl7:consumable/hl7:manufacturedProduct/hl7:manufacturedMaterial/hl7:code[@codeSystem='2.16.840.1.113883.2.9.6.1.51'])=1"
			>ERRORE-b92|Sezione Terapia farmacologica alla dimissione: l'elemento section/entry/substanceAdministration/consumable/manufacturedProduct/manufacturedMaterial/code deve avere l'attributo "@codeSystem" valorizzato come segue:
			- '2.16.840.1.113883.2.9.6.1.5' codifica "AIC"
			- '2.16.840.1.113883.6.73' codifica "WHO ATC" 
			- '2.16.840.1.113883.2.9.6.1.51' codifica "GE"
			</assert>
			
			<let name="stscd" value="hl7:substanceAdministration/hl7:statusCode/@code"/>
			<assert test="$stscd='active' or $stscd='completed' or $stscd='aborted' or $stscd='suspended'"
			>ERRORE-b93|Sezione Terapia farmacologica alla dimissione: section/entry/substanceAdministration deve avere l'elemento "statusCode" valorizzato secondo il value set ActStatus: 'active'|'completed'|'aborted'|'suspended'</assert>
			<assert test="count(hl7:substanceAdministration/hl7:effectiveTime[@xsi:type='IVL_TS']/hl7:low)=1"
			>ERRORE-b94|Sezione Terapia farmacologica alla dimissione: section/entry/substanceAdministration/effectiveTime deve avere l'elemento 'low' valorizzato </assert>
			<assert test="($stscd='completed' and count(hl7:substanceAdministration/hl7:effectiveTime[@xsi:type='IVL_TS']/hl7:high)=1) or
					($stscd='aborted' and count(hl7:substanceAdministration/hl7:effectiveTime[@xsi:type='IVL_TS']/hl7:high)=1) or 
					($stscd='suspended' and count(hl7:substanceAdministration/hl7:effectiveTime[@xsi:type='IVL_TS']/hl7:high)=0) or 
					($stscd='active' and count(hl7:substanceAdministration/hl7:effectiveTime[@xsi:type='IVL_TS']/hl7:high)=0)"
			>ERRORE-b95|Sezione Terapia farmacologica alla dimissione: section/entry/substanceAdministration/effectiveTime/high deve essere presente solo nel caso in cui lo 'statusCode' sia 'completed'oppure'aborted'</assert>
		</rule>
		
			<!--Terapia farmacologica effettuata alla dimissione: controllo sotto-elementi di participant-->	
				<rule context="hl7:ClinicalDocument/hl7:component/hl7:structuredBody/hl7:component/hl7:section[hl7:code[@code='10183-2']]/hl7:entry/hl7:substanceAdministration/hl7:participant">
					
					<assert test="count(hl7:participantRole/hl7:id)>=1"
					>ERRORE-b96|Sezione Terapia farmacologica alla dimissione: se presente section/entry/substanceAdministration/participant, deve avere almeno un elemento "participantRole/id" </assert>
					<assert test="count(hl7:participantRole/hl7:playingEntity/hl7:name)=1"
					>ERRORE-b97|Sezione Terapia farmacologica alla dimissione: se presente section/entry/substanceAdministration/participant/participantRole/playingEntity, deve avere l'elemento "name" </assert>
					<assert test="count(hl7:participantRole/hl7:playingEntity/hl7:name/hl7:given)=1 and count(hl7:participantRole/hl7:playingEntity/hl7:name/hl7:family)=1"
					>ERRORE-b98|Sezione Terapia farmacologica alla dimissione: se presente section/entry/substanceAdministration/participant/participantRole/playingEntity/name, deve contenere gli elementi "given" e "family" </assert>
				</rule>
		
			<!--Terapia farmacologica alla dimissione: controllo sotto-elementi di entryRelationship-->
			<rule context="hl7:ClinicalDocument/hl7:component/hl7:structuredBody/hl7:component/hl7:section[hl7:code[@code='10183-2']]/hl7:entry/hl7:substanceAdministration/hl7:entryRelationship">
			
				<assert test="count(hl7:observation)=1 or count(hl7:supply)=1"
				>ERRORE-b99|Sezione Terapia farmacologica alla dimissione: se presente section/entry/substanceAdministration/entryRelationship  deve contenere uno o più elementi di tipo "observation" o "supply" </assert>
			</rule>
		
		
		
	</pattern>
</schema>
	


",
      "subType": "00"
    }
  },
  "version": "3.1",
  "template_id_root": "2.16.840.1.113883.2.9.10.1.5",
  "last_update_date": {
    "$date": "2023-01-16T22:59:19.255Z"
  },
  "deleted": false,
  "last_sync": {
    "$date": "2023-01-16T23:00:03.543Z"
  }
},{
  "_id": {
    "$oid": "63c5d6cad370ce753aa68177"
  },
  "name_schematron": "schematron_PSS_v2.9.sch",
  "content_schematron": {
    "$binary": {
      "base64": "<?xml version="1.0" encoding="UTF-8"?>
<!-- schematron versione:2.9-->
<schema xmlns="http://purl.oclc.org/dsdl/schematron" 
		xmlns:cda="urn:hl7-org:v3"
        xmlns:iso="http://purl.oclc.org/dsdl/schematron"
        xmlns:sch="http://www.ascc.net/xml/schematron"
        queryBinding="xslt2">
	<title>Schematron Profilo Sanitario Sintetico 1.4 </title>
	<ns prefix="hl7" uri="urn:hl7-org:v3"/>
	<ns prefix="xsi" uri="http://www.w3.org/2001/XMLSchema-instance"/>
	<pattern id="all">


<!--_______________________________________________________________HEADER _____________________________________________________________________-->


	<!-- ClinicalDocument -->
		<rule context="hl7:ClinicalDocument">
	        <!--Controllo realmCode-->	
			<assert test="count(hl7:realmCode)>=1"
			>ERRORE-1| L'elemento <name/> DEVE avere almeno un elemento 'realmCode'</assert>
			<assert test="count(hl7:realmCode[@code='IT'])= 1"
			>ERRORE-2| L'elemento 'realmCode' DEVE avere l'attributo @code valorizzato con 'IT'</assert>
			
			
			<!--Controllo templateId-->
			<let name="num_tid" value="count(hl7:templateId)"/>
			<assert test="$num_tid >= 1"
			>ERRORE-3| L'elemento <name/> DEVE avere almeno un elemento di tipo 'templateId'</assert>
			<assert test="count(hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.4.1.1'])= 1 and  count(hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.4.1.1']/@extension)= 1"
			>ERRORE-4| Almeno un elemento <name/>/templateId DEVE essere valorizzato attraverso l'attributo @root='2.16.840.1.113883.2.9.10.1.4.1.1', associato all'attributo @extension che  indica la versione a cui il templateId fa riferimento</assert>
			
			<!--Controllo code-->	
			<assert test="count(hl7:code[@code='60591-5'][@codeSystem='2.16.840.1.113883.6.1']) = 1"
			>ERRORE-5| L'elemento <name/>/code DEVE essere valorizzato con l'attributo @code='60591-5' e il @codeSystem='2.16.840.1.113883.6.1'</assert>
			
			<report test="not(count(hl7:code[@codeSystemName='LOINC'])=1) or not(count(hl7:code[@displayName='Profilo Sanitario Sintetico'])=1 or
			count(hl7:code[@displayName='PROFILO SANITARIO SINTETICO'])=1 or count(hl7:code[@displayName='Profilo sanitario sintetico'])=1)"
			>W001| Si raccomanda di valorizzare gli attributi dell'elemento <name/>/code nel seguente modo: @codeSystemName ='LOINC' e @displayName ='Profilo Sanitario Sintetico'.--> </report>
			
			<!--Controllo confidentialityCode-->
			<assert test="(count(hl7:confidentialityCode[@code='N'][@codeSystem='2.16.840.1.113883.5.25'])= 1) or 
			(count(hl7:confidentialityCode[@code='V'][@codeSystem='2.16.840.1.113883.5.25'])= 1)"
			>ERRORE-6| L'elemento <name/>/confidentialityCode DEVE avere l'attributo @code valorizzato con 'N' o 'V', e il @codeSystem='2.16.840.1.113883.5.25'</assert>
			
			<!--Controllo languageCode-->	
			<assert test="count(hl7:languageCode)=1"
			>ERRORE-7| L'elemento <name/> DEVE contenere un elemento 'languageCode' </assert>
			
			<!--Controllo incrociato tra setId-versionNumber e relatedDocument-->
			<let name="versionNumber" value="hl7:versionNumber/@value"/>
			<assert test="(string(number($versionNumber)) = 'NaN') or
					($versionNumber= 1 and hl7:id/@root = hl7:setId/@root and hl7:id/@extension = hl7:setId/@extension) or
					($versionNumber!= '1' and hl7:id/@root = hl7:setId/@root and hl7:id/@extension != hl7:setId/@extension) or
					(hl7:id/@root != hl7:setId/@root)"
			>ERRORE-8| Se ClinicalDocument.id e ClinicalDocument.setId usano lo stesso dominio di identificazione (@root identico) allora l’attributo @extension del ClinicalDocument.id 
			deve essere diverso da quello del ClinicalDocument.setId a meno che ClinicalDocument.versionNumber non sia uguale ad 1; cioè i valori di setId ed id per un documento clinico possono coincidere solo per la prima versione di un documento</assert>
			
			<assert test="(string(number($versionNumber)) ='NaN') or
						  ($versionNumber=1) or 
						  (($versionNumber &gt;1) and count(hl7:relatedDocument)=1)"
			>ERRORE-9| Se l'attributo <name/>/versionNumber/@value è maggiore di 1, l'elemento <name/> DEVE contenere un elemento di tipo 'relatedDocument'</assert>
			
			<!--Controllo recordTarget-->
			<assert test="count(hl7:recordTarget)=1"
			>ERRORE-10| L'elemento <name/> DEVE contenere un solo elemento 'recordTarget' </assert>
			
	        <!--Controllo recordTarget/patientRole/id-->
			<assert test="count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.4.3.2'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.4.3.15'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.2.10.4.1'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.2.20.4.1'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.2.30.4.1'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.2.41.4.1'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.2.42.4.1'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.2.50.4.1'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.2.60.4.1'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.2.70.4.1'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.2.80.4.1'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.2.90.4.1'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.2.100.4.1'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.2.110.4.1'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.2.120.4.1'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.2.130.4.1'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.2.140.4.1'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.2.150.4.1'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.2.160.4.1'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.2.170.4.1'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.2.180.4.1'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.2.190.4.1'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.2.200.4.1'])=1"
			>ERRORE-11a| L'elemento <name/>/recordTarget/patientRole/id  deve avere l'attributo @root valorizzato tramite una  delle seguenti identificatori Nazionanli:
			CF 2.16.840.1.113883.2.9.4.3.2
			ANA 2.16.840.1.113883.2.9.4.3.15
			Oppure tramite gli identificatori regionali generati per rappresentare l'id del paziente.
			</assert>
			
			
			<!--Controllo recordTarget/patientRole/addr-->
			<let name="num_addr" value="count(hl7:recordTarget/hl7:patientRole/hl7:addr)"/>
			<assert test="$num_addr=0 or (count(hl7:recordTarget/hl7:patientRole/hl7:addr/hl7:country)=$num_addr and 
			count(hl7:recordTarget/hl7:patientRole/hl7:addr/hl7:city)=$num_addr and 
			count(hl7:recordTarget/hl7:patientRole/hl7:addr/hl7:streetAddressLine)=$num_addr)"
			>ERRORE-11| L'elemento <name/>/recordTarget/patientRole/addr DEVE riportare i sotto-elementi 'country', 'city' e 'streetAddressLine' </assert>
			
			
		    <!--Controllo recordTarget/patientRole/patient/name-->
			<let name="patient" value="hl7:recordTarget/hl7:patientRole/hl7:patient"/>
			<assert test="count($patient)=1 "
			>ERRORE-12| L'elemento <name/>/recordTaget/patientRole DEVE contenere l'elemento patient</assert>
			<assert test="count($patient)=0 or count($patient/hl7:name)=1"
			>ERRORE-13| L'elemento <name/>/recordTaget/patientRole/patient DEVE contenere l'elemento 'name'</assert>
			<assert test="count($patient)=0 or (count($patient/hl7:name/hl7:given)=1 and count($patient/hl7:name/hl7:family)=1)"
			>ERRORE-14| L'elemento ClinicalDocument/recordTaget/patientRole/patient/name DEVE riportare gli elementi 'given' e 'family'</assert>
			
			<!--Controllo recordTarget/patientRole/patient/administrativeGenderCode-->
			<let name="genderOID" value="hl7:recordTarget/hl7:patientRole/hl7:patient/hl7:administrativeGenderCode/@codeSystem"/>
			
			<assert test="count($patient)=0 or count(hl7:recordTarget/hl7:patientRole/hl7:patient/hl7:administrativeGenderCode)=1"
			>ERRORE-15| L'attributo <name/>/recordTarget/patientRole/patient DEVE contenere l'elemento administrativeGenderCode </assert>
			<assert test="count($patient)=0 or $genderOID='2.16.840.1.113883.5.1'"
			>ERRORE-16| L'OID assegnato all'attributo <name/>/recordTarget/patientRole/patient/administrativeGenderCode/@codeSystem='<value-of select="$genderOID"/>' non è corretto. L'attributo DEVE essere valorizzato con '2.16.840.1.113883.5.1' </assert>
			
			
		<!--Controllo recordTarget/patientRole/patient/birthTime-->
            <assert test="count($patient)=0 or
            (count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.4.3.2' or
            @root='2.16.840.1.113883.2.9.4.3.7' or @root='2.16.840.1.113883.2.9.4.3.3' or
            @root='2.16.840.1.113883.2.9.4.3.17'])=0) or
            count(hl7:recordTarget/hl7:patientRole/hl7:patient/hl7:birthTime)=1"
            >ERRORE-17| L'elemento <name/>/recordTaget/patientRole/patient DEVE riportare un elemento 'birthTime'.</assert>
			
			<!--Controllo recordTarget/patientRole/patient/birthplace/place/addr-->
			<assert test="count(hl7:recordTarget/hl7:patientRole/hl7:patient/hl7:birthplace)=0 or 
			count(hl7:recordTarget/hl7:patientRole/hl7:patient/hl7:birthplace/hl7:place/hl7:addr)=1"
			>ERRORE-18| L'elemento <name/>/recordTarget/patientRole/patient/birthplace DEVE contenere un elemento place/addr </assert>	
			
			
			<!--Controllo dataEnterer/assignedEntity/assignedPerson-->
			<let name="nome" value="hl7:dataEnterer/hl7:assignedEntity/hl7:assignedPerson/hl7:name"/>
			<assert test="count(hl7:dataEnterer)=0 or (count(hl7:dataEnterer/hl7:assignedEntity/hl7:assignedPerson/hl7:name)=1)"
			>ERRORE-24| L'elemento <name/>/dataEnterer/assignedEntity DEVE riportare l'elemento 'assignedPerson/name'.</assert>
			<assert test="count(hl7:dataEnterer)=0 or (count($nome/hl7:family)=1 and count($nome/hl7:given)=1)"
			>ERRORE-25| L'elemento <name/>/dataEnterer/assignedEntity/assignedPerson/name DEVE avere gli elementi 'given' e 'family'.</assert>	
			
		
			<!--Controllo custodian/assignedCustodian/representedCustodianOrganization-->
			<assert test="count(hl7:custodian/hl7:assignedCustodian/hl7:representedCustodianOrganization/hl7:name)=1"
			>ERRORE-30| L'elemento <name/>/custodian/assignedCustodian/representedCustodianOrganization deve contenere un elemento 'name'</assert>
			
			<let name="num_addr_cust" value="count(hl7:custodian/hl7:assignedCustodian/hl7:representedCustodianOrganization/hl7:addr)"/>
			<let name="addr_cust" value="hl7:custodian/hl7:assignedCustodian/hl7:representedCustodianOrganization/hl7:addr"/>
			<assert test="$num_addr_cust=0 or (count($addr_cust/hl7:country)=$num_addr_cust and
			count($addr_cust/hl7:city)=$num_addr_cust and 
			count($addr_cust/hl7:streetAddressLine)=$num_addr_cust)"
			>ERRORE-31| L'elemento <name/>/custodian/assignedCustodian/representedCustodianOrganization/addr DEVE riportare i sotto-elementi 'country','city' e 'streetAddressLine'</assert>
			
			
		    <!--Controllo ClinicalDocument/legalAuthenticator-->
			<!--let name='statusCode' value='hl7:sdtc:statusCode'/-->
			<assert test = "count(hl7:legalAuthenticator)= 1" 
			>ERRORE-32| L'elemento legalAuthenticator è obbligatorio </assert>
			<assert test = "count(hl7:legalAuthenticator)= 0 or count(hl7:legalAuthenticator/hl7:signatureCode[@code='S'])= 1" 
			>ERRORE-33| L'elemento legalAuthenticator/signatureCode deve essere valorizzato con il codice "S" </assert>
			<assert test = "count(hl7:legalAuthenticator)= 0 or count(hl7:legalAuthenticator/hl7:assignedEntity/hl7:id[@root='2.16.840.1.113883.2.9.4.3.2'])= 1"
			>ERRORE-34| L'elemento legalAuthenticator/assignedEntity DEVE contenere almeno un elemento id valorizzato con l'attributo @root='2.16.840.1.113883.2.9.4.3.2'</assert>

			<assert test = "count(hl7:legalAuthenticator)= 0 or count(hl7:legalAuthenticator/hl7:assignedEntity/hl7:assignedPerson/hl7:name)=1"
			>ERRORE-35| L'elemento legalAuthenticator/assignedEntity/assignedPerson DEVE contenere l'elemento 'name'</assert>
			<assert test = "count(hl7:legalAuthenticator)= 0 or count(hl7:legalAuthenticator/hl7:assignedEntity/hl7:assignedPerson/hl7:name/hl7:family)=1 and count(hl7:legalAuthenticator/hl7:assignedEntity/hl7:assignedPerson/hl7:name/hl7:given)=1"
			>ERRORE-36| L'elemento legalAuthenticator/assignedEntity/assignedPerson/name DEVE riportare gli elementi 'given' e 'family'</assert>
			
			
			
			<!--Controllo authenticator-->
			<assert test="count(hl7:authenticator)=0 or count(hl7:authenticator/hl7:signatureCode[@code='S'])=1"
			>ERRORE-37| L'elemento <name/>/authenticator se presente, DEVE contenere l'elemento signatureCode valorizzato con l'attributo @code='S'.</assert>		
			<assert test="count(hl7:authenticator)=0 or count(hl7:authenticator/hl7:assignedEntity/hl7:id[@root='2.16.840.1.113883.2.9.4.3.2'])=1"
			>ERRORE-38| L'elemento <name/>/authenticator DEVE contenere almeno un elemento assignedEntity/id valorizzato con l'attributo @root='2.16.840.1.113883.2.9.4.3.2'.</assert>
		
			<assert test = "count(hl7:authenticator/hl7:assignedEntity/hl7:assignedPerson)=0 or 
			(count(hl7:authenticator/hl7:assignedEntity/hl7:assignedPerson/hl7:name/hl7:family)=1 and 
			count(hl7:authenticator/hl7:assignedEntity/hl7:assignedPerson/hl7:name/hl7:given)=1)"
			>ERRORE-39| L'elemento <name/>/authenticator/assignedEntity/assignedPerson/name DEVE riportare gli elementi 'given' e 'family'</assert>
		
		</rule>		
		
		<!-- Controllo author-->
		<rule context="hl7:ClinicalDocument/hl7:author">
			<!--Controllo author/assignedAuthor/id/@root-->
			<assert test="count(hl7:assignedAuthor/hl7:id[@root='2.16.840.1.113883.2.9.4.3.2'])= 1"
			>ERRORE-19| L'elemento <name/>/assignedAuthor DEVE contenere almeno un elemento 'id' con il relativo attributo @root valorizzato con '2.16.840.1.113883.2.9.4.3.2'</assert>
			
			<!--Controllo author/assignedAuthor/code-->
			<assert test="count(hl7:assignedAuthor/hl7:code)=0 or 
			count(hl7:assignedAuthor/hl7:code[@codeSystem='2.16.840.1.113883.2.9.77.22.11.13'])=1"
			>ERRORE-20| L'elemento <name/>/assignedAuthor/code DEVE essere valorizzato secondo il value set "assignedAuthorCode_PSSIT" - @codeSystem='2.16.840.1.113883.2.9.77.22.11.13'</assert>
						


            <!--Controllo author/assignedAuthor/assignedPerson/name-->
			<let name="name_author" value="hl7:assignedAuthor/hl7:assignedPerson"/>
			<assert test="count($name_author/hl7:name)=1"
			>ERRORE-21| L'elemento <name/>/assignedAuthor/assignedPerson DEVE avere l'elemento 'name' </assert>
			<assert test="count($name_author/hl7:name)=0 or (count($name_author/hl7:name/hl7:given)=1 and count($name_author/hl7:name/hl7:family)=1)"
			>ERRORE-22| L'elemento <name/>/assignedAuthor/assignedPerson/name DEVE avere gli elementi 'given' e 'family'</assert>
	
			
			<!--Controllo author/assignedAuthor/telecom-->
			<assert test="count(hl7:assignedAuthor/hl7:telecom)>=1"
			>ERRORE-23| L'elemento <name/>/assignedAuthor DEVE contenere almeno un elemento 'telecom'</assert>
		
		</rule>
		
		<!-- Controllo informant-->
		<rule context="hl7:ClinicalDocument/hl7:informant">
			<assert test="(count(hl7:relatedEntity[@classCode='CON' or @classCode='PROV' or @classCode='PRS'])=1)"
			>ERRORE-26| L'elemento <name/>/relatedEntity deve essere valorizzato con l'attributo @classCode='CON' o @classCode='PROV' o @classCode='PRS'.</assert>
			
			<let name="nome" value="hl7:relatedEntity/hl7:relatedPerson/hl7:name"/>
			<assert test="count(hl7:relatedEntity)=0 or (count($nome/hl7:family)=1 and count($nome/hl7:given)=1)"
			>ERRORE-27| L'elemento <name/>/relatedEntity/relatedPerson/name DEVE avere gli elementi 'given' e 'family'</assert>
			
			<assert test="count(hl7:assignedEntity/hl7:id)=0 or 
			count(hl7:assignedEntity/hl7:id[@root='2.16.840.1.113883.2.9.4.3.2'])=1"
			>ERRORE-28| L'elemento <name/> se presente, DEVE contenere l'elemento relatedEntity/id valorizzato con l'attributo @root='2.16.840.1.113883.2.9.4.3.2'.</assert>
			
			<let name="nome" value="hl7:assignedEntity/hl7:assignedPerson/hl7:name"/>
			<assert test="count(hl7:assignedEntity)=0 or (count($nome/hl7:family)=1 and count($nome/hl7:given)=1)"
			>ERRORE-29| L'elemento <name/>/assignedEntity/assignedPerson/name DEVE avere gli elementi 'given' e 'family'</assert>
						
		</rule>
		
		<!-- Controllo participant-->
		<rule context="hl7:ClinicalDocument/hl7:participant">
			<assert test="count(hl7:associatedEntity/hl7:id)>=1"
			>ERRORE-40| L'elemento <name/>/associatedEntity deve contenere almeno un elemento 'id'</assert>
			<let name="num_addr_pcp" value="count(hl7:associatedEntity/hl7:addr)"/>
            <let name="addr_pcp" value="hl7:associatedEntity/hl7:addr"/>
            <assert test="$num_addr_pcp=0 or (count($addr_pcp/hl7:country)=$num_addr_pcp and
                          count($addr_pcp/hl7:city)=$num_addr_pcp and
                          count($addr_pcp/hl7:streetAddressLine)=$num_addr_pcp)"
            >ERRORE-41| L'elemento <name/>/associatedEntity/addr DEVE riportare i sotto-elementi 'country', 'city' e 'streetAddressLine' </assert>
			<assert test="count(hl7:associatedEntity/hl7:associatedPerson)=0 or 
			(count(hl7:associatedEntity/hl7:associatedPerson/hl7:name)=1)"
			>ERRORE-42| L'elemento <name/>/associatedEntity/associatedPerson deve contenere l'elemento 'name'</assert>
			
			<assert test="count(hl7:associatedEntity/hl7:associatedPerson)=0 or 
			(count(hl7:associatedEntity/hl7:associatedPerson/hl7:name/hl7:family)=1 and count(hl7:associatedEntity/hl7:associatedPerson/hl7:name/hl7:given)=1)"
			>ERRORE-43| L'elemento <name/>/associatedEntity/associatedPerson/name deve contenere gli elementi 'given' e 'family'</assert>
			
		</rule>

<!--__________________________________________________________CONTROLLI GENERICI________________________________________________________________-->


		<!--Controllo use Telecom-->
		<rule context="//hl7:telecom">
			<assert test="(count(@use)=1)"
			>ERRORE-44| L’elemento 'telecom' DEVE contenere l'attributo @use </assert>
		</rule>	
		
		<!-- Controllo formato: -->
		<!--campi Codice Fiscale: 16 cifre [A-Z0-9]{16} -->
		<rule context="//hl7:id[@root='2.16.840.1.113883.2.9.4.3.2']">
			<let name="CF" value="@extension"/>
			<assert test="matches(@extension,'[A-Z0-9]{16}') and string-length($CF)=16"
			>ERRORE-45| Il codice fiscale '<value-of select="$CF"/>' cittadino ed operatore deve essere costituito da 16 cifre [A-Z0-9]{16}</assert>
			
		</rule>
	
		<!--Controllo sugli attributi di observation-->
		<rule context="//hl7:observation">
			<let name="moodCd" value="@moodCode"/>
			<assert test="count(@classCode)=1"
			>ERRORE-46| L'attributo "@classCode" dell'elemento "observation" deve essere presente </assert>
		</rule>
		
		<!--Controllo sui valori di statusCode-->
		<rule context="//hl7:statusCode">
			<let name="val_status" value="@code"/>
			<assert test="$val_status='active' or  $val_status='completed' or $val_status='aborted' or $val_status='suspended' or $val_status='cancelled'"
			>Errore-47| Codice ActStatus '<value-of select="$val_status"/>' errato! Deve essere valorizzato con uno dei seguenti valori:
			- active
			- completed
			- aborted
			- suspended
			</assert>
		</rule>
		
		<!--Verifica che i codici relativi al CodeSystem "UCUM" utilizzati siano corretti-->
		<!--rule context="//*[@unit]">
			<let name="val_UCUM" value="@unit"/>
			<assert test="doc('DIZ/XML_FSE_v1/2.16.840.1.113883.4.642.3.912.xml')//el[@code=$val_UCUM]"
			>ERRORE-48| Codice UCUM <value-of select="$val_UCUM"/> errato
			</assert>
		</rule-->
		
<!--___________________________________________________________________BODY__________________________________________________________________________-->
	
	
	
		<rule context="hl7:ClinicalDocument/hl7:component/hl7:structuredBody">
			
		<!--Controllo sulle Section obbligatorie-->
		
			<!--1-->
			<!--Allergie e intolleranze-->
			<assert test="count(hl7:component/hl7:section/hl7:code[@code='48765-2'][@codeSystem='2.16.840.1.113883.6.1'])=1"
			>ERRORE-b1| Sezione Allergie e intolleranze: la sezione DEVE essere presente.</assert>
			<assert test="count(hl7:component/hl7:section[hl7:code[@code='48765-2']]/hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.4.2.1'])=1"
			>ERRORE-b2| Sezione Allergie e intolleranze: la sezione deve contenere l'elemento 'templateId' valorizzato con l'attributo @root='2.16.840.1.113883.2.9.10.1.4.2.1'</assert>
			<assert test="count(hl7:component/hl7:section[hl7:code[@code='48765-2']]/hl7:title)=1"
			>ERRORE-b3| Sezione Allergie e intolleranze: la sezione DEVE contenere un elemento 'title' possibilmente valorizzato con 'Allergie e Intolleranze'</assert>
			<assert test="count(hl7:component/hl7:section[hl7:code[@code='48765-2']]/hl7:entry)&gt;=1"
			>ERRORE-b4| Sezione Allergie e intolleranze: la sezione DEVE contenere almeno un elemento 'entry'</assert>			
		
			<!--2-->
			<!--Sezione Terapie farmacologiche-->
			<assert test="count(hl7:component/hl7:section/hl7:code[@code='10160-0'][@codeSystem='2.16.840.1.113883.6.1'])=1"
			>ERRORE-b5| Sezione Terapie farmacologiche: la sezione DEVE essere presente</assert>
			<assert test="count(hl7:component/hl7:section[hl7:code[@code='10160-0']]/hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.4.2.2'])=1"
			>ERRORE-b6| Sezione Terapie farmacologiche: la sezione deve contenere l'elemento 'templateId' valorizzato con l'attributo @root='2.16.840.1.113883.2.9.10.1.4.2.2'</assert>
			<assert test="count(hl7:component/hl7:section[hl7:code[@code='10160-0']]/hl7:title)=1"
			>ERRORE-b7| Sezione Terapie farmacologiche: la sezione DEVE contenere un elemento 'title' possibilmente valorizzato con 'Terapie farmacologiche'</assert>
			<assert test="(count(hl7:component/hl7:section[hl7:code[@code='10160-0']]/hl7:entry[hl7:substanceAdministration/hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.4.3.2.1']])=0 and
			count(hl7:component/hl7:section[hl7:code[@code='10160-0']]/hl7:entry[hl7:substanceAdministration/hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.4.3.2.3']])=1) or 
			(count(hl7:component/hl7:section[hl7:code[@code='10160-0']]/hl7:entry[hl7:substanceAdministration/hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.4.3.2.1']])>=1 and
			count(hl7:component/hl7:section[hl7:code[@code='10160-0']]/hl7:entry[hl7:substanceAdministration/hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.4.3.2.3']])=0)"
			>ERRORE-b8| Sezione Terapie farmacologiche: la sezione DEVE contenere almeno un elemento 'entry'</assert>
		
			<!--4-->
			<!--Sezione Lista dei problemi-->
			<assert test="count(hl7:component/hl7:section/hl7:code[@code='11450-4'][@codeSystem='2.16.840.1.113883.6.1'])=1"
			>ERRORE-b9| Sezione Lista dei problemi: la sezione DEVE essere presente</assert>
			<assert test="count(hl7:component/hl7:section[hl7:code[@code='11450-4']]/hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.4.2.4'])=1"
			>ERRORE-b10| Sezione Lista dei problemi: la sezione deve contenere l'elemento 'templateId' valorizzato con l'attributo @root='2.16.840.1.113883.2.9.10.1.4.2.4'</assert>
			<assert test="count(hl7:component/hl7:section[hl7:code[@code='11450-4']]/hl7:title)=1"
			>ERRORE-b11| Sezione Lista dei problemi: la sezione DEVE contenere un elemento 'title' possibilmente valorizzato con 'Lista dei problemi'</assert>
			<assert test="count(hl7:component/hl7:section[hl7:code[@code='11450-4']]/hl7:entry)&gt;=1"
			>ERRORE-b12| Sezione Lista dei problemi: la sezione DEVE contenere almeno un elemento 'entry'</assert>
		
			<!--9-->
			<!--Protesi, Impianti e Ausili -->
			<assert test="count(hl7:component/hl7:section/hl7:code[@code='46264-8'][@codeSystem='2.16.840.1.113883.6.1'])=1"
			>ERRORE-b13| Sezione Protesi, impianti e ausili: la sezione DEVE essere presente</assert>
			<assert test="count(hl7:component/hl7:section[hl7:code[@code='46264-8']]/hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.4.2.9'])=1"
			>ERRORE-b14| Sezione Protesi, impianti e ausili: la sezione deve contenere l'elemento 'templateId' valorizzato con l'attributo @root='2.16.840.1.113883.2.9.10.1.4.2.9'</assert>
			<assert test="count(hl7:component/hl7:section[hl7:code[@code='46264-8']]/hl7:title)=1"
			>ERRORE-b15| Sezione Protesi, impianti e ausili: la sezione DEVE contenere un elemento 'title' possibilmente valorizzato con 'Protesi, impianti e ausili'</assert>
			<assert test="(count(hl7:component/hl7:section[hl7:code[@code='46264-8']]/hl7:entry[hl7:supply/hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.4.3.9.1']])=0 and 
			count(hl7:component/hl7:section[hl7:code[@code='46264-8']]/hl7:entry[hl7:supply/hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.4.3.9.2']])=1) or 
			(count(hl7:component/hl7:section[hl7:code[@code='46264-8']]/hl7:entry[hl7:supply/hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.4.3.9.1']])>=1 and 
			count(hl7:component/hl7:section[hl7:code[@code='46264-8']]/hl7:entry[hl7:supply/hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.4.3.9.2']])=0)"
			>ERRORE-b16| Sezione Protesi, impianti e ausili: la sezione DEVE contenere almeno un elemento 'entry'</assert>
			
			<!--11-->
			<!--Trattamenti e procedure terapeutiche, chirurgiche e diagnostiche-->
			<assert test="count(hl7:component/hl7:section/hl7:code[@code='47519-4'][@codeSystem='2.16.840.1.113883.6.1'])=1"
			>ERRORE-b17| Sezione Trattamenti e procedure terapeutiche, chirurgiche e diagnostiche: la sezione DEVE essere presente</assert>
			<assert test="count(hl7:component/hl7:section[hl7:code[@code='47519-4']]/hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.4.2.11'])=1"
			>ERRORE-b18| Sezione Trattamenti e procedure terapeutiche, chirurgiche e diagnostiche: la sezione deve contenere l'elemento 'templateId' valorizzato con l'attributo @root='2.16.840.1.113883.2.9.10.1.4.2.11'</assert>
			<assert test="count(hl7:component/hl7:section[hl7:code[@code='47519-4']]/hl7:title)=1"
			>ERRORE-b19| Sezione Trattamenti e procedure terapeutiche, chirurgiche e diagnostiche: la sezione DEVE contenere un elemento 'title' possibilmente valorizzato con 'Trattamenti e procedure terapeutiche, chirurgiche e diagnostiche'</assert>
			<assert test="(count(hl7:component/hl7:section[hl7:code[@code='47519-4']]/hl7:entry)&gt;=1)"
			>ERRORE-b20| Sezione Trattamenti e procedure terapeutiche, chirurgiche e diagnostiche: la sezione DEVE contenere un elemento 'entry'</assert>
			
			<!--13-->
			<!--Sezione Stato funzionale del paziente-->
			<assert test="count(hl7:component/hl7:section/hl7:code[@code='47420-5'][@codeSystem='2.16.840.1.113883.6.1'])=1"
			>ERRORE-b21| Sezione Stato funzionale del paziente: la sezione DEVE essere presente</assert>
			<assert test="count(hl7:component/hl7:section[hl7:code[@code='47420-5']]/hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.4.2.13'])=1"
			>ERRORE-b22| Sezione Stato funzionale del paziente: la sezione deve contenere l'elemento 'templateId' valorizzato con l'attributo @root='2.16.840.1.113883.2.9.10.1.4.2.13'</assert>
			<assert test="count(hl7:component/hl7:section[hl7:code[@code='47420-5']]/hl7:title)=1"
			>ERRORE-b23| Sezione Stato funzionale del paziente: la sezione DEVE contenere un elemento 'title' possibilmente valorizzato con 'Stato funzionale del paziente'</assert>
			
		
		<!--Controllo sulle Section opzionali-->
		
			<!--3-->
			<!--Sezione Vaccinazioni-->	
			<assert test="count(hl7:component/hl7:section[hl7:code[@code='11369-6']])=0 or 
			count(hl7:component/hl7:section[hl7:code[@code='11369-6']]/hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.4.2.3'])=1"
			>ERRORE-b24| Sezione Vaccinazioni: la sezione DEVE contenere un elemento 'templateId' valorizzato con l'attributo @root='2.16.840.1.113883.2.9.10.1.4.2.3'</assert>
			<assert test="count(hl7:component/hl7:section[hl7:code[@code='11369-6']])=0 or 
			count(hl7:component/hl7:section[hl7:code[@code='11369-6']]/hl7:title)=1"
			>ERRORE-b25| Sezione Vaccinazioni: la sezione DEVE contenere un elemento 'title' possibilmente valorizzato con 'Vaccinazioni'</assert>
			<assert test="count(hl7:component/hl7:section[hl7:code[@code='11369-6']])=0 or 
			count(hl7:component/hl7:section[hl7:code[@code='11369-6']]/hl7:entry)&gt;=1"
			>ERRORE-b26| Sezione Vaccinazioni: la sezione DEVE contenere almeno un elemento 'entry'</assert>
			
			<!--5-->
			<!--Anamnesi familiare-->
			<assert test="count(hl7:component/hl7:section[hl7:code[@code='10157-6']])=0 or 
			count(hl7:component/hl7:section[hl7:code[@code='10157-6']]/hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.4.2.16'])=1"
			>ERRORE-b27| Sezione Anamnesi familiare: la sezione DEVE contenere un elemento 'templateId' valorizzato con l'attributo @root='2.16.840.1.113883.2.9.10.1.4.2.16”'</assert>
			<assert test="count(hl7:component/hl7:section[hl7:code[@code='10157-6']])=0 or count(hl7:component/hl7:section[hl7:code[@code='10157-6']]/hl7:title)=1"
			>ERRORE-b28| Sezione Anamnesi familiare: la sezione DEVE contenere un elemento 'title' possibilmente valorizzato con 'Vaccinazioni'</assert>
		
			
			<!--6-->
			<!--Stile di vita-->
			<assert test="count(hl7:component/hl7:section[hl7:code[@code='29762-2']])=0 or 
			count(hl7:component/hl7:section[hl7:code[@code='29762-2']]/hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.4.2.6'])=1"
			>ERRORE-b29| Sezione Stile di vita: la sezione DEVE contenere un elemento 'templateId' valorizzato con l'attributo @root='2.16.840.1.113883.2.9.10.1.4.2.6'</assert>
			<assert test="count(hl7:component/hl7:section[hl7:code[@code='29762-2']])=0 or count(hl7:component/hl7:section[hl7:code[@code='29762-2']]/hl7:title)=1"
			>ERRORE-b30| Sezione Stile di vita: la sezione DEVE contenere un elemento 'title' possibilmente valorizzato con 'Stile di vita'</assert>
		

			<!--7-->
			<!--Gravidanze e parto-->
			<assert test="count(hl7:component/hl7:section[hl7:code[@code='10162-6']])=0 or 
			count(hl7:component/hl7:section[hl7:code[@code='10162-6']]/hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.4.2.7'])=1"
			>ERRORE-b31| Sezione Gravidanze e parto: la sezione DEVE contenere un elemento 'templateId' valorizzato con l'attributo @root='2.16.840.1.113883.2.9.10.1.4.2.7'</assert>
			<assert test="count(hl7:component/hl7:section[hl7:code[@code='10162-6']])=0 or count(hl7:component/hl7:section[hl7:code[@code='10162-6']]/hl7:title)=1"
			>ERRORE-b32| Sezione Gravidanze e parto: la sezione DEVE contenere un elemento 'title' possibilmente valorizzato con 'Gravidanze, parti, stato mestruale'</assert>
			<assert test="count(hl7:component/hl7:section[hl7:code[@code='10162-6']])=0 or count(hl7:component/hl7:section[hl7:code[@code='10162-6']]/hl7:entry)&gt;=1"
			>ERRORE-b33| Sezione Gravidanze e parto: la sezione DEVE contenere almeno un elemento 'entry'</assert>
		
			<!--8-->
			<!--Parametri vitali-->
			<assert test="count(hl7:component/hl7:section[hl7:code[@code='8716-3']])=0 or 
			count(hl7:component/hl7:section[hl7:code[@code='8716-3']]/hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.4.2.8'])=1"
			>ERRORE-b34| Sezione Parametri vitali: la sezione DEVE contenere un elemento 'templateId' valorizzato con l'attributo @root='2.16.840.1.113883.2.9.10.1.4.2.8'</assert>
			<assert test="count(hl7:component/hl7:section[hl7:code[@code='8716-3']])=0 or count(hl7:component/hl7:section[hl7:code[@code='8716-3']]/hl7:title)=1"
			>ERRORE-b35| Sezione Parametri vitali: la sezione DEVE contenere un elemento 'title' possibilmente valorizzato con 'Parametri vitali'</assert>
		
		
			<!--10-->
			<!--Piani di cura-->
			<assert test="count(hl7:component/hl7:section[hl7:code[@code='18776-5']])=0 or 
			count(hl7:component/hl7:section[hl7:code[@code='18776-5']]/hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.4.2.10'])=1"
			>ERRORE-b36| Sezione Piani di cura: la sezione DEVE contenere un elemento 'templateId' valorizzato con l'attributo @root='2.16.840.1.113883.2.9.10.1.4.2.10'</assert>
			<assert test="count(hl7:component/hl7:section[hl7:code[@code='18776-5']])=0 or count(hl7:component/hl7:section[hl7:code[@code='18776-5']]/hl7:title)=1"
			>ERRORE-b37| Sezione Piani di cura: la sezione DEVE contenere un elemento 'title' possibilmente valorizzato con 'Piani di cura'</assert>
			
			<!--12-->
			<!--Visite o ricoveri-->
			<assert test="count(hl7:component/hl7:section[hl7:code[@code='46240-8']])=0 or 
			count(hl7:component/hl7:section[hl7:code[@code='46240-8']]/hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.4.2.12'])=1"
			>ERRORE-b38| Sezione Visite o ricoveri: la sezione DEVE contenere un elemento 'templateId' valorizzato con l'attributo @root='2.16.840.1.113883.2.9.10.1.4.2.12'</assert>
			<assert test="count(hl7:component/hl7:section[hl7:code[@code='46240-8']])=0 or count(hl7:component/hl7:section[hl7:code[@code='46240-8']]/hl7:title)=1"
			>ERRORE-b39| Sezione Visite o ricoveri: la sezione DEVE contenere un elemento 'title' possibilmente valorizzato con 'Visite e ricoveri'</assert>
			<assert test="count(hl7:component/hl7:section[hl7:code[@code='46240-8']])=0 or count(hl7:component/hl7:section[hl7:code[@code='46240-8']]/hl7:entry)&gt;=1"
			>ERRORE-b40| Sezione Visite o ricoveri: la sezione DEVE contenere almeno un elemento 'entry'</assert>
			
			<!--14-->
			<!--Indagini diagnostiche e esami di laboratorio-->
			<assert test="count(hl7:component/hl7:section[hl7:code[@code='30954-2']])=0 or 
			count(hl7:component/hl7:section[hl7:code[@code='30954-2']]/hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.4.2.14'])=1"
			>ERRORE-b41| Sezione Indagini diagnostiche e esami di laboratorio: la sezione DEVE contenere un elemento 'templateId' valorizzato con l'attributo @root='2.16.840.1.113883.2.9.10.1.4.2.14'</assert>
			<assert test="count(hl7:component/hl7:section[hl7:code[@code='30954-2']])=0 or count(hl7:component/hl7:section[hl7:code[@code='30954-2']]/hl7:title)=1"
			>ERRORE-b42| Sezione Indagini diagnostiche e esami di laboratorio: la sezione DEVE contenere un elemento 'title' possibilmente valorizzato con 'Indagini diagnostiche e esami di laboratorio'</assert>
		
			<!--15-->
			<!--Assenso/dissenso donazione organi-->
			<assert test="count(hl7:component/hl7:section[hl7:code[@code='42348-3']])=0 or 
			count(hl7:component/hl7:section[hl7:code[@code='42348-3']]/hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.4.2.15'])=1"
			>ERRORE-b43| Sezione Assenso/dissenso donazione organi: la sezione DEVE contenere un elemento 'templateId' valorizzato con l'attributo @root='2.16.840.1.113883.2.9.10.1.4.2.15'</assert>
			<assert test="count(hl7:component/hl7:section[hl7:code[@code='42348-3']])=0 or count(hl7:component/hl7:section[hl7:code[@code='42348-3']]/hl7:title)=1"
			>ERRORE-b44| Sezione Assenso/dissenso donazione organi: la sezione DEVE contenere un elemento 'title' possibilmente valorizzato con 'Assenso/dissenso donazione organi'</assert>
			
			<!--16-->
			<!--Esenzioni-->
			<assert test="count(hl7:component/hl7:section[hl7:code[@code='57827-8']])=0 or 
			count(hl7:component/hl7:section[hl7:code[@code='57827-8']]/hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.4.2.17'])=1"
			>ERRORE-b45| Sezione Esenzioni: la sezione DEVE contenere un elemento 'templateId' valorizzato con l'attributo @root='2.16.840.1.113883.2.9.10.1.4.2.17'</assert>
			<assert test="count(hl7:component/hl7:section[hl7:code[@code='57827-8']])=0 or count(hl7:component/hl7:section[hl7:code[@code='57827-8']]/hl7:title)=1"
			>ERRORE-b46| Sezione Esenzioni: la sezione DEVE contenere un elemento 'title' possibilmente valorizzato con 'Esenzioni'</assert>
			<assert test="count(hl7:component/hl7:section[hl7:code[@code='57827-8']])=0 or count(hl7:component/hl7:section[hl7:code[@code='57827-8']]/hl7:entry)&gt;=1"
			>ERRORE-b47| Sezione Esenzioni: la sezione DEVE contenere almeno un elemento 'entry'</assert>
			
			<!--17-->
			<!--Reti di patologia-->
			<assert test="count(hl7:component/hl7:section[hl7:code[@code='PSSIT99']])=0 or 
			count(hl7:component/hl7:section[hl7:code[@code='PSSIT99']]/hl7:code[@codeSystem='2.16.840.1.113883.2.9.5.2.8'])=1"
			>ERRORE-b48| Sezione Reti di patologia: la sezione DEVE contenere un elemento 'code' valorizzato con l'attributo @codeSystem='2.16.840.1.113883.2.9.5.2.8'</assert>
			<assert test="count(hl7:component/hl7:section[hl7:code[@code='PSSIT99']])=0 or 
			count(hl7:component/hl7:section[hl7:code[@code='PSSIT99']]/hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.4.2.18'])=1"
			>ERRORE-b49| Sezione Reti di patologia: la sezione DEVE contenere un elemento 'templateId' valorizzato con l'attributo @root='2.16.840.1.113883.2.9.10.1.4.2.18'</assert>
			<assert test="count(hl7:component/hl7:section[hl7:code[@code='PSSIT99']])=0 or count(hl7:component/hl7:section[hl7:code[@code='PSSIT99']]/hl7:title)=1"
			>ERRORE-b50| Sezione Reti di patologia: la sezione DEVE contenere un elemento 'title' possibilmente valorizzato con 'Reti di patologia'</assert>
			<assert test="count(hl7:component/hl7:section[hl7:code[@code='PSSIT99']])=0 or count(hl7:component/hl7:section[hl7:code[@code='PSSIT99']]/hl7:entry)&gt;=1"
			>ERRORE-b51| Sezione Reti di patologia: la sezione DEVE contenere almeno un elemento 'entry'</assert>
		
		</rule>
	
	
		<!--Controllo sui codici delle sezioni-->
		<rule context="hl7:ClinicalDocument/hl7:component/hl7:structuredBody/hl7:component/hl7:section">
			<let name="codice" value="hl7:code/@code"/>
			<assert test="count(hl7:code[@code='48765-2'][@codeSystem='2.16.840.1.113883.6.1'])=1 or 
			count(hl7:code[@code='10160-0'][@codeSystem='2.16.840.1.113883.6.1'])=1 or 
			count(hl7:code[@code='11369-6'][@codeSystem='2.16.840.1.113883.6.1'])=1 or
			count(hl7:code[@code='11450-4'][@codeSystem='2.16.840.1.113883.6.1'])=1 or 
			count(hl7:code[@code='10157-6'][@codeSystem='2.16.840.1.113883.6.1'])=1 or 
			count(hl7:code[@code='29762-2'][@codeSystem='2.16.840.1.113883.6.1'])=1 or
			count(hl7:code[@code='10162-6'][@codeSystem='2.16.840.1.113883.6.1'])=1 or 
			count(hl7:code[@code='8716-3'][@codeSystem='2.16.840.1.113883.6.1'])=1 or 
			count(hl7:code[@code='46264-8'][@codeSystem='2.16.840.1.113883.6.1'])=1 or
			count(hl7:code[@code='18776-5'][@codeSystem='2.16.840.1.113883.6.1'])=1 or 
			count(hl7:code[@code='47519-4'][@codeSystem='2.16.840.1.113883.6.1'])=1 or 
			count(hl7:code[@code='46240-8'][@codeSystem='2.16.840.1.113883.6.1'])=1 or
			count(hl7:code[@code='47420-5'][@codeSystem='2.16.840.1.113883.6.1'])=1 or 
			count(hl7:code[@code='30954-2'][@codeSystem='2.16.840.1.113883.6.1'])=1 or 
			count(hl7:code[@code='42348-3'][@codeSystem='2.16.840.1.113883.6.1'])=1 or 
			count(hl7:code[@code='57827-8'][@codeSystem='2.16.840.1.113883.6.1'])=1 or 
			count(hl7:code[@code='PSSIT99'][@codeSystem='2.16.840.1.113883.2.9.5.2.8'])=1"
			>ERRORE-b52| Il codice '<value-of select="$codice"/>' non è corretto. La sezione deve essere valorizzata con uno dei seguenti codici:
			48765-2		- Sezione Allergie e intolleranze
			10160-0		- Sezione Terapie farmacologiche
			11369-6		- Sezione Vaccinazioni
			11450-4		- Sezione Lista dei problemi
			10157-6		- Sezione Anamnesi familiare
			29762-2		- Sezione Stile di vita
			10162-6		- Sezione Gravidanze e parto
			8716-3		- Sezione Parametri vitali
			46264-8		- Sezione Protesi, impianti e ausili
			18776-5		- Sezione Piani di cura 
			47519-4 	- Sezione Trattamenti e procedure terapeutiche, chirurgiche e diagnostiche
			46240-8	  	- Sezione Visite e ricoveri
			47420-5		- Sezione Stato funzionale del paziente
			30954-2		- Sezione Indagini diagnostiche e esami di laboratorio
			42348-3		- Sezione Assenso/dissenso donazione organi
			57827-8		- Sezione Esenzioni
			PSSIT99		- Sezione Reti di patologia			
			</assert>
		</rule>	



		<!--1-->
		<!--Allergie e Intolleranze: controllo sulle entry-->
		<rule context="hl7:ClinicalDocument/hl7:component/hl7:structuredBody/hl7:component/hl7:section[hl7:code[@code='48765-2']]/hl7:entry">
			
			<assert test="count(hl7:act/hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.4.3.1.1'])=1"
			>ERRORE-b53| Sezione Allergie e Intolleranze: entry/act DEVE contenere un elemento 'templateId' valorizzato con l'attributo @root='2.16.840.1.113883.2.9.10.1.4.3.1.1'.</assert>
			<let name="status" value="hl7:act/hl7:statusCode/@code"/>
			<assert test="count(hl7:act/hl7:effectiveTime/hl7:low)=1"
			>ERRORE-b54| Sezione Allergie e Intolleranze: entry/act DEVE contenere un elemento 'eWffectiveTime' il quale deve avere l'elemento 'low' valorizzato.</assert>
			<assert test="($status='completed' and count(hl7:act/hl7:effectiveTime/hl7:high)=1) or
					($status='aborted' and count(hl7:act/hl7:effectiveTime/hl7:high)=1) or 
					($status='suspended' and count(hl7:act/hl7:effectiveTime/hl7:high)=0) or 
					($status='active' and count(hl7:act/hl7:effectiveTime/hl7:high)=0)"
			>ERRORE-b55| Sezione Allergie e Intolleranze: entry/act/effectiveTime deve contenere l'elemento 'high' valorizzato nel caso in cui lo 'statusCode' è "completed"|"aborted".</assert>
			<assert test="(count(hl7:act/hl7:entryRelationship[hl7:observation/hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.4.3.1.4']])=0 and 
			count(hl7:act/hl7:entryRelationship[hl7:observation/hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.4.3.1.3']])=1) or
			(count(hl7:act/hl7:entryRelationship[hl7:observation/hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.4.3.1.3']])=0 and 
			count(hl7:act/hl7:entryRelationship[hl7:observation/hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.4.3.1.4']])=1)"
			>ERRORE-b56| Sezione Allergie e Intolleranze: entry/act DEVE contenere una sola entryRelationship/observation conenente l'elemento 'templateId' valorizzato nei seguenti modi:
			- @root='2.16.840.1.113883.2.9.10.1.4.3.1.4' per "Assenza allergie note" 
			- @root='2.16.840.1.113883.2.9.10.1.4.3.1.3' per "Presenza allergie e/o intolleranze".</assert>
			
			<!--Presenza  di allergie-->
			<report test="not(count(hl7:act/hl7:entryRelationship/hl7:observation/hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.4.3.1.3'])=0) and 
			not(count(hl7:act/hl7:entryRelationship/hl7:observation/hl7:code[@code='52473-6'][@codeSystem='2.16.840.1.113883.6.1'])=1)"
			>W003| Sezione Allergie e Intolleranze: si consiglia di valorizzare l'elemento entry/act/entryRelationship/observation/code con @code='52473-6' derivato da LOINC.--></report>
			<assert test="count(hl7:act/hl7:entryRelationship/hl7:observation/hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.4.3.1.3'])=0 or
			count(hl7:act/hl7:entryRelationship/hl7:observation[hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.4.3.1.3']]/hl7:effectiveTime/hl7:low)=1"
			>ERRORE-b57| Sezione Allergie e Intolleranze: entry/act/entryRelationship/observation DEVE contenere un elemento 'effectiveTime' il quale deve avere l'elemento 'low' valorizzato.</assert>
			<assert test="count(hl7:act/hl7:entryRelationship/hl7:observation/hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.4.3.1.3'])=0 or
			count(hl7:act/hl7:entryRelationship/hl7:observation[hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.4.3.1.3']]/hl7:value[@xsi:type='CD'])=1"
			>ERRORE-b58| Sezione Allergie e Intolleranze: entry/act/entryRelationship/observation DEVE contenere un elemento 'value' con l'attributo @xsi:type="CD".</assert>			
			
			<let name="temp" value="hl7:act/hl7:entryRelationship/hl7:observation[hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.4.3.1.3']]"/>
			<assert test="count($temp)=0 or 
			(count($temp/hl7:value/@code)=1 and count($temp/hl7:value/hl7:originalText/hl7:reference/@value)&lt;=1 and 
			count($temp/hl7:value[@codeSystem='2.16.840.1.113883.5.4' or @codeSystem='2.16.840.1.113883.1.11.19700'])=1) or 
			(count($temp/hl7:value/@code)=0 and count($temp/hl7:value/hl7:originalText/hl7:reference/@value)=1)"
			>ERRORE-b59| Sezione Allergie e Intolleranze: entry/act/entryRelationship/observation/value può essere valorizzato nei modi seguenti:
			- nel caso di 'value' non codificato DEVE avere l'elemento originalText/reference/@value valorizzato;
			- nel caso di 'value' codificato DEVE essere valorizzato con l'attributo @codeSystem='2.16.840.1.113883.5.4' o @codeSystem='2.16.840.1.113883.1.11.19700'</assert>
				
				<!--Descrizione Agente-->
				<assert test="count($temp)=0 or count(hl7:act/hl7:entryRelationship/hl7:observation/hl7:participant)>=1"
				>ERRORE-b60| Sezione Allergie e Intolleranze: entry/act/entryRelationship/observation DEVE contenere almeno un 'participant' - "Descrizione Agente".</assert>
				
				<!--Criticità allergia-->
				<assert test="count(hl7:act/hl7:entryRelationship/hl7:observation/hl7:entryRelationship[@typeCode='SUBJ'][hl7:observation])=0 or 
				count(hl7:act/hl7:entryRelationship/hl7:observation/hl7:entryRelationship/hl7:observation/hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.4.3.1.5.3'])=1"
				>ERRORE-b61| Sezione Allergie e Intolleranze: entry/act/entryRelationship/observation/entryRelationship/observation (Criticità di un'allergia o intolleranza) DEVE includere l'identificativo 'templateId' valorizzato con l'attributo @root='2.16.840.1.113883.2.9.10.1.4.3.1.5.3' </assert>
				<assert test="count(hl7:act/hl7:entryRelationship/hl7:observation/hl7:entryRelationship[@typeCode='SUBJ'][hl7:observation])=0 or 
				count(hl7:act/hl7:entryRelationship/hl7:observation/hl7:entryRelationship[@typeCode='SUBJ'][hl7:observation]/hl7:observation/hl7:value[@xsi:type='CD'])=1"
				>ERRORE-b62| Sezione Allergie e Intolleranze: entry/act/entryRelationship/observation/entryRelationship/observation (Criticità di un'allergia o intolleranza) DEVE avere un elemento 'value' con l'attributo @xsi:type='CD'.</assert>
				
				<assert test="count(hl7:act/hl7:entryRelationship/hl7:observation/hl7:entryRelationship[@typeCode='SUBJ'][hl7:observation])=0 or 
				count(hl7:act/hl7:entryRelationship/hl7:observation/hl7:entryRelationship/hl7:observation/hl7:value[@codeSystem='2.16.840.1.113883.5.1063'])=1"
				>ERRORE-b63| Sezione Allergie e Intolleranze: entry/act/entryRelationship/observation/entryRelationship/observation/value (Criticità di un'allergia o intolleranza) DEVE essere derivato dal value set "CriticalityObservation" - @codeSystem='2.16.840.1.113883.5.1063'.</assert>
				<!--Stato allergia-->
				<assert test="count(hl7:act/hl7:entryRelationship/hl7:observation/hl7:entryRelationship[@typeCode='REFR'])=0 or
				count(hl7:act/hl7:entryRelationship/hl7:observation/hl7:entryRelationship/hl7:observation/hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.4.3.1.6'])=1"
				>ERRORE-b64| Sezione Allergie e Intolleranze: entry/act/entryRelationship/observation/entryRelationship/observation (Stato di un'allergia) DEVE includere l'identificativo 'templateId' valorizzato con l'attributo @root='2.16.840.1.113883.2.9.10.1.4.3.1.6'.</assert>
				<assert test="count(hl7:act/hl7:entryRelationship/hl7:observation/hl7:entryRelationship[@typeCode='REFR'])=0 or
				count(hl7:act/hl7:entryRelationship/hl7:observation/hl7:entryRelationship/hl7:observation/hl7:code[@code='33999-4'][@codeSystem='2.16.840.1.113883.6.1'])=1"
				>ERRORE-b65| Sezione Allergie e Intolleranze: entry/act/entryRelationship/observation/entryRelationship/observation (Stato di un'allergia) DEVE contenere un elemento 'code' valorizzato con gli attributi @code='33999-4' e @codeSystem='2.16.840.1.113883.6.1'.</assert>
				<assert test="count(hl7:act/hl7:entryRelationship/hl7:observation/hl7:entryRelationship[@typeCode='REFR'])=0 or
				count(hl7:act/hl7:entryRelationship/hl7:observation/hl7:entryRelationship/hl7:observation/hl7:value[@codeSystem='2.16.840.1.113883.2.9.77.22.11.11' or @codeSystem='2.16.840.1.113883.6.1'])=1"
				>ERRORE-b66| Sezione Allergie e Intolleranze: entry/act/entryRelationship/observation/entryRelationship/observation (Stato di un'allergia) DEVE avere un elemento 'value' valorizzato secondo il value set "Stato clinico allergia" - @codeSystem='2.16.840.1.113883.6.1' oppure @codeSystem='2.16.840.1.113883.2.9.77.22.11.11'. </assert>
				<assert test="count(hl7:act/hl7:entryRelationship/hl7:observation/hl7:entryRelationship[@typeCode='REFR'])=0 or
				(count(hl7:act/hl7:entryRelationship/hl7:observation/hl7:entryRelationship/hl7:observation/hl7:value[@code='LA16666-2'])=1 or
				count(hl7:act/hl7:entryRelationship/hl7:observation/hl7:entryRelationship/hl7:observation/hl7:value[@code='LA18632-2'])=1)"
				>ERRORE-b66a| Sezione Allergie e Intolleranze: il @code di entry/act/entryRelationship/observation/entryRelationship/observation/value (Stato di un'allergia) deve essere valorizzato con:
				- "LA16666-2" se "active";
				- "LA18632-2" se "inactive".
				</assert>
				
				
				<!--Note e commenti-->
				<assert test="count(hl7:act/hl7:entryRelationship/hl7:observation/hl7:entryRelationship[@typeCode='SUBJ'][hl7:act])=0 or
				count(hl7:act/hl7:entryRelationship/hl7:observation/hl7:entryRelationship/hl7:act/hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.4.3.1.7'])>=1"
				>ERRORE-b67| Sezione Allergie e Intolleranze: entry/act/entryRelationship/observation/entryRelationship/observation (Note e commenti) DEVE contenere un 'templateId' valorizzato con l'attributo @root='2.16.840.1.113883.2.9.10.1.4.3.1.7'.</assert>
			
			
						
			<!--Assenza allergia-->
			<let name="temp_abs" value="hl7:act/hl7:entryRelationship/hl7:observation[hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.4.3.1.4']]"/>
			<assert test="count($temp_abs)=0 or 
			count(hl7:act/hl7:entryRelationship/hl7:observation[hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.4.3.1.4']]/hl7:code[@code='OINT'][@codeSystem='2.16.840.1.113883.5.4' or @codeSystem='2.16.840.1.113883.1.11.19700'])=1"
			>ERRORE-b68| Sezione Allergie e Intolleranze: entry/act/entryRelationship/observation DEVE avere un elemento 'code' valorizzato con @code='OINT' e @codeSystem='2.16.840.1.113883.5.4' o @codeSystem='2.16.840.1.113883.1.11.19700'.</assert>
			
			<assert test="count($temp_abs)=0 or 
			(count($temp_abs/hl7:value/@code)=1 and	
			count($temp_abs/hl7:value[@codeSystem='2.16.840.1.113883.5.1150.1' or @codeSystem='2.16.840.1.113883.11.22.9'])=1
			and count($temp_abs/hl7:value/hl7:originalText/hl7:reference/@value)&lt;=1)"
			>ERRORE-b69| Sezione Allergie e Intolleranze: entry/act/entryRelationship/observation/value DEVE deve essere valorizzato secondo il value set "Absent or Unknown allergies" @codeSystem='2.16.840.1.113883.5.1150.1' or @codeSystem='2.16.840.1.113883.11.22.9'  
			</assert>
				
			
		</rule>
			
			<!--Descrizione Agente-->
			<rule context="hl7:ClinicalDocument/hl7:component/hl7:structuredBody/hl7:component/hl7:section[hl7:code[@code='48765-2']]/hl7:entry/hl7:act/hl7:entryRelationship/hl7:observation[hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.4.3.1.3']]/hl7:participant">	
				
				
				<assert test="count(hl7:participantRole/hl7:playingEntity/hl7:code/@code)=0 or
				count(hl7:participantRole/hl7:playingEntity/hl7:code[@codeSystem='2.16.840.1.113883.6.73'])=1 or
				count(hl7:participantRole/hl7:playingEntity/hl7:code[@codeSystem='2.16.840.1.113883.2.9.6.1.5'])=1 or
				count(hl7:participantRole/hl7:playingEntity/hl7:code[@codeSystem='2.16.840.1.113883.2.9.77.22.11.2'])=1"
				>ERRORE-b70| Sezione Allergie e Intolleranze: entry/act/entryRelationship/observation/participant/participantRole/playingEntity/code deve avere l'attributo @codeSystem valorizzato come segue:
				- 2.16.840.1.113883.6.73		codifica "WHO ATC"
				- 2.16.840.1.113883.2.9.6.1.5 		codifica "AIC"
				- 2.16.840.1.113883.11.22.9 		value set "AbsentorUnknownAllergies" (- per le allergie non a farmaci –)
				</assert>		
				
				<assert test="count(hl7:participantRole/hl7:playingEntity/hl7:code/@nullFlavor)=0 or 
				count(hl7:participantRole/hl7:playingEntity/hl7:code[@nullFlavor='NI'])=1"
				>ERRORE-b71| Sezione Allergie e Intolleranze: entry/act/entryRelationship/observation/participant/participantRole/playingEntity DEVE contenere l'elemento code valorizzato con l'attributo @nullFlavor='NI'.</assert>
				
				<assert test="(count(hl7:participantRole/hl7:playingEntity/hl7:code/@nullFlavor)=0 or
				count(hl7:participantRole/hl7:playingEntity/hl7:code/hl7:originalText/hl7:reference)=1) "
				>ERRORE-b72| Sezione Allergie e Intolleranze: entry/act/entryRelationship/observation/participant/participantRole/playingEntity DEVE contenere l'elemento originalText/reference.</assert>
				
			</rule>
			<!--Descrizione Reazioni-->
			<rule context="hl7:ClinicalDocument/hl7:component/hl7:structuredBody/hl7:component/hl7:section[hl7:code[@code='48765-2']]/hl7:entry/hl7:act/hl7:entryRelationship/hl7:observation[hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.4.3.1.3']]/hl7:entryRelationship[@typeCode='MFST']">	
				
				<assert test="count(hl7:observation/hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.4.3.1.5.1' or @root='2.16.840.1.113883.2.9.10.1.4.3.1.5.2'])=1"
				>ERRORE-b73| Sezione Allergie e Intolleranze: entry/act/entryRelationship/observation/entryRelationship/observation (Descrizione reazioni) DEVE contenere il 'templateId' valorizzato come segue:
				- @root='2.16.840.1.113883.2.9.10.1.4.3.1.5.1' nel caso di Descrizione Reazione codificato
				- @root='2.16.840.1.113883.2.9.10.1.4.3.1.5.2' nel caso di Descrizione reazione non codificato.</assert>			
				<assert test="count(hl7:observation/hl7:code[@code='75321-0'][@codeSystem='2.16.840.1.113883.6.1'])=1"
				>ERRORE-b74| Sezione Allergie e Intolleranze: entry/act/entryRelationship/observation/entryRelationship/observation (Descrizione reazioni) DEVE contenere l'elemento 'code' valorizzato con i seguenti attributi @code='75321-0' e @codeSystem='2.16.840.1.113883.6.1'. </assert>
				<assert test="count(hl7:observation/hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.4.3.1.5.1'])=0 or
				count(hl7:observation/hl7:value[@codeSystem='2.16.840.1.113883.2.9.77.22.11.3' or @codeSystem='2.16.840.1.113883.2.9.77.22.11.4' or @codeSystem='2.16.840.1.113883.6.103'])=1"
				>ERRORE-b75| Sezione Allergie e Intolleranze: entry/act/entryRelationship/observation/entryRelationship/observation/code (Descrizione reazioni) DEVE essere valorizzato secondo i seguenti dizionari:
				- 2.16.840.1.113883.2.9.77.22.11.3		Value Set Reazioni Intolleranza
				- 2.16.840.1.113883.2.9.77.22.11.4 		Value Set Reazioni Allergiche
				- 2.16.840.1.113883.6.103			ICD-9-CM
				</assert>				
				<assert test="count(hl7:observation/hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.4.3.1.5.2'])=0 or
				count(hl7:observation/hl7:value/hl7:originalText/hl7:reference)=1"
				>ERRORE-b76| Sezione Allergie e Intolleranze: entry/act/entryRelationship/observation/entryRelationship/observation/value (Descrizione reazioni) DEVE contenere l'elemento originalText/reference.</assert>
				
			</rule>

		
		
		<!--2-->
		<!--Sezione Terapie farmacologiche: controllo sulle entry-->			
		<rule context="hl7:ClinicalDocument/hl7:component/hl7:structuredBody/hl7:component/hl7:section[hl7:code[@code='10160-0']]/hl7:entry">
			<assert test="count(hl7:substanceAdministration[@moodCode='INT' or @moodCode='EVN'])=1"
			>ERRORE-b77| Sezione Terapia Farmacologica: entry DEVE contenere un elemento di tipo 'substanceAdministration' con attributo @moodCode valrizzato con 'INT' o 'EVN'. </assert>
			<assert test="(count(hl7:substanceAdministration/hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.4.3.2.1'])=1 or
						  count(hl7:substanceAdministration/hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.4.3.2.3'])=1)"
			>ERRORE-b78| Sezione Terapia Farmacologica: entry/substanceAdministration DEVE contenere un elemento 'templateId' valorizato come segue:
			- @root='2.16.840.1.113883.2.9.10.1.4.3.2.1' per Terapia o 
			- @root='2.16.840.1.113883.2.9.10.1.4.3.2.3' per Assenza di terapia</assert>
		<!--Terapia-->
			<assert test="count(hl7:substanceAdministration/hl7:text)=0 or count(hl7:substanceAdministration/hl7:text/hl7:reference/@value)=1"
			>ERRORE-b79| Sezione Terapia Farmacologica: entry/substanceAdministration/text DEVE contenere l'elemento reference/@value valorizzato con l’URI che punta alla descrizione della terapia nel narrative block della sezione.</assert>
			<assert test="count(hl7:substanceAdministration/hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.4.3.2.1'])=0 or
			count(hl7:substanceAdministration/hl7:effectiveTime[@xsi:type='IVL_TS']/hl7:low)=1"
			>ERRORE-b80| Sezione Terapia Farmacologica: entry/substanceAdministration/effectiveTime DEVE essere presente e deve avere l'elemento 'low' valorizzato  </assert>				
			<let name="status" value="hl7:substanceAdministration/hl7:statusCode/@code"/>
			<assert test="count(hl7:substanceAdministration/hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.4.3.2.1'])=0 or
			($status='completed' and count(hl7:substanceAdministration/hl7:effectiveTime[@xsi:type='IVL_TS']/hl7:high)=1) or
			($status='aborted' and count(hl7:substanceAdministration/hl7:effectiveTime[@xsi:type='IVL_TS']/hl7:high)=1) or 
			($status='suspended' and count(hl7:substanceAdministration/hl7:effectiveTime[@xsi:type='IVL_TS']/hl7:high)=0) or 
			($status='active' and count(hl7:substanceAdministration/hl7:effectiveTime[@xsi:type='IVL_TS']/hl7:high)=0)"
			>ERRORE-b81| Sezione Terapia Farmacologica: entry/substanceAdministration/effectiveTime/high DEVE essere presente nel caso in cui lo 'statusCode' sia 'completed'oppure'aborted'
			</assert>	
			<assert test="count(hl7:substanceAdministration/hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.4.3.2.1'])=0 or
			count(hl7:substanceAdministration/hl7:consumable/hl7:manufacturedProduct/hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.4.3.2.2'])=1"
			>ERRORE-b82| Sezione Terapia Farmacologica: entry/substanceAdministration/consumable/manufacturedProduct DEVE contenere un elemento 'templateId' valorizzato con @root='2.16.840.1.113883.2.9.10.1.4.3.2.2'.</assert>
			<let name="farma" value="hl7:substanceAdministration[hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.4.3.2.1']]/hl7:consumable/hl7:manufacturedProduct/hl7:manufacturedMaterial"/>
			<assert test="count(hl7:substanceAdministration[hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.4.3.2.1']])=0 or 
			(count($farma/hl7:code[@codeSystem='2.16.840.1.113883.2.9.6.1.5'])=1 or 
			count($farma/hl7:code[@codeSystem='2.16.840.1.113883.6.73'])=1 or
			count($farma/hl7:code[@codeSystem='2.16.840.1.113883.2.9.6.1.51'])=1)"
			>ERRORE-b83| Sezione Terapia Farmacologica: entry/substanceAdministration/consumable/manufacturedProduct/manufacturedMaterial deve contenere un elemento 'code' valorizzato secondo i seguenti sistemi di codifica:
			- @codeSystem='2.16.840.1.113883.2.9.6.1.5' 	(AIC)
			- @codeSystem='2.16.840.1.113883.6.73'			(ATC)
			- @codeSystem='2.16.840.1.113883.2.9.6.1.51'	(GE)
			</assert>			
			<let name="trans_vl" value="hl7:substanceAdministration[hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.4.3.2.1']]/hl7:consumable/hl7:manufacturedProduct/hl7:manufacturedMaterial"/>
			<assert test="count($trans_vl/hl7:code/hl7:translation)=0 or
			(count($trans_vl/hl7:code[@codeSystem='2.16.840.1.113883.6.73']/hl7:translation[@codeSystem='2.16.840.1.113883.2.9.6.1.5'])=1 or
			count($trans_vl/hl7:code[@codeSystem='2.16.840.1.113883.6.73']/hl7:translation[@codeSystem='2.16.840.1.113883.2.9.6.1.51'])=1 or
			count($trans_vl/hl7:code[@codeSystem='2.16.840.1.113883.2.9.6.1.5']/hl7:translation[@codeSystem='2.16.840.1.113883.6.73'])=1 or
			count($trans_vl/hl7:code[@codeSystem='2.16.840.1.113883.2.9.6.1.5']/hl7:translation[@codeSystem='2.16.840.1.113883.2.9.6.1.51'])=1 or
			count($trans_vl/hl7:code[@codeSystem='2.16.840.1.113883.2.9.6.1.51']/hl7:translation[@codeSystem='2.16.840.1.113883.6.73'])=1 or
			count($trans_vl/hl7:code[@codeSystem='2.16.840.1.113883.2.9.6.1.51']/hl7:translation[@codeSystem='2.16.840.1.113883.2.9.6.1.5'])=1)"
			>ERRORE-b84| Sezione Terapia farmacologica: entry/substanceAdministration/consumable/manufacturedProduct/manufacturedMaterial/code/translation DEVE essere valorizzato secondo i seguenti sistemi di codifica:
			@codeSystem='2.16.840.1.113883.6.73' (ATC)
			@codeSystem='2.16.840.1.113883.2.9.6.1.5' (AIC)
			@codeSystem='2.16.840.1.113883.2.9.6.1.51' (GE)</assert>
			
			<!--Indicazione assenza terapie note-->
			<assert test="count(hl7:substanceAdministration/hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.4.3.2.3'])=0 or 
			count(hl7:substanceAdministration/hl7:code[@codeSystem='2.16.840.1.113883.11.22.15' or @codeSystem='2.16.840.1.113883.5.1150.1'])"
			>ERRORE-b85| Sezione Terapia farmacologica: entry/substanceAdministration/code DEVE essere valorizzato secondo il value set @codeSystem='2.16.840.1.113883.11.22.15' o @codeSystem='2.16.840.1.113883.5.1150.1' (Absent or Unknown Medication)</assert>
			
		</rule>


		
		<!--3-->
		<!--Vaccinazioni-->
		<rule context="hl7:ClinicalDocument/hl7:component/hl7:structuredBody/hl7:component/hl7:section[hl7:code[@code='11369-6']]/hl7:entry">
	   
			<assert test="count(hl7:substanceAdministration)=1 and count(hl7:substanceAdministration/hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.4.3.3.1'])=1"
			>ERRORE-b86| Sezione Vaccinazioni: entry/substanceAdministration DEVE essere conforme al 'templateId' valorizzato con  @root='2.16.840.1.113883.2.9.10.1.4.3.3.1'
			</assert>
			<assert test="count(hl7:substanceAdministration/hl7:code[@code='IMMUNIZ'][@codeSystem='2.16.840.1.113883.5.4'])=1 "
			>ERRORE-b87| Sezione Vaccinazioni: entry/substanceAdministration DEVE contenere un 'code' valorizzato con il gli attributi @code='IMMUNIZ' e @codeSystem='2.16.840.1.113883.5.4' </assert>		   
			<assert test="count(hl7:substanceAdministration/hl7:text)=0 or count(hl7:substanceAdministration/hl7:text/hl7:reference/@value)=1"
			>ERRORE-b88| Sezione Vaccinazioni: entry/substanceAdministration/text/reference DEVE contenere l'attributo @value valorizzato con l’URI che punta alla descrizione della terapia nel narrative block della sezione.</assert>
			<assert test="count(hl7:substanceAdministration/hl7:statusCode[@code='completed'])=1 "
			>ERRORE-b89| Sezione Vaccinazioni: entry/substanceAdministration DEVE contenere uno statusCode valorizzato @code='completed' </assert>   
			<assert test="count(hl7:substanceAdministration/hl7:consumable/hl7:manufacturedProduct/hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.4.3.3.2'])=1"
			>ERRORE-b90| Sezione Vaccinazioni: entry/substanceAdministration/consumable/manufacturedProduct DEVE contenere l'elemento 'templateId' valorizzato con @root='2.16.840.1.113883.2.9.10.1.4.3.3.2'</assert>			   		
			<let name="farma_vacc" value="hl7:substanceAdministration/hl7:consumable/hl7:manufacturedProduct/hl7:manufacturedMaterial"/>
			<assert test="count($farma_vacc/hl7:code/@code)=0 or 
			count($farma_vacc/hl7:code[@codeSystem='2.16.840.1.113883.2.9.6.1.5'])=1 or 
			count($farma_vacc/hl7:code[@codeSystem='2.16.840.1.113883.6.73'])=1"
			>ERRORE-b91| Sezione Vaccinazioni: entry/substanceAdministration/consumable/manufacturedProduct/manufacturedMaterial DEVE contenere un elemento 'code' valorizzato secondo i seguenti sistemi di codifica:
			- @codeSystem='2.16.840.1.113883.2.9.6.1.5' 	(AIC)
			- @codeSystem='2.16.840.1.113883.6.73'			(ATC)
			</assert>			
			<let name="trans_vacc" value="hl7:substanceAdministration/hl7:consumable/hl7:manufacturedProduct/hl7:manufacturedMaterial"/>
			<assert test="count($trans_vacc/hl7:code/hl7:translation)=0 or
			(count($trans_vacc/hl7:code[@codeSystem='2.16.840.1.113883.6.73']/hl7:translation[@codeSystem='2.16.840.1.113883.2.9.6.1.5'])=1 or
			count($trans_vacc/hl7:code[@codeSystem='2.16.840.1.113883.2.9.6.1.5']/hl7:translation[@codeSystem='2.16.840.1.113883.6.73'])=1)"
			>ERRORE-b92| Sezione Vaccinazioni: entry/substanceAdministration/consumable/manufacturedProduct/manufacturedMaterial/code/translation DEVE essere valorizzato secondo i seguenti sistemi di codifica:
			@codeSystem='2.16.840.1.113883.6.73' (ATC)
			@codeSystem='2.16.840.1.113883.2.9.6.1.5' (AIC)</assert>	
			<assert test="count(hl7:substanceAdministration/hl7:consumable/hl7:manufacturedProduct/hl7:manufacturedMaterial/hl7:lotNumberText)=1"
			>ERRORE-b93| Sezione Vaccinazioni: entry/substanceAdministration/consumable/manufacturedProduct/manufacturedMaterial DEVE contenere un elemento 'lotNumberText'. </assert> 
			<assert test="count(hl7:substanceAdministration/hl7:consumable/hl7:manufacturedProduct/hl7:manufacturedMaterial/hl7:code/@nullFlavor)=0 or 
			count(hl7:substanceAdministration/hl7:consumable/hl7:manufacturedProduct/hl7:manufacturedMaterial/hl7:code[@nullFlavor='OTH'])=1 and 
			count(hl7:substanceAdministration/hl7:consumable/hl7:manufacturedProduct/hl7:manufacturedMaterial/hl7:code/hl7:originalText/hl7:reference)=1"
			>ERRORE-b94| Sezione Vaccinazioni: entry/substanceAdministration/consumable/manufacturedProduct/manufacturedMaterial/code non codificato deve avere l'attributo @nullFlavor='OTH' e deve contenere l'elemento originalText/reference valorizzato.</assert> 
			
			<!--periodo di copertura-->
			<assert test="count(hl7:substanceAdministration/hl7:entryRelationship/hl7:observation/hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.4.3.3.3']) &lt;=1"
			>ERRORE-b95| Sezione Vaccinazioni: entry/substanceAdministration può contenere  al più un entryRelationship/obersavation che descrive il "Periodo di copertura" conforme al 'templateId' @root='2.16.840.1.113883.2.9.10.1.4.3.3.3' </assert> 	  
			<assert test="count(hl7:substanceAdministration/hl7:entryRelationship/hl7:observation/hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.4.3.3.3'])=0 or
			count(hl7:substanceAdministration/hl7:entryRelationship/hl7:observation[hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.4.3.3.3']]/hl7:code[@code='59781-5'][@codeSystem='2.16.840.1.113883.6.1'])=1"
			>ERRORE-b96| Sezione Vaccinazioni: entry/substanceAdministration/entryReletionship/observation (Periodo di copertura) DEVE avere un elemento 'code' valorizzato con @code='59781-5' e @codeSystem='2.16.840.1.113883.6.1' </assert> 
			<assert test="count(hl7:substanceAdministration/hl7:entryRelationship/hl7:observation/hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.4.3.3.3'])=0 or
			count(hl7:substanceAdministration/hl7:entryRelationship/hl7:observation[hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.4.3.3.3']]/hl7:statusCode[@code='completed'])=1"
			>ERRORE-b97| Sezione Vaccinazioni: entry/substanceAdministration/entryReletionship/observation (Periodo di copertura) DEVE contenere un elemento 'statusCode' valorizzato con 'completed'</assert> 
			<assert test="count(hl7:substanceAdministration/hl7:entryRelationship/hl7:observation/hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.4.3.3.3'])=0 or
			count(hl7:substanceAdministration/hl7:entryRelationship/hl7:observation[hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.4.3.3.3']]/hl7:value/hl7:high)=1"
			>ERRORE-b98| Sezione Vaccinazioni: entry/substanceAdministration/entryReletionship/observation (Periodo di copertura) DEVE deve contenere un elemento 'value' il quale deve avere l'elemento 'high' valorizzato. </assert> 
	 
			<!--numero di dose-->
			<assert test="count(hl7:substanceAdministration/hl7:entryRelationship/hl7:observation/hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.4.3.3.4']) &lt;=1"
			>ERRORE-b99| Sezione Vaccinazioni: entry/substanceAdministration può contenere al più un entryRelationship/obersavation che descrive il "Numero delle dosi" conforme al 'templateId' @root='2.16.840.1.113883.2.9.10.1.4.3.3.4'.</assert> 
			<assert test="count(hl7:substanceAdministration/hl7:entryRelationship/hl7:observation/hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.4.3.3.4'])=0 or
			count(hl7:substanceAdministration/hl7:entryRelationship/hl7:observation[hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.4.3.3.4']]/hl7:code[@code='30973-2'][@codeSystem='2.16.840.1.113883.6.1'])=1"
			>ERRORE-b100| Sezione Vaccinazioni: entry/substanceAdministration/entryReletionship/observation (Numero delle dosi) DEVE contenere un elemento 'code' valorizzato con @code='30973-2' e @codeSystem='2.16.840.1.113883.6.1' </assert> 
			<assert test="count(hl7:substanceAdministration/hl7:entryRelationship/hl7:observation/hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.4.3.3.4'])=0 or
			count(hl7:substanceAdministration/hl7:entryRelationship/hl7:observation[hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.4.3.3.4']]/hl7:statusCode[@code='completed'])=1"
			>ERRORE-b101| Sezione Vaccinazioni: entry/substanceAdministration/entryReletionship/observation (Numero delle dosi) DEVE deve contenere un elemento 'statusCode' valorizzato con @code='completed' </assert> 
			<assert test="count(hl7:substanceAdministration/hl7:entryRelationship/hl7:observation/hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.4.3.3.4'])=0 or
			count(hl7:substanceAdministration/hl7:entryRelationship/hl7:observation[hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.4.3.3.4']]/hl7:value[@xsi:type='INT'])=1"
			>ERRORE-b102| Sezione Vaccinazioni: entry/substanceAdministration/entryReletionship/observation (Numero delle dosi) DEVE contenere un elemento 'value' il cui attributo @xsi:type='INT' </assert> 
		 	<assert test="count(hl7:substanceAdministration/hl7:entryRelationship/hl7:observation/hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.4.3.3.4'])=0 or
			count(hl7:substanceAdministration/hl7:entryRelationship/hl7:observation[hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.4.3.3.4']]/hl7:value/@value)=1"
			>ERRORE-b103| Sezione Vaccinazioni: entry/substanceAdministration/entryReletionship/observation/value DEVE avere l'attributo @value valorizzato</assert> 
		 	
			<!--annotazioni e commenti-->
			<assert test="count(hl7:substanceAdministration/hl7:entryRelationship[@typeCode='SUBJ'][hl7:act])=0 or 
			count(hl7:substanceAdministration/hl7:entryRelationship/hl7:act/hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.4.3.1.7'])>=1"
			>ERRORE-b104| Sezione Vaccinazioni: entry/substanceAdministration/entryRelationship/act relativo a "Annotazioni e commenti" deve contenere l'elemento 'templateId' valorizzato con @root='2.16.840.1.113883.2.9.10.1.4.3.1.7' </assert> 	  
			
			
			
	   </rule>	
		
			<!--Vaccinazioni: descrizione reazioni-->
			<rule context="hl7:ClinicalDocument/hl7:component/hl7:structuredBody/hl7:component/hl7:section[hl7:code[@code='11369-6']]/hl7:entry/hl7:substanceAdministration/hl7:entryRelationship[@typeCode='CAUS']">
				
				<assert test="count(hl7:observation/hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.4.3.1.5.1' or @root='2.16.840.1.113883.2.9.10.1.4.3.1.5.2'])=1"
				>ERRORE-b105| Sezione Vaccinazioni: entry/substanceAdministration/entryRelationship/observation (Descrizione reazione) DEVE essere conforme al 'templateId' @root='2.16.840.1.113883.2.9.10.1.4.3.1.5.1' (Descrizione reazione codificata) o '2.16.840.1.113883.2.9.10.1.4.3.1.5.2' (Descrizione reazione non codificata)</assert> 
				<assert test="count(hl7:observation/hl7:code[@code='75321-0'][@codeSystem='2.16.840.1.113883.6.1'])=1"
				>ERRORE-b106| Sezione Vaccinazioni: entry/substanceAdministration/entryRelationship/observation (Descrizione reazione) DEVE contenere l'elemento 'code' valorizzato con @code='75321-0' e @codeSystem='2.16.840.1.113883.6.1'. </assert>
				<assert test="count(hl7:observation/hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.4.3.1.5.1'])=0 or
				count(hl7:observation/hl7:value[@codeSystem='2.16.840.1.113883.2.9.77.22.11.3' or @codeSystem='2.16.840.1.113883.2.9.77.22.11.4' or @codeSystem='2.16.840.1.113883.6.103'])=1"
				>ERRORE-b107| Sezione Vaccinazioni: entry/substanceAdministration/entryRelationship/observation (Descrizione reazione) DEVE contenere l'elemento 'value' valorizzato secondo i seguenti sistemi di codifica:
				- 2.16.840.1.113883.2.9.77.22.11.3		Value Set Reazioni Intolleranza
				- 2.16.840.1.113883.2.9.77.22.11.4 		Value Set Reazioni Allergiche
				-2.16.840.1.113883.6.103				ICD-9-CM
				</assert>				
				<assert test="count(hl7:observation/hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.4.3.1.5.2'])=0 or
				count(hl7:observation/hl7:value/hl7:originalText/hl7:reference)=1"
				>ERRORE-b108| Sezione Vaccinazioni: entry/substanceAdministration/entryRelationship/observation/value (Descrizione reazione) DEVE contenere l'elemento originalText/reference.</assert>
					
			</rule>
		
		
		<!--4-->
		<!--Sezione Lista dei problemi: problema (entry/act)-->
		<rule context="hl7:ClinicalDocument/hl7:component/hl7:structuredBody/hl7:component/hl7:section[hl7:code[@code='11450-4']]/hl7:entry">
			
			<assert test="count(hl7:act[@classCode='ACT'][@moodCode='EVN'])=1"
			>ERRORE-b109| Sezione Lista dei problemi: la 'entry' DEVE essere di tipo 'act' valorizzato con gli attributi @classCode='ACT' e @moodCode='EVN'</assert>
			<assert test="count(hl7:act/hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.4.3.4.1'])=1"
			>ERRORE-b110| Sezione Lista dei problemi: entry/act DEVE contenere un elemento 'templateId' valorizzato con @root='2.16.840.1.113883.2.9.10.1.4.3.4.1'.</assert>
			<assert test="count(hl7:act/hl7:effectiveTime/hl7:low)=1"
			>ERRORE-b111| Sezione Lista dei problemi: entry/act DEVE contenere un elemento 'effectiveTime' il quale deve avere l'elemento 'low' valorizzato.</assert>
			<assert test="count(hl7:act/hl7:statusCode)=1"
			>ERRORE-b112| Sezione Lista dei problemi: entry/act DEVE contenere l'elemento 'statusCode'.</assert>
			<let name="stats" value="hl7:act/hl7:statusCode/@code"/>
			<assert test="count(hl7:act/hl7:statusCode/@nullFlavor)=1 or 
			($stats='completed' and count(hl7:act/hl7:effectiveTime/hl7:high)=1) or
			($stats='aborted' and count(hl7:act/hl7:effectiveTime/hl7:high)=1) or 
			($stats='suspended' and count(hl7:act/hl7:effectiveTime/hl7:high)=0) or 
			($stats='active' and count(hl7:act/hl7:effectiveTime/hl7:high)=0)"
			>ERRORE-b113| Sezione Lista dei problemi: entry/act/effectiveTime/high DEVE essere presente nel caso in cui lo 'statusCode' sia 'completed' oppure 'aborted'</assert>
			
			<assert test="count(hl7:act/hl7:entryRelationship/hl7:observation)&gt;=1"
			>ERRORE-b114| Sezione Lista dei problemi: entry/act DEVE contenere almeno una entryRelationship/observation relativa ai "Dettagli del problema" </assert>
			
			
		</rule>
		
			<!--Sezione Lista dei problemi: dettagli problema (entry/act/entryRelationship/observation)-->
			<rule context="hl7:ClinicalDocument/hl7:component/hl7:structuredBody/hl7:component/hl7:section[hl7:code[@code='11450-4']]/hl7:entry/hl7:act/hl7:entryRelationship">
			
				<assert test="count(hl7:observation)=1 or count(hl7:act)=1"
				>ERRORE-b115| Sezione Lista dei problemi: l'elemento entry/act/entryRelationship deve avere uno dei seguenti sotto elementi:
				- 'observation': per i dettagli del problema;
				- 'act': per i riferimenti interni al problema;</assert>
				<assert test="count(hl7:observation)=0 or count(hl7:observation/hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.4.3.4.2'])=1"
				>ERRORE-b116| Sezione Lista dei problemi: entry/act/entryRelationship/observation deve avere un elemento templateId con attributo @root='2.16.840.1.113883.2.9.10.1.4.3.4.2'</assert>
				<assert test="count(hl7:observation)=0 or count(hl7:observation/hl7:id)=1"
				>ERRORE-b117| Sezione Lista dei problemi: entry/act/entryRelationship/observation deve contenere l'elemento id </assert>				
				<assert test="count(hl7:observation)=0 or count(hl7:observation/hl7:effectiveTime/hl7:low)=1"
				>ERRORE-b118| Sezione Lista dei problemi: entry/act/entryRelationship/observation/effectiveTime deve contenere l'elemento low e deve essere valorizzato</assert>
				<assert test="count(hl7:observation)=0 or count(hl7:observation/hl7:value)=1"
				>ERRORE-b119| Sezione Lista dei problemi: entry/act/entryRelationship/observation deve contenere l'elemento 'value'.</assert>
				<assert test="count(hl7:observation/hl7:statusCode[@nullFlavor='NA'])=0 or 
				count(hl7:observation/hl7:value[@codeSystem='2.16.840.1.113883.11.22.17'])=1"
				>ERRORE-b120| Sezione Lista dei problemi: entry/act/entryRelationship/observation/value deve essere valorizzato secondo il value set  "Absent or Unknown Problems" - @codeSystem='2.16.840.1.113883.11.22.17' .</assert>
			
				
					<!--Gravità del Problema-->
					<assert test="count(hl7:observation)=0 or 
					count(hl7:observation/hl7:entryRelationship[hl7:observation/hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.4.3.4.4']])&lt;=1"
					>ERRORE-b121| Sezione Lista dei problemi: entry/act/entryRelationship/observation può contenere una ed una sola 'entryRelationship/observation' relativa alla "Gravità del problema" </assert>

					<!--Stato del Problema-->
					<assert test="count(hl7:observation)=0 or 
					count(hl7:observation/hl7:entryRelationship/hl7:observation[hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.4.3.1.6']])&lt;=1"
					>ERRORE-b122| Sezione Lista dei problemi: entry/act/entryRelationship/observation può contenere una ed una sola 'entryRelationship/observation' relativa allo "Stato clinico del problema"</assert>
					<assert test="count(hl7:observation/hl7:entryRelationship/hl7:observation[hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.4.3.1.6']])=0 or
					count(hl7:observation/hl7:entryRelationship/hl7:observation[hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.4.3.1.6']]/hl7:code[@code='33999-4'][@codeSystem='2.16.840.1.113883.6.1'])=1"
					>ERRORE-b123| Sezione Lista dei problemi: entry/act/entryRelationship/observation/entryRelationship/observation/code (Stato problema) DEVE essere valorizzato con @code='33999-4' e @codeSystem='2.16.840.1.113883.6.1'.</assert>
					<assert test="count(hl7:observation/hl7:entryRelationship/hl7:observation[hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.4.3.1.6']])=0 or
					count(hl7:observation/hl7:entryRelationship/hl7:observation[hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.4.3.1.6']]/hl7:value[@codeSystem='2.16.840.1.113883.2.9.77.22.11.11' or @codeSystem='2.16.840.1.113883.6.1'])=1"
					>ERRORE-b124| Sezione Lista dei problemi: entry/act/entryRelationship/observation/entryRelationship/observation/value/@code DEVE essere selezionato dal value set "Stato clinico del Problema" - @codeSystem='2.16.840.1.113883.2.9.77.22.11.11' oppure LOINC - @codeSystem='2.16.840.1.113883.6.1'. </assert>
					<assert test="count(hl7:observation/hl7:entryRelationship/hl7:observation[hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.4.3.1.6']])=0 or
					(count(hl7:observation/hl7:entryRelationship/hl7:observation[hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.4.3.1.6']]/hl7:value[@code='LA16666-2'])=1 or
					count(hl7:observation/hl7:entryRelationship/hl7:observation[hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.4.3.1.6']]/hl7:value[@code='LA18632-2'])=1)"
					>ERRORE-b124a| Sezione Lista dei problemi: l'attributo @code di entry/act/entryRelationship/observation/entryRelationship/observation/value/ relativo allo "Stato Clinico del problema" deve essere valorizzato con:
					- "LA16666-2" se "active";
					- "LA18632-2" se "inactive".
					</assert>
				
					<!--Cronicità del Problema-->
					<assert test="count(hl7:observation)=0 or 
					count(hl7:observation/hl7:entryRelationship/hl7:observation[hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.4.3.4.5']])&lt;=1"
					>ERRORE-b125| Sezione Lista dei problemi: entry/act/entryRelationship/observation può contenere una ed una sola 'entryRelationship/observation' relativa alla "Cronicità del problema"</assert>
					<assert test="count(hl7:observation/hl7:entryRelationship/hl7:observation[hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.4.3.4.5']])=0 or 
					count(hl7:observation/hl7:entryRelationship/hl7:observation[hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.4.3.4.5']]/hl7:code[@code='89261-2'][@codeSystem='2.16.840.1.113883.6.1'])=1"
					>ERRORE-b126| Sezione Lista dei problemi: entry/act/entryRelationship/observation/entryRelationship/observation (Cronicità del Problema) DEVE contenere un elemento 'code' valorizzato con @code='89261-2' e @codeSystem='2.16.840.1.113883.6.1'</assert>
					<assert test="count(hl7:observation/hl7:entryRelationship/hl7:observation[hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.4.3.4.5']])=0 or 
					count(hl7:observation/hl7:entryRelationship/hl7:observation[hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.4.3.4.5']]/hl7:value[@codeSystem='2.16.840.1.113883.2.9.77.22.11.10' or @codeSystem='2.16.840.1.113883.6.1'])=1"
					>ERRORE-b127| Sezione Lista dei problemi: entry/act/entryRelationship/observation/entryRelationship/observation (Cronicità del Problema) DEVE contenere un elemento 'value' valorizzato secondo @codeSystem='2.16.840.1.113883.2.9.77.22.11.10' (CronicitàProblema_PSS) or @codeSystem='2.16.840.1.113883.6.1'</assert>
					<assert test="count(hl7:observation/hl7:entryRelationship/hl7:observation[hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.4.3.4.5']])=0 or 
					(count(hl7:observation/hl7:entryRelationship/hl7:observation[hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.4.3.4.5']]/hl7:value[@code='LA28752-6'])=1 or
					count(hl7:observation/hl7:entryRelationship/hl7:observation[hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.4.3.4.5']]/hl7:value[@code='LA18821-1'])=1)"
					>ERRORE-b127a| Sezione Lista dei problemi: l'attributo @code di entry/act/entryRelationship/observation/entryRelationship/observation/value (Cronicità del Problema) deve essere valorizzato con:
					- "LA28752-6" se "chronic";
					- "LA18821-1" se "acute".
					</assert>
					
					<!--Note e commenti-->
					<assert test="count(hl7:observation/hl7:entryRelationship[@typeCode='SUBJ'][hl7:act])=0 or 
					count(hl7:observation/hl7:entryRelationship/hl7:act/hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.4.3.1.7'])>=1"
					>ERRORE-b128| Sezione Lista dei problemi: entry/act/entryRelationship/observation/entryRelationship/act (Note e Commenti) DEVE avere un templateId valorizzato con @root='2.16.840.1.113883.2.9.10.1.4.3.1.7'</assert> 	  
					
				<!--Riferimenti Interni-->		
				<assert test="count(hl7:act)=0 or count(hl7:act/hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.4.3.4.3'])>=1"
				>ERRORE-b129| Sezione Lista dei problemi: entry/act/entryRelationship/act (Riferimenti interni) DEVE avere un elemento 'templateId' valorizzato con  @root='2.16.840.1.113883.2.9.10.1.4.3.4.3'</assert>
			
			</rule>
			
		<!--5-->
		<!--Sezione Anamnesi Familiare: (entry/organizer)-->
		<rule context="hl7:ClinicalDocument/hl7:component/hl7:structuredBody/hl7:component/hl7:section[hl7:code[@code='10157-6']]/hl7:entry">
			<assert test="count(hl7:organizer[@classCode='CLUSTER'][@moodCode='EVN'])=1"
			>ERRORE-b130| Sezione Anamnesi Familiare: la sezione DEVE contenere un elemento entry/organizer valorizzato con attributi @classCode='CLUSTER' e @moodCode='EVN'</assert>
			<assert test="count(hl7:organizer/hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.4.3.16.1'])=1"
			>ERRORE-b131| Sezione Anamnesi Familiare: entry/organizer DEVE contenere un elemento 'templateId' dvalorizzato con @root='2.16.840.1.113883.2.9.10.1.4.3.16.1'</assert>
			<assert test="count(hl7:organizer/hl7:subject)=1"
			>ERRORE-b132| Sezione Anamnesi Familiare: entry/organizer DEVE contenere un elemento 'subject'</assert>
			<assert test="count(hl7:organizer/hl7:subject/hl7:relatedSubject[@classCode='PRS'])=1"
			>ERRORE-b133| Sezione Anamnesi Familiare: entry/organizer/subject/relatedSubject DEVE essere valorizzato con l'attributo @classCode='PRS'</assert>
			<assert test="count(hl7:organizer/hl7:subject/hl7:relatedSubject/hl7:code[@codeSystem='2.16.840.1.113883.5.111'])=1"
			>ERRORE-b134| Sezione Anamnesi Familiare: entry/organizer/subject/relatedSubject/code deve essere valorizzato secondo la tabella "PersonalRelationshipRoleCodeType" relativo al code system "RoleCode" - @codeSystem='2.16.840.1.113883.5.111' </assert>
			<assert test="count(hl7:organizer/hl7:subject/hl7:relatedSubject/hl7:subject/hl7:administrativeGenderCode)=0 or
			count(hl7:organizer/hl7:subject/hl7:relatedSubject/hl7:subject/hl7:administrativeGenderCode[@codeSystem='2.16.840.1.113883.5.1' or @codeSystem='2.16.840.1.113883.1.11.1'])=1"
			>ERRORE-b135| Sezione Anamnesi Familiare: entry/organizer/subject/relatedSubject/subject/administrativeGenderCode DEVE essere valorizzato secondo il code system "HL7 AdministrativeGender" - @codeSystem='2.16.840.1.113883.1.11.1'</assert>
			<assert test="count(hl7:organizer/hl7:component[hl7:observation])>=1"
			>ERRORE-b136| Sezione Anamnesi Familiare: entry/organizer DEVE contenere almeno un elemento 'component' di tipo 'observation'</assert>
			
		</rule>
		
			<!--Sezione Anamnesi Familiare: Dettaglio Anamnesi Familiare(entry/organizer/component/observation)-->
			<rule context="hl7:ClinicalDocument/hl7:component/hl7:structuredBody/hl7:component/hl7:section[hl7:code[@code='10157-6']]/hl7:entry/hl7:organizer/hl7:component">
			
				<assert test="count(hl7:observation)=1"
				>ERRORE-b137| Sezione Anamnesi Familiare: entry/organizer/component DEVE contenere un elemento di tipo 'observation'</assert>
				<assert test="count(hl7:observation/hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.4.3.16.2'])=1"
				>ERRORE-b138| Sezione Anamnesi Familiare: entry/organizer/component/observation DEVE contenere un elemento 'templateId' valorizzato con @root='2.16.840.1.113883.2.9.10.1.4.3.16.2'</assert>
				<assert test="count(hl7:observation/hl7:code[@codeSystem='2.16.840.1.113883.6.1' or @codeSystem='2.16.840.1.113883.2.9.77.22.11.9'])=1"
				>ERRORE-b139| Sezione Anamnesi Familiare: entry/organizer/component/observation DEVE contenere un elemento 'code' valorizzato secondo @codeSystem='2.16.840.1.113883.6.1' oppure @codeSystem='2.16.840.1.113883.2.9.77.22.11.9'</assert>
				<assert test="(count(hl7:observation/hl7:entryRelationship[hl7:observation])&lt;=2)"
				>ERRORE-b140| Sezione Anamnesi Familiare: entry/organizer/component/observation/entryRelationship di tipo 'observation' DEVE essere presente al più 2 volte:
				- età di insorgenza
				- età di decesso</assert>
			</rule>
			<!--Sezione Anamnesi Familiare: Età insorgenza e di decesso(entry/organizer/component/observation/entryRelationship/observation)-->
			<rule context="hl7:ClinicalDocument/hl7:component/hl7:structuredBody/hl7:component/hl7:section[hl7:code[@code='10157-6']]/hl7:entry/hl7:organizer/hl7:component/hl7:observation/hl7:entryRelationship">
			
				<assert test="count(hl7:observation/hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.4.3.16.3'])=1"
				>ERRORE-b141| Sezione Anamnesi Familiare: entry/organizer/component/observation/entryRelationship/observation DEVE contenere un elemento 'templateId' valorizzato con @root='2.16.840.1.113883.2.9.10.1.4.3.16.3'</assert>
				
				<assert test="count(hl7:observation/hl7:code[@code='35267-4' or @code='39016-1'])=1"
				>ERRORE-b142| Sezione Anamnesi Familiare: entry/organizer/component/observation/entryRelationship/observation/code DEVE essere valorizzato secondo il value set "EtàInsorgenza" derivato da @codeSystem='2.16.840.1.113883.6.1':
				- @code='35267-4': età di insorgenza
				- @code='39016-1': età di decesso</assert>
				<assert test="count(hl7:observation/hl7:statusCode[@code='completed'])=1"
				>ERRORE-b143| Sezione Anamnesi Familiare: entry/organizer/component/observation/entryRelationship/observation DEVE contenere un elemento 'statusCode' valorizzato con @code='completed'</assert>
				<assert test="count(hl7:observation/hl7:value)=1"
				>ERRORE-b144| Sezione Anamnesi Familiare: entry/organizer/component/observation/entryRelationship/observation DEVE contenere un elemento 'value'</assert>
			
			</rule>
		

		
		<!--6-->
		<!--Sezione Stile di vita: osservazione (entry/observation)-->
		<rule context="hl7:ClinicalDocument/hl7:component/hl7:structuredBody/hl7:component/hl7:section[hl7:code[@code='29762-2']]/hl7:entry">
			
			<assert test="count(hl7:observation)=0 or count(hl7:observation/hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.4.3.6.1'])=1"
			>ERRORE-b145| Sezione stile di vita: entry/observation DEVE contenere un elemento 'templateId' valorizzato con @root='2.16.840.1.113883.2.9.10.1.4.3.6.1'</assert>
			<assert test="count(hl7:observation)=0 or count(hl7:observation/hl7:id)=1"
			>ERRORE-b146| Sezione stile di vita: entry/observation DEVE contenere un solo elemento 'id' </assert>
			<assert test="count(hl7:observation)=0 or count(hl7:observation/hl7:code[@codeSystem='2.16.840.1.113883.6.1'])=1"
			>ERRORE-b147| Sezione stile di vita: entry/observation/code DEVE essere selezionato dal value set "SocialHistoryEntryElement_PSSIT DYNAMIC" derivato da @codeSystem='2.16.840.1.113883.6.1'</assert>
			<assert test="count(hl7:observation/hl7:text)=0 or count(hl7:observation/hl7:text/hl7:reference/@value)=1"
			>ERRORE-b148| Sezione stile di vita: entry/observation/text DEVE contenere l'elemento 'reference/@value' valorizzato con l'URI che punta alla descrizione del problema nel narrative block</assert>
			<assert test="count(hl7:observation/hl7:value/hl7:originalText)=0 or count(hl7:observation/hl7:value/hl7:originalText/hl7:reference/@value)=1"
			>ERRORE-b149| Sezione stile di vita: entry/observation/value/originalText DEVE contenere l'elemento 'reference/@value' valorizzato con l'URI che punta alla descrizione dell'informazione nel narrative block</assert>
		
		</rule> 
		
		
		
		<!--7-->
		<!--Sezione Gravidanze e parto: dettaglio (entry/observation)-->
		<rule context="hl7:ClinicalDocument/hl7:component/hl7:structuredBody/hl7:component/hl7:section[hl7:code[@code='10162-6']]/hl7:entry">
			
			<assert test="count(hl7:observation/hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.4.3.7.1'])=1"
			>ERRORE-b150| Sezione gravidanze e parto: entry/observation DEVE contenere un elemento 'templateId' valorizzato con @root='2.16.840.1.113883.2.9.10.1.4.3.7.1'</assert>
			<assert test="count(hl7:observation/hl7:id)=1"
			>ERRORE-b151| Sezione gravidanze e parto: entry/observation DEVE contenere un solo elemento 'id' </assert>
			<assert test="count(hl7:observation/hl7:code[@codeSystem='2.16.840.1.113883.6.1'])=1"
			>ERRORE-b152| Sezione gravidanze e parto: entry/observation/code DEVE essere selezionato dal value set "PregnancyObservation_PSSIT" derivato da @codeSystem='2.16.840.1.113883.6.1' </assert>
		</rule>



		<!--8-->
		<!--Parametri Vitali: controllo sulle entry-->
		<rule context="hl7:ClinicalDocument/hl7:component/hl7:structuredBody/hl7:component/hl7:section[hl7:code[@code='8716-3']]/hl7:entry">
			
			<assert test="count(hl7:organizer)=1 or count(hl7:observation)=1"
			>ERRORE-b153| Sezione Parametri Vitali: l'entry DEVE contenere o un elemento di tipo 'organizer' oppure di tipo 'observation'.</assert>
			
			<!--organizer-->
			<assert test="count(hl7:organizer)=0 or count(hl7:organizer/hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.4.3.8.1'])=1"
			>ERRORE-b154| Sezione Parametri Vitali: entry/organizer DEVE contenere un 'templateId' valorizzato con @root='2.16.840.1.113883.2.9.10.1.4.3.8.1' </assert>
			<assert test="count(hl7:organizer)=0 or count(hl7:organizer/hl7:component[hl7:observation])>=1"
			>ERRORE-b155| Sezione Parametri Vitali: entry/organizer DEVE contenere almeno un elemento 'component' di tipo 'observation'</assert>
			
			<!--observation-->
			<assert test="count(hl7:observation)=0 or count(hl7:observation/hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.4.3.8.2'])=1"
			>ERRORE-b156| Sezione Parametri Vitali: entry/observation DEVE contenere un elemento 'templateId' valorizzato con @root='2.16.840.1.113883.2.9.10.1.4.3.8.2'.</assert>
			<assert test="count(hl7:observation)=0 or count(hl7:observation/hl7:code[@codeSystem='2.16.840.1.113883.6.1'])=1"
			>ERRORE-b157| Sezione Parametri Vitali: entry/observation/code DEVE essere valorizzato con @codeSystem='2.16.840.1.113883.6.1'.</assert>
			<assert test="count(hl7:observation)=0 or count(hl7:observation/hl7:value[@xsi:type='PQ'])=1"
			>ERRORE-b158| Sezione Parametri Vitali: entry/observation/value DEVE avere valorizzato l'attributo @xsi:type='PQ'.</assert>
			
		</rule>
			
			<!--Parametri Vitali: controllo entry/organizer/component/observation-->
			<rule context="hl7:ClinicalDocument/hl7:component/hl7:structuredBody/hl7:component/hl7:section[hl7:code[@code='8716-3']]/hl7:entry/hl7:organizer/hl7:component">
				
				<assert test="count(hl7:observation/hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.4.3.8.2'])=1"
				>ERRORE-b159| Sezione Parametri Vitali: entry/organizer/component/observation DEVE contenere un elemento 'templateId' valorizzato con @root='2.16.840.1.113883.2.9.10.1.4.3.8.2'.</assert>
				<assert test="count(hl7:observation/hl7:code[@codeSystem='2.16.840.1.113883.6.1'])=1"
				>ERRORE-b160| Sezione Parametri Vitali: entry/organizer/component/observation/code DEVE essere valorizzato secondo il @codeSystem='2.16.840.1.113883.6.1'.</assert>
				<assert test="count(hl7:observation/hl7:value[@xsi:type='PQ'])=1"
				>ERRORE-b161| Sezione Parametri Vitali: entry/organizer/component/observation/value DEVE avere valorizzato l'attributo @xsi:type='PQ'.</assert>
			
			</rule>



		<!--9-->
		<!--Protesi, Impianti e Ausili: controllo sulle entry-->
		<rule context="hl7:ClinicalDocument/hl7:component/hl7:structuredBody/hl7:component/hl7:section[hl7:code[@code='46264-8']]/hl7:entry">
			
			<assert test="(count(hl7:supply)=1) and
			(count(hl7:supply/hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.4.3.9.1'])=1 or
			count(hl7:supply/hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.4.3.9.2'])=1)"
			>ERRORE-b162| Sezione Protesi, impianti, ausili: l'entry DEVE essere di tipo 'supply' e DEVE contenere un elemento 'templateId' valorizzato a seconda dei due seguenti casi:
			- Indicazione presenza: @root='2.16.840.1.113883.2.9.10.1.4.3.9.1'
			- Indiczione assenza: @root='2.16.840.1.113883.2.9.10.1.4.3.9.2'</assert>
			
			<!--dettaglio presenza protesi impianti ausili-->
			<assert test="count(hl7:supply[hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.4.3.9.1']])=0 or 
			count(hl7:supply/hl7:code[@codeSystem='2.16.840.1.113883.2.9.6.1.48'])=1"
			>ERRORE-b163| Sezione Protesi, impianti, ausili: entry/supply DEVE contenere un elemento 'code'valorizzato secondo il code system "Classificazione Nazionale dei Dispositivi medici" - @codeSystem='2.16.840.1.113883.2.9.6.1.48'.</assert>
			<assert test="count(hl7:supply[hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.4.3.9.1']])=0 or 
			count(hl7:supply[hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.4.3.9.1']]/hl7:effectiveTime)=1"
			>ERRORE-b164| Sezione Protesi, impianti, ausili: entry/supply DEVE contenere un elemento 'effectiveTime'. </assert>
		
			<!--assenza protesi impianti ausili-->
			<assert test="count(hl7:supply[hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.4.3.9.2']])=0 or 
			count(hl7:supply/hl7:code[@codeSystem='2.16.840.1.113883.11.22.36'])=1"
			>ERRORE-b165| Sezione Protesi, impianti, ausili: entry/supply DEVE contenere un elemento 'code' valorizzato secondo il value set "IPSNoProceduresInfos" - @codeSystem='2.16.840.1.113883.11.22.36'.</assert>	
		</rule>

		
		<!--10-->
		<!--Sezione Piani di cura: controllo sulle entry-->
		<rule context="hl7:ClinicalDocument/hl7:component/hl7:structuredBody/hl7:component/hl7:section[hl7:code[@code='18776-5']]/hl7:entry">
			
			<assert test="count(hl7:observation)=1 or count(hl7:substanceAdministration)=1 or count(hl7:procedure)=1 or count(hl7:encounter)=1 or count(hl7:act)=1"
			>ERRORE-b166| Sezione Piani di cura: l'entry può contenere uno dei seguenti sotto statement:
			- 'observation':	 per le prestazioni del piano di cura;
			- 'substanceAdministration': 	per le terapie o le vaccinazioni del piano di cura;
			- 'procedure': 	per le procedure chirurgiche previste dal piano di cura;
			- 'encounter': 	per le visite o i ricoveri previsti da piano di cura;
			- 'act': 	per altre attività del piano di cura.</assert>
		
		<!--Sezione Piani di cura: observation-->
			<assert test="count(hl7:observation)=0 or count(hl7:observation[@moodCode='INT' or @moodCode='PRMS' or @moodCode='PRP' or @moodCode='RQO' or @moodCode='GOL'])=1"
			>ERRORE-b167|Sezione Piani di cura: entry/observation DEVE avere l'attributo @moodCode valorizzato con uno dei seguenti valori: 'INT' or 'PRMS' or 'PRP' or 'RQO' or 'GOL' </assert>
			<assert test="count(hl7:observation)=0 or count(hl7:observation/hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.4.3.10.1'])=1"
			>ERRORE-b168|Sezione Piani di cura: entry/observation DEVE contenere un elemento 'templateId' valorizzato con @root='2.16.840.1.113883.2.9.10.1.4.3.10.1'</assert>
			<assert test="count(hl7:observation)=0 or count(hl7:observation/hl7:id)=1"
			>ERRORE-b169|Sezione Piani di cura: entry/observation DEVE contenere un solo elemento 'id' </assert>
			<assert test="count(hl7:observation/hl7:effectiveTime)=0 or (count(hl7:observation/hl7:effectiveTime[@value])=1 or count(hl7:observation/hl7:effectiveTime/hl7:low)=1)"
			>ERRORE-b170|Sezione Piani di cura: entry/observation/effectiveTime DEVE avere l'attributo @value valorizzato nel caso si voglia descrivere un preciso istante (point in time)
			oppure DEVE avere l'elemento 'low' valorizzato nel caso si voglia indicare un intervallo temporale.</assert>
		
		<!--Sezione Piani di cura: substanceAdministration-->
			<assert test="count(hl7:substanceAdministration)=0 or count(hl7:substanceAdministration[@moodCode='INT' or @moodCode='PRMS' or @moodCode='PRP' or @moodCode='RQO'])=1"
			>ERRORE-b171|Sezione Piani di cura: entry/substanceAdministration DEVE avere l'attributo @moodCode valorizzato con uno dei seguenti valori: 'INT' or 'PRMS' or 'PRP' or 'RQO'</assert>
			<assert test="count(hl7:substanceAdministration)=0 or count(hl7:substanceAdministration/hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.4.3.10.2'])=1"
			>ERRORE-b172|Sezione Piani di cura: entry/substanceAdministration DEVE contenere un elemento 'templateId' valorizzato con @root='2.16.840.1.113883.2.9.10.1.4.3.10.2'</assert>
			<assert test="count(hl7:substanceAdministration)=0 or count(hl7:substanceAdministration/hl7:id)=1"
			>ERRORE-b173|Sezione Piani di cura: entry/substanceAdministration DEVE contenere un solo elemento 'id'.</assert>
			<assert test="count(hl7:substanceAdministration/hl7:effectiveTime[@xsi:type='IVL_TS'])=0 or 
			(count(hl7:substanceAdministration/hl7:effectiveTime[@xsi:type='IVL_TS']/@value)=1 or count(hl7:substanceAdministration/hl7:effectiveTime[@xsi:type='IVL_TS']/hl7:low)=1)"
			>ERRORE-b174|Sezione Piani di cura: entry/substanceAdministration/effectiveTime DEVE avere l'attributo @value valorizzato nel caso si voglia descrivere un preciso istante (point in time)
			oppure DEVE avere l'elemento 'low' valorizzato nel caso si voglia indicare un intervallo temporale. </assert>
		
		<!--Sezione Piani di cura: procedure-->
			<assert test="count(hl7:procedure)=0 or count(hl7:procedure[@moodCode='INT' or @moodCode='ARQ' or @moodCode='PRMS' or @moodCode='PRP' or @moodCode='RQO'])=1"
			>ERRORE-b175|Sezione Piani di cura: entry/procedure DEVE avere l'attributo @moodCode valorizzato con uno dei seguenti valori: 'INT' or 'ARQ' or 'PRMS' or 'PRP' or 'RQO'</assert>
			<assert test="count(hl7:procedure)=0 or count(hl7:procedure/hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.4.3.10.3'])=1"
			>ERRORE-b176|Sezione Piani di cura: entry/procedure DEVE contenere un elemento 'templateId' valorizzato con @root='2.16.840.1.113883.2.9.10.1.4.3.10.3'</assert>
			<assert test="count(hl7:procedure)=0 or count(hl7:procedure/hl7:id)=1"
			>ERRORE-b177|Sezione Piani di cura: entry/procedure DEVE contenere un solo elemento 'id' </assert>
			<assert test="count(hl7:procedure)=0 or count(hl7:procedure/hl7:code)=1"
			>ERRORE-b178|Sezione Piani di cura: entry/procedure DEVE contenere un solo elemento code </assert>
			<assert test="count(hl7:procedure/hl7:effectiveTime)=0 or (count(hl7:procedure/hl7:effectiveTime[@value])=1 or count(hl7:procedure/hl7:effectiveTime/hl7:low)=1)"
			>ERRORE-b179|Sezione Piani di cura: entry/procedure/effectiveTime DEVE avere l'attributo @value valorizzato nel caso si voglia descrivere un preciso istante (point in time)
			oppure DEVE avere l'elemento 'low' valorizzato nel caso si voglia indicare un intervallo temporale.</assert>
		
		<!--Sezione Piani di cura: encounter-->
			<assert test="count(hl7:encounter)=0 or count(hl7:encounter[@moodCode='INT' or @moodCode='ARQ' or @moodCode='PRMS' or @moodCode='PRP' or @moodCode='RQO'])=1"
			>ERRORE-b180|Sezione Piani di cura: entry/encounter DEVE avere l'attributo @moodCode valorizzato con uno dei seguenti valori: 'INT' or 'ARQ' or 'PRMS' or 'PRP' or 'RQO'</assert>
			<assert test="count(hl7:encounter)=0 or count(hl7:encounter/hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.4.3.10.4'])=1"
			>ERRORE-b181|Sezione Piani di cura: entry/encounter DEVE contenere un elemento 'templateId' valorizzato con @root='2.16.840.1.113883.2.9.10.1.4.3.10.4'</assert>
			<assert test="count(hl7:encounter)=0 or count(hl7:encounter/hl7:id)=1"
			>ERRORE-b182|Sezione Piani di cura: entry/encounter DEVE contenere un solo elemento 'id'.</assert>
			<assert test="count(hl7:encounter)=0 or count(hl7:encounter/hl7:code)=1"
			>ERRORE-b183|Sezione Piani di cura: entry/encounter DEVE contenere un solo elemento 'code' </assert>
			<assert test="count(hl7:encounter)=0 or count(hl7:encounter/hl7:code[@codeSystem='2.16.840.1.113883.2.9.77.22.11.14' or @codeSystem='2.16.840.1.113883.5.4'])=1"
			>ERRORE-b184|Sezione Piani di cura: entry/encounter/code DEVE essere valorizzato secondo il value set "EncounterCode" - @codeSystem='2.16.840.1.113883.2.9.77.22.11.14' </assert>
			<assert test="count(hl7:encounter/hl7:effectiveTime)=0 or (count(hl7:encounter/hl7:effectiveTime/@value)=1 or count(hl7:encounter/hl7:effectiveTime/hl7:low)=1)"
			>ERRORE-b185|Sezione Piani di cura: entry/encounter/effectiveTime DEVE avere l'attributo @value valorizzato nel caso si voglia descrivere un preciso istante (point in time)
			oppure DEVE avere l'elemento 'low' valorizzato nel caso si voglia indicare un intervallo temporale. </assert>
		
		<!--Sezione Piani di cura: act-->
			<assert test="count(hl7:act)=0 or count(hl7:act[@moodCode='INT' or @moodCode='ARQ' or @moodCode='PRMS' or @moodCode='PRP' or @moodCode='RQO'])=1"
			>ERRORE-b186|Sezione Piani di cura: entry/act DEVE acere l'attributo @moodCode valorizzato secondo i seguenti valori: 'INT' or 'ARQ' or 'PRMS' or 'PRP' or 'RQO'</assert>
			<assert test="count(hl7:act)=0 or count(hl7:act/hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.4.3.10.5'])=1"
			>ERRORE-b187|Sezione Piani di cura: entry/act DEVE contenere un elemento 'templateId' valorizzato con @root='2.16.840.1.113883.2.9.10.1.4.3.10.5'</assert>
			<assert test="count(hl7:act)=0 or count(hl7:act/hl7:id)=1"
			>ERRORE-b188|Sezione Piani di cura: entry/act DEVE contenere un solo elemento 'id' </assert>
			<assert test="count(hl7:act/hl7:effectiveTime)=0 or (count(hl7:act/hl7:effectiveTime[@value])=1 or count(hl7:act/hl7:effectiveTime/hl7:low)=1)"
			>ERRORE-b189|Sezione Piani di cura: entry/act/effectiveTime DEVE avere l'attributo @value valorizzato nel caso si voglia descrivere un preciso istante (point in time)
			oppure DEVE avere l'elemento 'low' valorizzato nel caso si voglia indicare un intervallo temporale. </assert>
			
		</rule>
		
		
		
		<!--11-->
		<!--Trattamenti e procedure terapeutiche, chirurgiche e diagnostiche: controllo delle entry-->
		<rule context="hl7:ClinicalDocument/hl7:component/hl7:structuredBody/hl7:component/hl7:section[hl7:code[@code='47519-4']]/hl7:entry">
			
			<assert test="count(hl7:procedure/hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.4.3.11.1'])=1"
			>ERRORE-b190| Sezione Trattamenti e procedure terapeutiche, chirurgiche e diagnostiche: entry/procedure DEVE contenere un elemento 'templateId' valorizzato con l'attributo @root='2.16.840.1.113883.2.9.10.1.4.3.11.1'. </assert>
			<assert test="(count(hl7:procedure/hl7:code[@codeSystem='2.16.840.1.113883.6.1'])=1 or 
			count(hl7:procedure/hl7:code[@codeSystem='2.16.840.1.113883.6.103'])=1 or
			count(hl7:procedure/hl7:code[@codeSystem='2.16.840.1.113883.2.9.77.22.11.12'])=1 or
			count(hl7:procedure/hl7:code[@codeSystem='2.16.840.1.113883.11.22.36'])=1)"
			>ERRORE-b191| Sezione Trattamenti e procedure terapeutiche, chirurgiche e diagnostiche: entry/procedure DEVE contenere un elemento 'code' valorizzato secondo i seguenti sistemi di codifica:
			- LOINC (@codeSystem: 2.16.840.1.113883.6.1)
			- ICD-9-CM (@codeSystem: 2.16.840.1.113883.6.103)
			- ProcedureTrapianti_PSSIT (2.16.840.1.113883.2.9.77.22.11.12)
			- IPSNoProceduresInfos  (@codeSystem='2.16.840.1.113883.11.22.36').</assert>
			
		</rule>	
	

	
		<!--12-->
		<!--Visite o ricoveri-->
		<rule context="hl7:ClinicalDocument/hl7:component/hl7:structuredBody/hl7:component/hl7:section[hl7:code[@code='46240-8']]/hl7:entry">
			
			<assert test="count(hl7:encounter[@moodCode='EVN'])=1"
			>ERRORE-b192| Sezione Visite o ricoveri: entry/encounter DEVE avere l'attributo @moodCode valorizzato con 'EVN'.</assert>
			<assert test="count(hl7:encounter/hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.4.3.12.1'])=1"
			>ERRORE-b193| Sezione Visite o ricoveri: entry/encounter DEVE contenere un elemento 'templateId valorizzato con @root='2.16.840.1.113883.2.9.10.1.4.3.12.1'.</assert>
			<assert test="count(hl7:encounter/hl7:id)=1"
			>ERRORE-b194| Sezione Visite o ricoveri: entry/encounter DEVE contenere un 'id'.</assert>
			
			<assert test="(count(hl7:encounter/hl7:code[@codeSystem='2.16.840.1.113883.6.1'])=1 or 
			count(hl7:encounter/hl7:code[@codeSystem='2.16.840.1.113883.2.9.77.22.11.14'])=1 or 
			count(hl7:encounter/hl7:code[@codeSystem='2.16.840.1.113883.5.4'])=1)"
			>ERRORE-b195| Sezione Visite o ricoveri: entry/encounter DEVE contenere un elemento 'code' valorizzato secondo i seguenti sistemi di codifica:
			- LOINC (@codeSystem: 2.16.840.1.113883.6.1)
			- EncounterCode (@codeSystem=2.16.840.1.113883.2.9.77.22.11.14) (derivato da ActCode)
			- ActCode  (@codeSystem=2.16.840.1.113883.5.4).</assert>
			
			<assert test="count(hl7:encounter/hl7:text)=0 or count(hl7:encounter/hl7:text/hl7:reference/@value)=1"
			>ERRORE-b196| Sezione Visite o ricoveri: entry/encounter/text DEVE contenere un elemento reference/@value valorizzato con l’URI che punta alla descrizione estesa della visita o ricovero nel narrative block della sezione.</assert>
		
			<report test="not(count(hl7:encounter/hl7:performer)=1)"
			>W004| Sezione Visite o ricoveri: si consiglia di valorizzare, all'interno di entry/encounter, almeno un elemento 'performer'.--> </report>
		
		</rule>


	
		<!--13-->
		<!--Sezione Stato funzionale del paziente: controllo delle entry-->
		<rule context="hl7:ClinicalDocument/hl7:component/hl7:structuredBody/hl7:component/hl7:section[hl7:code[@code='47420-5']]/hl7:entry">
			
			<assert test="count(hl7:organizer/hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.4.3.14.1'])=1"
			>ERRORE-b197| Sezione Stato funzionale del paziente: entry/organizer DEVE contenere un 'templateId' valorizzato con @root='2.16.840.1.113883.2.9.10.1.4.3.14.1'. </assert>
			<assert test="count(hl7:organizer/hl7:component[hl7:observation/hl7:code[@code='75246-9']])=1"
			>ERRORE-b198| Sezione Stato funzionale del paziente: entry/organizer DEVE contenere  una ed una sola component/observation relativa alla "Capacità motoria". </assert>
			<assert test="count(hl7:organizer/hl7:component[hl7:observation/hl7:code[@code!='75246-9']])=0 or
			(count(hl7:organizer/hl7:component[hl7:observation/hl7:code[@code!='75246-9']])&lt;=1)"
			>ERRORE-b199| Sezione Stato funzionale del paziente: entry/organizer può contenere una ed una sola component/observation relativa al "Regime di assistenza" </assert>			
			
			<!--capacità motoria-->
			<assert test="count(hl7:organizer/hl7:component/hl7:observation/hl7:code[@code='75246-9'][@codeSystem='2.16.840.1.113883.6.1'])=1"
			>ERRORE-b200| Sezione Stato funzionale del paziente: entry/organizer/component/observation (Capacità motoria) DEVE contenere un elemento 'code' valorizzato con @code='75246-9' e @codeSystem='2.16.840.1.113883.6.1'</assert>			
			<assert test="count(hl7:organizer/hl7:component/hl7:observation[hl7:code[@code='75246-9']]/hl7:value[@codeSystem='2.16.840.1.113883.6.1' or @codeSystem='2.16.840.1.113883.2.9.77.22.11.15'])=1"
			>ERRORE-b201| Sezione Stato funzionale del paziente: entry/organizer/component/observation (Capacità motoria) DEVE contenere un elemento 'value' valorizzato secondo i seguenti code system:
			- LOINC (@codeSystem: 2.16.840.1.113883.6.1)
			- CapacitàMotoria_PSSIT  (@codeSystem=2.16.840.1.113883.2.9.77.22.11.15). </assert>
			<assert test="count(hl7:organizer/hl7:component/hl7:observation[hl7:code[@code='75246-9']]/hl7:value[@code='LA21285-4'])=1 or 
			count(hl7:organizer/hl7:component/hl7:observation[hl7:code[@code='75246-9']]/hl7:value[@code='LA21286-5'])=1 or
			count(hl7:organizer/hl7:component/hl7:observation[hl7:code[@code='75246-9']]/hl7:value[@code='LA6743-4'])=1 or 
			count(hl7:organizer/hl7:component/hl7:observation[hl7:code[@code='75246-9']]/hl7:value[@code='LA4270-0'])=1"
			>ERRORE-b201a| Sezione Stato funzionale del paziente: entry/organizer/component/observation (Capacità motoria) DEVE contenere un elemento 'value' il cui attributo @code può assumere uno dei seguente valori:
			- "LA21285-4" per la condizione "autonomo";
			- "LA21286-5" per la condizione "assistito";
			- "LA6743-4" per la condizione "su sedia a rotelle";
			- "LA4270-0" per la condizione "allettato".
			</assert>
			
			<!--regime di assistenza-->
			<assert test="count(hl7:organizer/hl7:component/hl7:observation[hl7:code[@code!='75246-9']])=0 or 
			count(hl7:organizer/hl7:component/hl7:observation[hl7:code[@code!='75246-9']]/hl7:code[@codeSystem='2.16.840.1.113883.5.4'])=1"
			>ERRORE-b202| Sezione Stato funzionale del paziente: entry/organizer/component/observation (Regime di assistenza) DEVE contenere un elemento 'code' valorizzato secondo il code system "ActCode" - @codeSystem='2.16.840.1.113883.5.4' </assert>
			<assert test="count(hl7:organizer/hl7:component/hl7:observation[hl7:code[@code!='75246-9']]/hl7:value)=0 or
			count(hl7:organizer/hl7:component/hl7:observation[hl7:code[@code!='75246-9']]/hl7:value[@codeSystem='2.16.840.1.113883.2.9.5.2.8'])=1"
			>ERRORE-b203| Sezione Stato funzionale del paziente: entry/organizer/component/observation/value (Regime di assistenza) DEVE essere valorizzato secondo il value set "AssistenzaDomiciliare_PSSIT" - @codeSystem='2.16.840.1.113883.2.9.5.2.8' </assert>
								
		</rule>
		
			<rule context="hl7:ClinicalDocument/hl7:component/hl7:structuredBody/hl7:component/hl7:section[hl7:code[@code='47420-5']]/hl7:entry/hl7:organizer/hl7:component">
			
				<assert test="count(hl7:observation/hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.4.3.14.2'])=1"
				>ERRORE-b204| Sezione Stato funzionale del paziente: entry/organizer/component/observation DEVE contenere un elemento 'templateId' valorizzato con @root='2.16.840.1.113883.2.9.10.1.4.3.14.2'. </assert>
						
			</rule>
			
		
		
		
		<!--14-->
		<!--Indagini diagnostiche ed esami di laboratorio-->
		<rule context="hl7:ClinicalDocument/hl7:component/hl7:structuredBody/hl7:component/hl7:section[hl7:code[@code='30954-2']]/hl7:entry">
			
			<assert test="count(hl7:organizer/hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.4.3.14.1'])=1"
			>ERRORE-b205| Sezione Indagini diagnostiche ed esami di laboratorio:  entry/organizer DEVE contenere un elemento 'templateId' valorizzato con @root='2.16.840.1.113883.2.9.10.1.4.3.14.1'. </assert>
			<assert test="count(hl7:organizer/hl7:component[hl7:observation])>=1"
			>ERRORE-b206| Sezione Indagini diagnostiche ed esami di laboratorio:  entry/organizer DEVE contenere almeno un elemento 'component' di tipo 'observation'</assert>
			
		</rule>
			
			<rule context="hl7:ClinicalDocument/hl7:component/hl7:structuredBody/hl7:component/hl7:section[hl7:code[@code='30954-2']]/hl7:entry/hl7:organizer/hl7:component">
				
				<assert test="count(hl7:observation/hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.4.3.14.2'])=1"
				>ERRORE-b207| Sezione Indagini diagnostiche ed esami di laboratorio: entry/organizer/component/observation DEVE contenere un elemento 'templateId' valorizzato con @root='2.16.840.1.113883.2.9.10.1.4.3.14.2'.</assert>
				<assert test="count(hl7:observation/hl7:id)=1"
				>ERRORE-b208| Sezione Indagini diagnostiche ed esami di laboratorio: entry/organizer/component/observation DEVE contenere un solo elemento 'id'.</assert>
				
			</rule>


		<!--16-->
		<!--Esenzioni-->
		<rule context="hl7:ClinicalDocument/hl7:component/hl7:structuredBody/hl7:component/hl7:section[hl7:code[@code='57827-8']]/hl7:entry">
			
			<assert test="count(hl7:act[@classCode='ACT'][@moodCode='EVN'])=1"
			>ERRORE-b209| Sezione Esenzioni: entry/act DEVE avere valorizzati gli attributi nel seguente modo @classCode='ACT' e @moodCode='EVN'.</assert>		
			<assert test="count(hl7:act[hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.4.3.17.1']])=1"
			>ERRORE-b210| Sezione Esenzioni: entry/act DEVE contenere un elemento 'templateId' valorizzato con @root='2.16.840.1.113883.2.9.10.1.4.3.17.1'. </assert>
			
			<!--assert test="count(hl7:act/hl7:code[@codeSystem='2.16.840.1.113883.2.9.6.1.22' or @codeSystem='2.16.840.1.113883.2.9.5.2.2'])=1 or 
			matches(hl7:act/hl7:code/@codeSystem,'2.16.840.1.113883.2.9.2.[0-9]{3}.6.22')"
			>ERRORE-b211| Sezione Esenzioni: entry/act/code DEVE essere valorizzato secondo i seguenti sistemi di codifica:
			- Catalogo Nazionale Esenzioni (2.16.840.1.113883.2.9.6.1.22)
			- Catalogo Regionale (2.16.840.1.113883.2.9.2.[REGIONE].6.22)
			- Catalogo Nazionale Nessuna Esenzione (2.16.840.1.113883.2.9.5.2.2)</assert>
			<assert test="count(hl7:act/hl7:effectiveTime/hl7:low)=1"
			>ERRORE-b212| Sezione Esenzioni: entry/act DEVE contenere un elemento 'effectiveTime' il quale deve avere l'elemento 'low' valorizzato.</assert-->
			
			<assert test="count(hl7:act/hl7:code[@codeSystem='2.16.840.1.113883.2.9.6.1.22' or @codeSystem='2.16.840.1.113883.2.9.5.2.2'])=1 or 
			matches(hl7:act/hl7:code/@codeSystem,'2.16.840.1.113883.2.9.2.[0-9]{3}.6.22')"
			>ERRORE-b211| Sezione Esenzioni: entry/act/code DEVE essere valorizzato secondo i seguenti sistemi di codifica:
			- Catalogo Nazionale Esenzioni (2.16.840.1.113883.2.9.6.1.22)
			- Catalogo Regionale (2.16.840.1.113883.2.9.2.[REGIONE].6.22)
			- Catalogo Nazionale Nessuna Esenzione (2.16.840.1.113883.2.9.5.2.2)</assert>
			<assert test="count(hl7:act/hl7:effectiveTime/hl7:low)=1"
			>ERRORE-b212| Sezione Esenzioni: entry/act DEVE contenere un elemento 'effectiveTime' il quale deve avere l'elemento 'low' valorizzato.</assert>
			
			
			<let name="status" value="hl7:act/hl7:statusCode/@code"/>
			<assert test="($status='completed' and count(hl7:act/hl7:effectiveTime/hl7:high)=1) or
						($status='aborted' and count(hl7:act/hl7:effectiveTime/hl7:high)=1) or 
						($status='suspended' and count(hl7:act/hl7:effectiveTime/hl7:high)=0) or 
						($status='active' and count(hl7:act/hl7:effectiveTime/hl7:high)=0)"
			>ERRORE-b213| Sezione Esenzioni: entry/act/effectiveTime DEVE avere un elemento 'high' nel caso in cui lo 'statusCode' è 'completed'|'aborted'.</assert>
			<assert test="count(hl7:act/hl7:entryRelationship/hl7:act)=0 or 
			count(hl7:act/hl7:entryRelationship/hl7:act/hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.4.3.1.7'])>=1"
			>ERRORE-b214| Sezione Esenzioni: entry/act/entryRelationship/act relativo a Note e Commenti deve contenere un elemento 'templateId' valorizzato con @root='2.16.840.1.113883.2.9.10.1.4.3.1.7'</assert>
		</rule>


		
		<!--17-->
		<!--Reti di patologia-->
		<rule context="hl7:ClinicalDocument/hl7:component/hl7:structuredBody/hl7:component/hl7:section[hl7:code[@code='PSSIT99']]/hl7:entry">
			
			<assert test="count(hl7:act[@classCode='PCPR'][@moodCode='EVN'])=1"
			>ERRORE-b215| Sezione Reti di Patologia: entry/act DEVE avere gli attributi valorizzati nel seguente modo @classCode='PCPR' e @moodCode='EVN'.</assert>		
			<assert test="count(hl7:act[hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.4.3.18.1']])=1"
			>ERRORE-b216| Sezione Reti di Patologia: entry/act DEVE avere un elemento 'templateId' valorizzato con @root='2.16.840.1.113883.2.9.10.1.4.3.18.1'. </assert>
			<assert test="count(hl7:act/hl7:id)=1"
			>ERRORE-b217| Sezione Reti di Patologia: entry/act DEVE contenere un elemento 'id'.</assert>			
			<assert test="count(hl7:act/hl7:effectiveTime/hl7:low)=1"
			>ERRORE-b218| Sezione Reti di Patologia: entry/act DEVE contenere un elemento 'effectiveTime' il quale deve avere l'elemento 'low' valorizzato.</assert>
			<let name="status" value="hl7:act/hl7:statusCode/@code"/>
			<assert test="($status='completed' and count(hl7:act/hl7:effectiveTime/hl7:high)=1) or
						($status='aborted' and count(hl7:act/hl7:effectiveTime/hl7:high)=1) or 
						($status='suspended' and count(hl7:act/hl7:effectiveTime/hl7:high)=0) or 
						($status='active' and count(hl7:act/hl7:effectiveTime/hl7:high)=0)"
			>ERRORE-b219| Sezione Reti di Patologia: entry/act/effectiveTime DEVE contenere un elemento 'high' nel caso in cui lo 'statusCode' è 'completed'|'aborted'.</assert>
			<assert test="count(hl7:act/hl7:entryRelationship/hl7:act)=0 or 
			count(hl7:act/hl7:entryRelationship/hl7:act/hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.4.3.1.7'])>=1"
			>ERRORE-b220| Sezione Reti di Patologia: entry/act/entryRelationship/act relativo a Note e Commenti deve contenere un elemento 'templateId' valorizzato con @root='2.16.840.1.113883.2.9.10.1.4.3.1.7'</assert>
		
		</rule>
		
	</pattern>
</schema>
",
      "subType": "00"
    }
  },
  "version": "3.1",
  "template_id_root": "2.16.840.1.113883.2.9.10.1.4.1.1",
  "last_update_date": {
    "$date": "2023-01-16T22:59:22.126Z"
  },
  "deleted": false,
  "last_sync": {
    "$date": "2023-01-16T23:00:03.543Z"
  }
},{
  "_id": {
    "$oid": "63c5d6ccd370ce753aa68178"
  },
  "name_schematron": "schematronFSE_RAD_v3.2.sch",
  "content_schematron": {
    "$binary": {
      "base64": "<?xml version="1.0" encoding="UTF-8"?>
<!-- schematron versione:3.2-->
<schema xmlns="http://purl.oclc.org/dsdl/schematron" 
		xmlns:cda="urn:hl7-org:v3"
        xmlns:iso="http://purl.oclc.org/dsdl/schematron"
        xmlns:sch="http://www.ascc.net/xml/schematron"
        queryBinding="xslt2">
	<title>Schematron Referto di Radiologia  1.1</title>
	<ns prefix="hl7" uri="urn:hl7-org:v3"/>
	<ns prefix="xsi" uri="http://www.w3.org/2001/XMLSchema-instance"/>
	<pattern id="all">
	
	<!--________________________________ HEADER _____________________________________________________________-->
	
	<!-- ClinicalDocument -->
		<rule context="hl7:ClinicalDocument">
		
			<!--Controllo realmCode-->	
			<assert test="count(hl7:realmCode)>=1"
			>ERRORE-1| L'elemento <name/> DEVE avere almeno un elemento 'realmCode'</assert>
			<assert test="count(hl7:realmCode[@code='IT'])= 1"
			>ERRORE-2| L'elemento 'realmCode' DEVE avere l'attributo @root valorizzato come 'IT'</assert>
	        		
			<!--Controllo templateId-->
			<let name="num_tid" value="count(hl7:templateId)"/>
			<assert test="$num_tid >=1"
			>ERRORE-3| L'elemento <name/> DEVE avere almeno un elemento di tipo 'templateId'</assert>
			<assert test="count(hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.7.1'])= 1 and  count(hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.7.1']/@extension)= 1"
			>ERRORE-4| Almeno un elemento 'templateId' DEVE essere valorizzato attraverso l'attributo  @root='2.16.840.1.113883.2.9.10.1.7.1' (id del template nazionale)  associato all'attributo @extension che  indica la versione a cui il templateId fa riferimento</assert>
			
			<!--Controllo code-->	
			<assert test="count(hl7:code[@code='68604-8'][@codeSystem='2.16.840.1.113883.6.1']) = 1"
			>ERRORE-5| L'elemento <name/>/code deve essere valorizzato con l'attributo @code='68604-8' e il @codeSystem='2.16.840.1.113883.6.1'</assert>
			
			<report test="not(count(hl7:code[@codeSystemName='LOINC'])=1) or not(count(hl7:code[@displayName='Referto Radiologico'])=1 or
			count(hl7:code[@displayName='REFERTO RADIOLOGICO'])=1 or count(hl7:code[@displayName='Referto radiologico'])=1)"
			>W001| Si raccomanda di valorizzare gli attributi dell'elemento <name/>/code nel seguente modo: @codeSystemName ='LOINC' e @displayName ='Referto Radiologico'.--> </report>
				
			<!--Controllo confidentialityCode-->
			<assert test="(count(hl7:confidentialityCode[@code='N'][@codeSystem='2.16.840.1.113883.5.25'])= 1) or 
			(count(hl7:confidentialityCode[@code='V'][@codeSystem='2.16.840.1.113883.5.25'])= 1)"
			>ERRORE-6| L'elemento  'confidentialityCode' di <name/> DEVE avere l'attributo @code  valorizzato con 'N' o 'V', e il suo @codeSystem  con '2.16.840.1.113883.5.25'</assert>
			
			<!--Controllo languageCode-->	
			<assert test="count(hl7:languageCode)=1"
			>ERRORE-7| L'elemento <name/> DEVE contenere un solo elemento 'languageCode' </assert>
			
			<!--Controllo incrociato tra setId-versionNumber e relatedDocument-->
			<let name="versionNumber" value="hl7:versionNumber/@value"/>
			<assert test="(string(number($versionNumber)) = 'NaN') or
					($versionNumber= 1 and hl7:id/@root = hl7:setId/@root and hl7:id/@extension = hl7:setId/@extension) or
					($versionNumber!= '1' and hl7:id/@root = hl7:setId/@root and hl7:id/@extension != hl7:setId/@extension) or
					(hl7:id/@root != hl7:setId/@root)"
			>ERRORE-8|: Se ClinicalDocument.id e ClinicalDocument.setId usano lo stesso dominio di identificazione (@root identico) allora l’attributo @extension del
			ClinicalDocument.id deve essere diverso da quello del ClinicalDocument.setId a meno che ClinicalDocument.versionNumber non sia uguale ad 1; cioè i valori del setId ed id per un documento clinico possono coincidere solo per la prima versione di un documento.</assert>
			
			<assert test="(string(number($versionNumber)) ='NaN') or
						  ($versionNumber=1) or 
						  (($versionNumber &gt;1) and count(hl7:relatedDocument)=1)"
			>ERRORE-9| Se l'attributo <name/>/versionNumber/@value maggiore di  1 l'elemento <name/>  deve contenere un elemento di tipo 'relatedDocument'.</assert>
			
			<!--Controllo recordTarget-->
			<assert test="count(hl7:recordTarget)=1"
			>ERRORE-10| L'elemento <name/> DEVE contenere un solo elemento 'recordTarget' </assert>
			
			<!--Controllo recordTarget/patientRole/id-->
			<!--Controllo recordTarget/patientRole/id-->
			<assert test="count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.4.3.2'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.4.3.7'])=1 or 
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.4.3.3'])=1 or 
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.4.3.18'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.4.3.17'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.4.3.15'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.2.10.4.1'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.2.20.4.1'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.2.30.4.1'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.2.41.4.1'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.2.42.4.1'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.2.50.4.1'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.2.60.4.1'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.2.70.4.1'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.2.80.4.1'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.2.90.4.1'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.2.100.4.1'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.2.110.4.1'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.2.120.4.1'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.2.130.4.1'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.2.140.4.1'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.2.150.4.1'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.2.160.4.1'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.2.170.4.1'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.2.180.4.1'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.2.190.4.1'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.2.200.4.1'])=1"
			>ERRORE-11a| L'elemento <name/>/recordTarget/patientRole/id  deve avere l'attributo @root valorizzato tramite una  delle seguenti identificatori Nazionanli:
			CF 2.16.840.1.113883.2.9.4.3.2
			TEAM 2.16.840.1.113883.2.9.4.3.7 o 2.16.840.1.113883.2.9.4.3.3
			ENI 2.16.840.1.113883.2.9.4.3.18
			STP 2.16.840.1.113883.2.9.4.3.17
			ANA 2.16.840.1.113883.2.9.4.3.15
			Oppure tramite gli identificatori regionali generati per rappresentare l'id del paziente.
			</assert>
			
			<!--Controllo addr-->
			<let name="num_addr" value="count(hl7:recordTarget/hl7:patientRole/hl7:addr)"/>
			<assert test="$num_addr=0 or (count(hl7:recordTarget/hl7:patientRole/hl7:addr/hl7:country)=$num_addr and 
			count(hl7:recordTarget/hl7:patientRole/hl7:addr/hl7:city)=$num_addr and 
			count(hl7:recordTarget/hl7:patientRole/hl7:addr/hl7:streetAddressLine)=$num_addr)"
			>ERRORE-11| L'elemento <name/>/recordTarget/patientRole/addr DEVE riportare i suoi sotto-elementi 'country', 'city' e 'streetAddressLine'.   </assert>
			
			<!--Controllo recordTarget/patientRole/patient/name-->
			<let name="patient" value="hl7:recordTarget/hl7:patientRole/hl7:patient"/>
			<assert test="count($patient)=1"
			>ERRORE-12|L'elemento <name/>/recordTaget/patientRole DEVE contenere l'elemento 'patient'.</assert>
			<assert test="count($patient)=0 or count($patient/hl7:name)=1"
			>ERRORE-13| L'elemento <name/>/recordTaget/patientRole/patient DEVE contenere l'elemento 'name'</assert>
			<assert test="count($patient)=0 or (count($patient/hl7:name/hl7:given)=1 and count($patient/hl7:name/hl7:family)=1)"
			>ERRORE-14| L'elemento ClinicalDocument/recordTaget/patientRole/patient/name DEVE riportare gli elementi 'given' e 'family'</assert>

			<!--Controllo recordTarget/patientRole/patient/administrativeGenderCode-->
			<let name="genderOID" value="hl7:recordTarget/hl7:patientRole/hl7:patient/hl7:administrativeGenderCode/@codeSystem"/>
			
			<assert test="count($patient)=0 or count(hl7:recordTarget/hl7:patientRole/hl7:patient/hl7:administrativeGenderCode)=1"
			>ERRORE-15| L'attributo <name/>/recordTarget/patientRole/patient DEVE contenere l'elemento administrativeGenderCode </assert>
			<assert test="count($patient)=0 or $genderOID='2.16.840.1.113883.5.1'"
			>ERRORE-16| L'OID assegnato all'attributo <name/>/recordTarget/patientRole/patient/administrativeGenderCode/@codeSystem='<value-of select="$genderOID"/>' non è corretto. L'attributo DEVE essere valorizzato con '2.16.840.1.113883.5.1' </assert>
			
			<!--Controllo recordTarget/patientRole/patient/birthTime-->
			<assert test="count($patient)=0 or
			(count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.4.3.2' or 
			@root='2.16.840.1.113883.2.9.4.3.7' or @root='2.16.840.1.113883.2.9.4.3.3' or 
			@root='2.16.840.1.113883.2.9.4.3.17'])=0) or 
			count(hl7:recordTarget/hl7:patientRole/hl7:patient/hl7:birthTime)=1"
			>ERRORE-17| L'elemento <name/>/recordTaget/patientRole/patient DEVE riportare un elemento 'birthTime'.</assert>
			
			<!--Controllo recordTarget/patientRole/patient/birthplace/place/addr-->
			<assert test="count(hl7:recordTarget/hl7:patientRole/hl7:patient/hl7:birthplace)=0 or 
			count(hl7:recordTarget/hl7:patientRole/hl7:patient/hl7:birthplace/hl7:place/hl7:addr)=1"
			>ERRORE-18| L'elemento <name/>/recordTarget/patientRole/patient/birthplace DEVE contenere un elemento place/addr </assert>	
			
		
			
			<!--Controllo dataEnterer/time-->	
			<assert test="count(hl7:dataEnterer)=0 or count(hl7:dataEnterer/hl7:time)"
			>ERRORE-23| L'elemento <name/>/dataEnterer DEVE avere un elemento 'time'</assert>
			
			<!--Controllo dataEnterer/assignedEntity/id-->
			<let name="id_dataEnterer" value="hl7:dataEnterer/hl7:assignedEntity/hl7:id"/>
			<assert test="count(hl7:dataEnterer)=0 or count($id_dataEnterer[@root='2.16.840.1.113883.2.9.4.3.2'])=1"
			>ERRORE-24| L'elemento ClinicalDocument/dataEnterer/assignedEntity DEVE avere almeno un elemento 'id' <value-of select="$id_dataEnterer"/> con l'attributo @root valorizzato con '2.16.840.1.113883.2.9.4.3.2'</assert>
				
			
			<!--Controllo dataEnterer/assignedEntity/assignedPerson-->
			<let name="nome" value="hl7:dataEnterer/hl7:assignedEntity/hl7:assignedPerson/hl7:name"/>
			<assert test="count(hl7:dataEnterer)=0 or (count(hl7:dataEnterer/hl7:assignedEntity/hl7:assignedPerson)=1 and 
			count(hl7:dataEnterer/hl7:assignedEntity/hl7:assignedPerson/hl7:name)=1)"
			>ERRORE-25| L'elemento <name/>/dataEnterer/assignedEntity DEVE riportare l'elemento 'assignedPerson/name'.</assert>
			<assert test="count(hl7:dataEnterer)=0 or (count($nome/hl7:family)=1 and count($nome/hl7:given)=1)"
			>ERRORE-26| L'elemento <name/>/dataEnterer/assignedEntity/assignedPerson/name DEVE avere gli elementi 'given' e 'family'.</assert>

			<!--Controllo ClinicalDocument/custodian/assignedCustodian/representedCustodianOrganization-->
			<assert test="count(hl7:custodian/hl7:assignedCustodian/hl7:representedCustodianOrganization/hl7:name)=1"
			>ERRORE-27| ClinicalDocument/custodian/assignedCustodian/representedCustodianOrganization deve contenere un elemento 'name'</assert>
			<let name="num_addr_cust" value="count(hl7:custodian/hl7:assignedCustodian/hl7:representedCustodianOrganization/hl7:addr)"/>
			<let name="addr_cust" value="hl7:custodian/hl7:assignedCustodian/hl7:representedCustodianOrganization/hl7:addr"/>
			<assert test="$num_addr_cust=0 or (count($addr_cust/hl7:country)=$num_addr_cust and count($addr_cust/hl7:city)=$num_addr_cust and count($addr_cust/hl7:streetAddressLine)=$num_addr_cust)"
			>ERRORE-28| L'elemento <name/>/custodian/assignedCustodian/representedCustodianOrganization/addr DEVE riportare i sotto-elementi 'country', 'city' e 'streetAddressLine'.</assert>
			
			<!--Controllo legalAuthenticator-->
			<assert test = "count(hl7:legalAuthenticator)= 1" 
			>ERRORE-29| L'elemento legalAuthenticator è obbligatorio </assert>
			<assert test = "count(hl7:legalAuthenticator)= 0 or count(hl7:legalAuthenticator/hl7:signatureCode[@code='S'])= 1" 
			>ERRORE-30| L'elemento legalAuthenticator/signatureCode deve essere valorizzato con il codice "S"  </assert>
			<assert test = "count(hl7:legalAuthenticator)= 0 or count(hl7:legalAuthenticator/hl7:assignedEntity/hl7:id[@root='2.16.840.1.113883.2.9.4.3.2'])= 1"
			>ERRORE-31| L'elemento legalAuthenticator/assignedEntity DEVE contenere almeno un elemento id valorizzato con l'attributo @root '2.16.840.1.113883.2.9.4.3.2'</assert>
			<assert test = "count(hl7:legalAuthenticator)= 0 or count(hl7:legalAuthenticator/hl7:assignedEntity/hl7:assignedPerson/hl7:name)=1"
			>ERRORE-32| ClinicalDocument/legalAuthenticator/assignedEntity/assignedPerson DEVE contenere l'elemento 'name'. </assert>
			<assert test = "count(hl7:legalAuthenticator)= 0 or (count(hl7:legalAuthenticator/hl7:assignedEntity/hl7:assignedPerson/hl7:name/hl7:family)=1 and count(hl7:legalAuthenticator/hl7:assignedEntity/hl7:assignedPerson/hl7:name/hl7:given)=1)"
			>ERRORE-33| ClinicalDocument/legalAuthenticator/assignedEntity/assignedPerson/name DEVE riportare gli elementi 'given' e 'family'</assert>
			
			
			<!--Controllo inFulfillmentOf-->
			<assert test ="count(hl7:inFulfillmentOf)>=1" 
			>ERRORE-38| In ClinicalDocuemnt DEVE essere presente almeno un elemento 'inFulfillmentOf'. </assert>

            <!--Controllo documentationOf-->
			<assert test = "count (hl7:documentationOf/hl7:serviceEvent)=0 or 
			                count (hl7:documentationOf/hl7:serviceEvent/hl7:code[@code='PROG'])=1 or
                            count (hl7:documentationOf/hl7:serviceEvent/hl7:code[@code='DIR'])=1 or 
							count (hl7:documentationOf/hl7:serviceEvent/hl7:code[@code='RAD_PROG'])=1 or 
							count (hl7:documentationOf/hl7:serviceEvent/hl7:code[@code='RAD_DIR'])=1"
			>ERRORE-40| L'elemento ClinicalDocument/documentationOf/serviceEvent deve contenere l'elemento code e DEVE valorizzare il suo attributo code con uno dei seguenti valori: 'PROG'|'DIR'|'RAD_PROG|'RAD_DIR' </assert>			
			<assert test = "count(hl7:documentationOf/hl7:serviceEvent)= 0 or count(hl7:documentationOf/hl7:serviceEvent/hl7:code[@codeSystem='2.16.840.1.113883.2.9.5.1.4'])= 1"
			>ERRORE-41| L'elemento ClinicalDocument/documentationOf/serviceEvent DEVE contenere l'elemento code valorizzato con l'attributo @codeSystem '2.16.840.1.113883.2.9.5.1.4'</assert>

			<!--Controllo componentOf-->
			<let name="path_name" value="hl7:componentOf/hl7:encompassingEncounter/hl7:responsibleParty/hl7:assignedEntity/hl7:assignedPerson/hl7:name"/>
			<let name="code_encomp" value="hl7:componentOf/hl7:encompassingEncounter/hl7:code/@code"/>
			<!--WARNING-->
			<!--report test="not(count(hl7:componentOf/hl7:encompassingEncounter/hl7:code)=0) and (not($code_encomp=IMP) or not($code_encomp=AMB) or not($code_encomp=EMER))"
			>W003| L'attributo code dell'elemento componentOf/encompassingEncounter/code PUO' assumere uno dei seguenti valori :IMP|AMB|EMER ></report-->
			<assert test = "count(hl7:componentOf/hl7:encompassingEncounter/hl7:responsibleParty/hl7:assignedEntity/hl7:assignedPerson)=0 or count (hl7:componentOf/hl7:encompassingEncounter/hl7:responsibleParty/hl7:assignedEntity/hl7:assignedPerson/hl7:name)=1 "
			>ERRORE-42| deve essere presente l'elemento ClinicalDocument/componentOf/encompassingEncounter/responsibleParty/assignedentity/assignedPerson/name </assert>
			<assert test = "count(hl7:componentOf/hl7:encompassingEncounter/hl7:responsibleParty/hl7:assignedEntity/hl7:assignedPerson)=0 or (count($path_name/hl7:given)=1 and count($path_name/hl7:family)=1)"
			>ERRORE-43| L'elemento ClinicalDocument/componentOf/encompassingEncounter/responsibleParty/assignedentity/assignedPerson/name deve contenere gli elementi given e family </assert>
			<assert test = "count(hl7:componentOf/hl7:encompassingEncounter/hl7:location/hl7:healthCareFacility/hl7:serviceProviderOrganization)=0 or count (hl7:componentOf/hl7:encompassingEncounter/hl7:location/hl7:healthCareFacility/hl7:serviceProviderOrganization/hl7:id)=1"
			>ERRORE-44| L'elemento ClinicalDocument/componentOf/encompassingEncounter/location/healthcareFacility/serviceProviderOrganization deve contenere l'elemento 'id' </assert>
		
		</rule>
		
		<!-- Controllo author-->
		<rule context="hl7:ClinicalDocument/hl7:author">
			<!-- Controllo author/assignedAuthor/id/@root -->
			<assert test="count(hl7:assignedAuthor/hl7:id[@root='2.16.840.1.113883.2.9.4.3.2'])= 1"
			>ERRORE-19| L'elemento <name/>/assignedAuthor DEVE contenere almeno un elemento 'id' con il relativo attributo @root valorizzato con '2.16.840.1.113883.2.9.4.3.2'</assert>
			
			<!-- controllo author/assignedAuthor/telecom -->
			<assert test="count(hl7:assignedAuthor/hl7:telecom)>=1"
			>ERRORE-20| L'elemento <name/>/assignedAuthor DEVE deve contenere almeno un elemento 'telecom'</assert>
			
			<!--Controllo author/assignedAuthor/assignedPerson/name-->
			<let name="name_author" value="hl7:assignedAuthor/hl7:assignedPerson"/>
			
			<assert test="count($name_author/hl7:name)=1"
			>ERRORE-21| L'elemento <name/>/assignedAuthor/assignedPerson DEVE avere l'elemento 'name' </assert>
			<assert test="count($name_author/hl7:name)=0 or (count($name_author/hl7:name/hl7:given)=1 and count($name_author/hl7:name/hl7:family)=1)"
			>ERRORE-22| L'elemento <name/>/assignedAuthor/assignedPerson/name DEVE avere gli elementi 'given' e 'family'</assert>
		</rule>
		
		<!-- Controllo participant-->
		<rule context="hl7:ClinicalDocument/hl7:participant">
			<assert test="count(hl7:associatedEntity/hl7:id)>=1"
			>ERRORE-34| L'elemento <name/>/associatedEntity deve contenere l'elemento 'id'.</assert>
			<let name="num_addr_pcp" value="count(hl7:associatedEntity/hl7:addr)"/>
            <let name="addr_pcp" value="hl7:associatedEntity/hl7:addr"/>
            <assert test="$num_addr_pcp=0 or (count($addr_pcp/hl7:country)=$num_addr_pcp and
                          count($addr_pcp/hl7:city)=$num_addr_pcp and
                          count($addr_pcp/hl7:streetAddressLine)=$num_addr_pcp)"
            >ERRORE-35| L'elemento <name/>/associatedEntity/addr DEVE riportare i sotto-elementi 'country', 'city' e 'streetAddressLine' </assert>
			<assert test="count(hl7:associatedEntity/hl7:associatedPerson)=0 or 
			(count(hl7:associatedEntity/hl7:associatedPerson/hl7:name)=1)"
			>ERRORE-36| L'elemento <name/>/associatedEntity/associatedPerson deve contenere l'elemento 'name'</assert>
			
			<assert test="count(hl7:associatedEntity/hl7:associatedPerson)=0 or 
			(count(hl7:associatedEntity/hl7:associatedPerson/hl7:name/hl7:family)=1 and count(hl7:associatedEntity/hl7:associatedPerson/hl7:name/hl7:given)=1)"
			>ERRORE-37| L'elemento <name/>/associatedEntity/associatedPerson/name deve contenere gli elementi 'given' e 'family'</assert>
		</rule>
		
		<!-- Controllo inFulfillmentOf-->
		<rule context="hl7:ClinicalDocument/hl7:inFulfillmentOf">
			<let name="prioriry" value="hl7:order/hl7:priorityCode/@code"/>
			<assert test ="count(hl7:order/hl7:priorityCode)=0 or 
			count(hl7:order/hl7:priorityCode[@codeSystem='2.16.840.1.113883.5.7'][@code='R' or @code='P' or @code='UR' or @code='EM'])=1"
            >ERRORE-39| <name/>/order/priorityCode DEVE avere l'attributo '@codeSystem='2.16.840.1.113883.5.7' e @code valorizzato con uno dei seguenti valori: 'R'|'P'|'UR'|'EM' </assert>
		</rule>
		
	
	<!--________________________________ CONTROLLI GENERICI _____________________________________________________________-->
	
		<!--Controllo use Telecom-->
	    <rule context="//hl7:telecom">
			<assert test="(count(@use)=1)"
			>Errore-45| L’elemento 'telecom' DEVE contenere l'attributo @use.
			</assert>
		</rule>	
		
		<!-- Controllo formato: -->
		<!--campi Codice Fiscale: 16 cifre [A-Z0-9]{16} -->
		<rule context="//hl7:id[@root='2.16.840.1.113883.2.9.4.3.2']">
			<let name="CF" value="@extension"/>
			<assert test="matches(@extension, '[A-Z0-9]{16}')and string-length($CF)=16"
			>Errore-46| codice fiscale '<value-of select="$CF"/>' cittadino ed operatore: 16 cifre [A-Z0-9]{16}</assert>
		</rule>
		
		 <!--Controllo sugli attributi di observation-->
		<rule context="//hl7:observation">
			<let name="moodCd" value="@moodCode"/>
			<assert test="count(@classCode)=1"
			>Errore-47| L'attributo "@classCode" dell'elemento "observation" deve essere presente </assert>
			<assert test="$moodCd='EVN'"
			>Errore-48| L'attributo "@moodCode" dell'elemento "observation" deve essere valorizzato con "EVN" </assert>
        </rule>
		
		<!--Controllo sugli attributi di act-->
		<rule context="//hl7:act">
			<let name="mood_act" value="@moodCode"/>
			<let name="class_act" value="@classCode"/>
			<assert test="$mood_act='EVN'"
			>Errore-49| L'attributo "@moodCode" dell'elemento "Act" deve essere valorizzato con "EVN" </assert>
			<assert test="$class_act='ACT'"
			>Errore-50| L'attributo "@classCode" dell'elemento "Act" deve essere valorizzato con "ACT" </assert>
		</rule>
		
		<!--Verifica che i codici relativi al CodeSystem "UCUM" utilizzati siano corretti-->
		<!--rule context="//*[@unit]">
			<let name="val_UCUM" value="@unit"/>
			<assert test="doc('DIZ/XML_FSE_v1/2.16.840.1.113883.4.642.3.912.xml')//el[@code=$val_UCUM]"
			>ERRORE-7_DIZ| Codice UCUM <value-of select="$val_UCUM"/> errato
			</assert>
		</rule-->
		
	<!--________________________________ BODY _____________________________________________________________-->	
	
	    <!--Controllo sulle Section obbligatorie-->
		<rule context="hl7:ClinicalDocument/hl7:component/hl7:structuredBody">
		
			<!--Esame eseguito-->
			<assert test="count(hl7:component/hl7:section/hl7:code[@code='55111-9'][@codeSystem='2.16.840.1.113883.6.1'])=1"
			>ERRORE-b1| Sezione Esame Eseguito: la sezione DEVE essere presente.</assert>
			<assert test="count(hl7:component/hl7:section[hl7:code[@code='55111-9']]/hl7:text)=1"
			>ERRORE-b2| Sezione Esame Eseguito: La sezione deve contenere l'elemento 'text'.</assert>
			<assert test="count(hl7:component/hl7:section[hl7:code[@code='55111-9']]/hl7:entry)>=1"
			>ERRORE-b3| Sezione Esame Eseguito: La sezione deve contenere un elemento 'entry'.</assert>
						
			<!--Referto-->
			<assert test="count(hl7:component/hl7:section/hl7:code[@code='18782-3'][@codeSystem='2.16.840.1.113883.6.1'])=1"
			>ERRORE-b4| Sezione Referto: DEVE essere presente la sezione "Referto".</assert>
			<assert test="count(hl7:component/hl7:section[hl7:code[@code='18782-3']]/hl7:text)=1"
			>ERRORE-b5| Sezione Referto: La sezione deve contenere l'elemento 'text'.</assert>
		</rule>	
		
		<!--Controllo sui codici delle Section-->
		<rule context="hl7:ClinicalDocument/hl7:component/hl7:structuredBody/hl7:component/hl7:section">
			<let name="codice" value="hl7:code/@code"/>
			<assert test="count(hl7:code[@code='121181'])=1 or count(hl7:code[@code='18785-6'])=1 or count(hl7:code[@code='11329-0'])=1 
			or count(hl7:code[@code='55114-3'])=1 or count(hl7:code[@code='55111-9'])=1 or count(hl7:code[@code='18782-3'])=1 
			or count(hl7:code[@code='55110-1'])=1 or count(hl7:code[@code='55107-7'])=1 or count(hl7:code[@code='55109-3'])=1 or count(hl7:code[@code='18783-1'])=1"
			>ERRORE-b6| Il codice '<value-of select="$codice"/>' non è corretto. La sezione deve essere valorizzata con uno dei seguenti codici:
			121181   Sezione DICOM Object Catalog
			18785-6  Sezione Quesito Diagnostico
			11329-0	 Sezione Storia Clinica
			55114-3	 Sezione Precedenti Esami Eseguiti
			55111-9	 Sezione Esame Eseguito
			18782-3	 Sezione Referto
			55110-1	 Sezione Conclusioni
			55107-7	 Sezione Informazioni Aggiuntive
			55109-3	 Sezione Complicanze
			18783-1  Sezione Suggerimenti per il medico prescrittore
			</assert>
		</rule>
		
		<!--Controllo sulle Section opzionali-->
		<rule context="hl7:ClinicalDocument/hl7:component/hl7:structuredBody/hl7:component">
			<!--DICOM Object Catalog-->
			<assert test="count(hl7:section[hl7:code[@code='121181']])=0 or
			count(hl7:section[hl7:code[@code='121181']]/hl7:entry/hl7:act)=1"
			>ERRORE-b7| Sezione Dicom Object Catalog: La sezione deve avere l'elemento 'entry' di tipo 'act'.</assert>
			
			<!--Quesito Diagnostico-->
			<assert test="count(hl7:section[hl7:code[@code='18785-6']])=0 or count(hl7:section[hl7:code[@code='18785-6']]/hl7:text)=1"
			>ERRORE-b8| Sezione Quesito Diagnostico: La sezione deve contenere l'elemento 'text'.</assert>
			<assert test="count(hl7:section[hl7:code[@code='18785-6']]/hl7:entry)=0 or count(hl7:section[hl7:code[@code='18785-6']]/hl7:entry/hl7:observation)=1"
			>ERRORE-b9| Sezione Quesito Diagnostico: La 'entry' della sezione deve contenere l'elemento 'observation'.</assert>
			<assert test="count(hl7:section[hl7:code[@code='18785-6']]/hl7:entry)=0 or 
			count(hl7:section[hl7:code[@code='18785-6']]/hl7:entry/hl7:observation/hl7:code[@code='29308-4'][@codeSystem='2.16.840.1.113883.6.1'])=1"
			>ERRORE-b10| Sezione Quesito Diagnostico: L'elemento entry/observation/code deve avere l'attributo @code='29308-4' secondo il @codeSystem='2.16.840.1.113883.6.1'.</assert>
			<assert test="count(hl7:section[hl7:code[@code='18785-6']]/hl7:entry)=0 or 
			count(hl7:section[hl7:code[@code='18785-6']]/hl7:entry/hl7:observation/hl7:value[@codeSystem='2.16.840.1.113883.6.103'])=1"
			>ERRORE-b11| Sezione Quesito Diagnostico: L'elemento entry/observation/value deve essere presente e deve essere valorizzato secondo il sistema di codifica  ICD-9-CM (@codeSystem='2.16.840.1.113883.6.103')</assert>
			
			<!--Storia Clinica-->
			<assert test="count(hl7:section[hl7:code[@code='11329-0']])=0 or count(hl7:section[hl7:code[@code='11329-0']]/hl7:text)=1"
			>ERRORE-b12| Sezione Storia Clinica: La sezione deve contenere l'elemento 'text'.</assert>
			
			<!--Precedenti Esami eseguiti-->
			<assert test="count(hl7:section[hl7:code[@code='55114-3']])=0 or count(hl7:section[hl7:code[@code='55114-3']]/hl7:text)=1"
			>ERRORE-b13| Sezione Precedenti Esami Eseguiti: La section deve contenere l'elemento 'text'.</assert>			
			
			<!--Conclusioni-->
			<assert test="count(hl7:section[hl7:code[@code='55110-1']])=0 or count(hl7:section[hl7:code[@code='55110-1']]/hl7:text)=1"
			>ERRORE-b14| Sezione Conclusioni: La section deve contenere l'elemento "text"</assert>


			<!--Informazioni aggiuntive-->
			<assert test="count(hl7:section[hl7:code[@code='55107-7']])=0 or count(hl7:section[hl7:code[@code='55107-7']]/hl7:text)=1"
			>ERRORE b15| Sezione Informazioni Aggiuntive: La section deve contenere l'elemento "text"</assert>
			
			
			<!--Complicanze-->
			<assert test="count(hl7:section[hl7:code[@code='55109-3']])=0 or count(hl7:section[hl7:code[@code='55109-3']]/hl7:text)=1"
			>ERRORE-b16| Sezione Complicanze: La section deve contenere l'elemento "text".</assert>
			<assert test="count(hl7:section[hl7:code[@code='55109-3']]/hl7:entry)=0 or count(hl7:section[hl7:code[@code='55109-3']]/hl7:entry/hl7:observation)=1"
			>ERRORE-b17|Sezione Complicanze: La section/entry deve contenere l'elemento "observation"</assert>

			<!--Suggerimenti per il medico prescrittore-->
			<assert test="count(hl7:section[hl7:code[@code='18783-1']])=0 or count(hl7:section[hl7:code[@code='18783-1']]/hl7:text)=1"
			>ERRORE-b18| Sezione Suggerimenti per il medico prescrittore: La section deve contenere l'elemento 'text'.</assert>
		</rule>
		
			<!--Storia Clinica: controllo delle entry-->
			<rule context="hl7:ClinicalDocument/hl7:component/hl7:structuredBody/hl7:component/hl7:section[hl7:code[@code='11329-0']]/hl7:entry">
				<!--controllo sui sotto elementi di etry-->
				<assert test="count(hl7:observation)=1 or count(hl7:organizer)=1"
				>ERRORE-b19| Sezione Storia Clinica: L'elemento 'entry' deve avere uno dei seguenti sotto elementi:
				- 'observation': per l'Anamnesi patologica e fisiologica;
				- 'organizer': per l'Anamnesi familiare.</assert>
				
				<!--Storia Clinica: Dettaglio Anamnesi Patologica e Fisiologica (observation)-->
				<assert test="count(hl7:observation)=0 or 
				count(hl7:observation/hl7:code[@code='75326-9'][@codeSystem='2.16.840.1.113883.6.1'])=1"
				>ERRORE-b20| Sezione Storia Clinica: L'elemento entry/observation/code deve avere gli attributi @code='75326-9' e @codeSystem='2.16.840.1.113883.6.1'.</assert>
				<assert test="count(hl7:observation)=0 or 
				count(hl7:observation/hl7:statusCode[@code='completed'])=1"
				>ERRORE-b21| Sezione Storia Clinica: L'elemento entry/observation/statusCode deve avere l'attributo @code='completed'.</assert>
				<assert test="count(hl7:observation)=0 or
				count(hl7:observation/hl7:effectiveTime/hl7:low)=1"
				>ERRORE-b22| Sezione Storia Clinica: L'elemento entry/observation/effectiveTime deve essere presente e deve avere l'elemento 'low' valorizzato.</assert>
				<assert test="count(hl7:observation)=0 or
				count(hl7:observation/hl7:value[@xsi:type='CD'])=1"
				>ERRORE-b23| Sezione Storia Clinica: L'elemento entry/observation/value deve avere l'attributo @xsi:type="CD".</assert>
				<assert test="count(hl7:observation)=0 or 
				(count(hl7:observation/hl7:value/@code)=0 and count(hl7:observation/hl7:value/hl7:originalText/hl7:reference)=1) or
				count(hl7:observation/hl7:value/@code)=1"
				>ERRORE-b24| Sezione Storia Clinica: Nel caso di 'value' non codificato (in entry/observation), deve essere valorizzato l'elemento 'originalText/reference'.</assert>
				
				<!--Storia Clinica: Dettaglio Anamnesi Familiare (organizer)-->
				<assert test="count(hl7:organizer)=0 or count(hl7:organizer[@classCode='CLUSTER'])=1"
				>ERRORE-b25| Sezione Storia Clinica: L'elemento entry/organizer deve avere l'attributo @classCode valorizzato come "CLUSTER".</assert>
				<assert test="count(hl7:organizer)=0 or 
				count(hl7:organizer/hl7:subject/hl7:relatedSubject/hl7:code)=1"
				>ERRORE-b26| Sezione Storia Clinica: La entry/organizer deve avere un elemento subject/relatedSubject il quale deve contenere l'elemento 'code'. </assert>
				<assert test="count(hl7:organizer)=0 or 
				count(hl7:organizer/hl7:component/hl7:observation)>=1"
				>ERRORE-b27| Sezione Storia Clinica: L'elemento entry/organizer deve contenere almeno un elemento 'component' di tipo 'observation'.</assert>				
			</rule>
		
			<!--Storia Clinica: Cronicità e Stato Clinico della patologia (entry/observation/entryRelationship/observation)-->
			<rule context="hl7:ClinicalDocument/hl7:component/hl7:structuredBody/hl7:component/hl7:section[hl7:code[@code='11329-0']]/hl7:entry/hl7:observation/hl7:entryRelationship">
				<assert test="(count(hl7:observation/hl7:code[@code='89261-2'][@codeSystem='2.16.840.1.113883.6.1'])=1 or
				count(hl7:observation/hl7:code[@code='33999-4'][@codeSystem='2.16.840.1.113883.6.1'])=1)"
				>ERRORE-b28| Sezione Storia Clinica: L'elemento entry/observation/entryRelationship/observation/code deve avere l'attributo @code valorizzato con:
				"89261-2" per "Dettaglio Cronicità patologia"
				"33999-4" per "Dettaglio Stato patologia"
				</assert>
				<assert test="count(hl7:observation[hl7:code[@code='89261-2']]/hl7:value)=0 or 
				(count(hl7:observation[hl7:code[@code='89261-2']]/hl7:value[@codeSystem='2.16.840.1.113883.6.1'])=1 or 
				count(hl7:observation[hl7:code[@code='89261-2']]/hl7:value[@codeSystem='2.16.840.1.113883.2.9.77.22.11.10'])=1)"
				>ERRORE-b29| Sezione Storia Clinica: L'elemento 'value' relativo alla Cronicità deve essere valorizzato secondo il Value set "CronicitàProblema".</assert>
				
				<assert test="count(hl7:observation[hl7:code[@code='89261-2']]/hl7:value)=0 or 
				(count(hl7:observation[hl7:code[@code='89261-2']]/hl7:value[@code='LA28752-6'])=1 or
				count(hl7:observation[hl7:code[@code='89261-2']]/hl7:value[@code='LA18821-1'])=1)"
				>ERRORE-b29a| Sezione Storia Clinica: l'attributo @code di entry/observation/entryRelationship/observation/value relativo alla Cronicità deve essere valorizzato con:
				- "LA28752-6" se "cronico";
				- "LA18821-1" se "acuto".
				</assert>
				
				<assert test="count(hl7:observation[hl7:code[@code='33999-4']]/hl7:value)=0 or 
				(count(hl7:observation[hl7:code[@code='33999-4']]/hl7:value[@codeSystem='2.16.840.1.113883.6.1'])=1 or 
				count(hl7:observation[hl7:code[@code='33999-4']]/hl7:value[@codeSystem='2.16.840.1.113883.2.9.77.22.11.7'])=1)"
				>ERRORE-b30| Sezione Storia Clinica: L'elemento 'value' relativo allo Stato Clinico della patoligia deve essere valorizzato secondo il Value set "StatoClinicoProblema"</assert>
				
				<assert test="count(hl7:observation[hl7:code[@code='33999-4']]/hl7:value)=0 or 
				(count(hl7:observation[hl7:code[@code='33999-4']]/hl7:value[@code='LA16666-2'])=1 or
				count(hl7:observation[hl7:code[@code='33999-4']]/hl7:value[@code='LA18632-2'])=1)"
				>ERRORE-b30a| Sezione Storia Clinica: l'attributo @code di entry/observation/entryRelationship/observation/value relativo allo Stato Clinico della patologia deve essere valorizzato con:
				- "LA16666-2" se "active";
				- "LA18632-2" se "inactive".
				</assert>
				
				
				
			</rule>
			
			<!--Storia Clinica: Dettaglio Anamnesi del familiare in oggetto (entry/organizer/component/observation)-->
			<rule context="hl7:ClinicalDocument/hl7:component/hl7:structuredBody/hl7:component/hl7:section[hl7:code[@code='11329-0']]/hl7:entry/hl7:organizer/hl7:component">
				<assert test="count(hl7:observation/hl7:statusCode[@code='completed'])=1"
				>ERRORE-b31| Sezione Storia Clinica: L'elemento entry/organizer/component/observation/statusCode deve contenere l'attributo @code valorizzato con 'completed'.</assert>
				<assert test="count(hl7:observation/hl7:effectiveTime)=1"
				>ERRORE-b32| Sezione Storia Clinica: L'elemento entry/organizer/component/observation deve contenere l'elemento 'effectiveTime'.</assert>
				<assert test="count(hl7:observation/hl7:value)=1"
				>ERRORE-b33| Sezione Storia Clinica: L'elemento entry/organizer/component/observation deve contenere l'elemento 'value'.</assert>
				<assert test="(count(hl7:observation/hl7:entryRelationship)>=0 and count(hl7:observation/hl7:entryRelationship)&lt;=2) and
				(count(hl7:observation/hl7:entryRelationship/hl7:observation)>=0 and count(hl7:observation/hl7:entryRelationship/hl7:observation)&lt;=2)"
				>ERRORE-b34| Sezione Storia Clinica: L'elemento entry/organizer/component/observation può avere al più 2 elementi 'entryRelationship' di tipo observation:
				- Età di insorgenza 
				- Età di decesso </assert>
			</rule>
			
			<!--Storia Clinica: Età di insorgenza e/o età di decesso (entry/organizer/component/observation/entryRelationship/observation)-->
			<rule context="hl7:ClinicalDocument/hl7:component/hl7:structuredBody/hl7:component/hl7:section[hl7:code[@code='11329-0']]/hl7:entry/hl7:organizer/hl7:component/hl7:observation/hl7:entryRelationship">
				<assert test="(count(hl7:observation/hl7:code[@code='35267-4'])=1 or count(hl7:observation/hl7:code[@code='39016-1'])=1)"
				>ERRORE-b35| Sezione Storia Clinica: La 'entryRelationship' deve avere l'elemento observation/code valorizzato con uno dei seguenti valori:
				"35267-4" per "Età di insorgenza" 
				"39016-1" per "Età di decesso".</assert>
				<assert test="count(hl7:observation/hl7:value)=1"
				>ERRORE-b36| Sezione Storia Clinica: La entryRelationship/observation relativa all'Età di insorgenza o Età di decesso deve avere l'elemento 'value' valorizzato.</assert>
			</rule>
		
		<!--Sezione Allergie-->
		<rule context="hl7:ClinicalDocument/hl7:component/hl7:structuredBody/hl7:component/hl7:section[hl7:code[@code='11329-0']]/hl7:component">
			<assert test="count(hl7:section/hl7:code[@code='48765-2'][@codeSystem='2.16.840.1.113883.6.1'])=1"
			>ERRORE-b37| Sotto sezione Allergie: Il code della section deve essere valorizzato con il @code='48765-2' e il @codeSystem='2.16.840.1.113883.6.1'.</assert>
			<assert test="count(hl7:section/hl7:text)=1"
			>ERRORE-b38| Sotto sezione Allergie: La section deve avere un elemento 'text'.</assert>
			
			<!--Criticità dell'allergia o dell'intolleranza-->
			<assert test="count(hl7:section[hl7:code[@code='48765-2']]/hl7:entry/hl7:act/hl7:entryRelationship/hl7:observation/hl7:entryRelationship[@typeCode='SUBJ'][hl7:observation])=0 or 
			count(hl7:section[hl7:code[@code='48765-2']]/hl7:entry/hl7:act/hl7:entryRelationship/hl7:observation/hl7:entryRelationship[@typeCode='SUBJ']/hl7:observation)=1"
			>ERRORE-b39| Sotto sezione Allergie: L'entryRelationship/observation relativa alla "Criticità dell'allergia"  può essere presente solo una volta.</assert>			
			<assert test="count(hl7:section[hl7:code[@code='48765-2']]/hl7:entry/hl7:act/hl7:entryRelationship/hl7:observation/hl7:entryRelationship[@typeCode='SUBJ'][hl7:observation])=0 or
			count(hl7:section[hl7:code[@code='48765-2']]/hl7:entry/hl7:act/hl7:entryRelationship/hl7:observation/hl7:entryRelationship[@typeCode='SUBJ']/hl7:observation/hl7:code[@codeSystem='2.16.840.1.113883.5.4'])=1"
			>ERRORE-b40| Sotto sezione Allergie: L'entryRelationship/observation (Criticità dell'allergia) deve avere l'attributo @codesystem='2.16.840.1.113883.5.4'</assert>
			<assert test="count(hl7:section[hl7:code[@code='48765-2']]/hl7:entry/hl7:act/hl7:entryRelationship/hl7:observation/hl7:entryRelationship[@typeCode='SUBJ']/hl7:observation)=0 or 
			count(hl7:section[hl7:code[@code='48765-2']]/hl7:entry/hl7:act/hl7:entryRelationship/hl7:observation/hl7:entryRelationship[@typeCode='SUBJ']/hl7:observation/hl7:value[@codeSystem='2.16.840.1.113883.5.1063'])=1"
			>ERRORE-b41| Sotto sezione Allergie: L'entryRelationship/observation/value (Criticità dell'allergia) deve essere valorizzato secondo il value set "CriticalityObservation" @codesystem='2.16.840.1.113883.5.1063'</assert>
				
			<!--Stato dell'allergia o dell'intolleranza-->
			<assert test="count(hl7:section[hl7:code[@code='48765-2']]/hl7:entry/hl7:act/hl7:entryRelationship/hl7:observation/hl7:entryRelationship[@typeCode='REFR'])=0 or 
			count(hl7:section[hl7:code[@code='48765-2']]/hl7:entry/hl7:act/hl7:entryRelationship/hl7:observation/hl7:entryRelationship[@typeCode='REFR']/hl7:observation)=1"
			>ERRORE-b42| Sotto sezione Allergie: L'entryRelationship/observation relativa allo "Stato"  può essere presente solo una volta</assert>
			<assert test="count(hl7:section[hl7:code[@code='48765-2']]/hl7:entry/hl7:act/hl7:entryRelationship/hl7:observation/hl7:entryRelationship[@typeCode='REFR'])=0 or 
			count(hl7:section[hl7:code[@code='48765-2']]/hl7:entry/hl7:act/hl7:entryRelationship/hl7:observation/hl7:entryRelationship[@typeCode='REFR']/hl7:observation/hl7:code[@code='33999-4'][@codeSystem='2.16.840.1.113883.6.1'])=1"
			>ERRORE-b43| Sotto sezione Allergie: L'elemento 'code' all'interno di entryRelationship/observation (Stato dell'allergia) deve avere l'attributo @code='33999-4' e il @codesystem='2.16.840.1.113883.6.1'</assert>
			<assert test="count(hl7:section[hl7:code[@code='48765-2']]/hl7:entry/hl7:act/hl7:entryRelationship/hl7:observation/hl7:entryRelationship[@typeCode='REFR'])=0 or 
			(count(hl7:section[hl7:code[@code='48765-2']]/hl7:entry/hl7:act/hl7:entryRelationship/hl7:observation/hl7:entryRelationship[@typeCode='REFR']/hl7:observation/hl7:value[@codeSystem='2.16.840.1.113883.6.1'])=1 or			count(hl7:section[hl7:code[@code='48765-2']]/hl7:entry/hl7:act/hl7:entryRelationship/hl7:observation/hl7:entryRelationship[@typeCode='REFR']/hl7:observation/hl7:value[@codeSystem='2.16.840.1.113883.2.9.77.22.11.11'])=1)"
			>ERRORE-b44| Sotto sezione Allergie: L'elemento 'value' all'interno di entryRelationship/observation (Stato dell'allergia) deve essere valorizzato secondo il value set "StatoClinicoAllergia" @codesystem='2.16.840.1.113883.6.1' oppure '2.16.840.1.113883.2.9.77.22.11.11' </assert>
			
			<assert test="count(hl7:section[hl7:code[@code='48765-2']]/hl7:entry/hl7:act/hl7:entryRelationship/hl7:observation/hl7:entryRelationship[@typeCode='REFR']/hl7:observation/hl7:value)=0 or
			(count(hl7:section[hl7:code[@code='48765-2']]/hl7:entry/hl7:act/hl7:entryRelationship/hl7:observation/hl7:entryRelationship[@typeCode='REFR']/hl7:observation/hl7:value[@code='LA16666-2'])=1 or
			count(hl7:section[hl7:code[@code='48765-2']]/hl7:entry/hl7:act/hl7:entryRelationship/hl7:observation/hl7:entryRelationship[@typeCode='REFR']/hl7:observation/hl7:value[@code='LA18632-2'])=1)"
			>ERRORE-b44a| Sotto-sezione Allergie (stato dell'allergia): il @code di entry/act/entryRelationship/observation/entryRelationship/observation/value deve essere valorizzato con:
			- "LA16666-2" se "active";
			- "LA18632-2" se "inactive".
			</assert>
			
			<!--Commenti-->
			<assert test="count(hl7:section[hl7:code[@code='48765-2']]/hl7:entry/hl7:act/hl7:entryRelationship/hl7:observation/hl7:entryRelationship[@typeCode='SUBJ'][hl7:act])=0 or 
			count(hl7:section[hl7:code[@code='48765-2']]/hl7:entry/hl7:act/hl7:entryRelationship/hl7:observation/hl7:entryRelationship[@typeCode='SUBJ']/hl7:act)=1"
			>ERRORE-b45| Sotto sezione Allergie: L'entryRelationship/act relativo ai "Commenti" può essere presente una sola volta.</assert>
			<assert test="count(hl7:section[hl7:code[@code='48765-2']]/hl7:entry/hl7:act/hl7:entryRelationship/hl7:observation/hl7:entryRelationship[@typeCode='SUBJ']/hl7:act)=0 or 
			count(hl7:section[hl7:code[@code='48765-2']]/hl7:entry/hl7:act/hl7:entryRelationship/hl7:observation/hl7:entryRelationship[@typeCode='SUBJ']/hl7:act/hl7:code[@code='48767-8'][@codeSystem='2.16.840.1.113883.6.1'])=1"
			>ERRORE-b46| Sotto sezione Allergie: L'elemento 'code' all'interno di entryRelationship/act (Commenti) deve avere l'attributo @code='48767-8' e il @codeSystem='2.16.840.1.113883.6.1'.</assert>
		</rule>
		
		<!--Sottosezione Allergie: blocco strutturato (entry/act)-->
		<rule context="hl7:ClinicalDocument/hl7:component/hl7:structuredBody/hl7:component/hl7:section[hl7:code[@code='11329-0']]/hl7:component/hl7:section[hl7:code[@code='48765-2']]/hl7:entry">
			<assert test="count(hl7:act)=1"
			>ERRORE-b47| Sotto sezione Allergie: La 'entry' della section deve essere di tipo 'act'.</assert>
			<let name="status" value="hl7:act/hl7:statusCode/@code"/>
			<assert test="$status='active' or $status='completed' or $status='aborted' or $status='suspended'"
			>ERRORE-b48| Sotto sezione Allergie: L'elemento 'statusCode' deve essere valorizzato secondo il value set ActStatus: 'active'|'completed'|'aborted'|'suspended'.</assert>
			<assert test="count(hl7:act/hl7:effectiveTime/hl7:low)=1"
			>ERRORE-b49| Sotto sezione Allergie: L'elemento 'effectiveTime' deve essere presente e deve avere l'elemento 'low' valorizzato.</assert>
			<assert test="($status='completed' and count(hl7:act/hl7:effectiveTime/hl7:high)=1) or
					($status='aborted' and count(hl7:act/hl7:effectiveTime/hl7:high)=1) or 
					($status='suspended' and count(hl7:act/hl7:effectiveTime/hl7:high)=0) or 
					($status='active' and count(hl7:act/hl7:effectiveTime/hl7:high)=0)"
			>ERRORE-b50| Sotto sezione Allergie: L'elemento 'effectiveTime/high' deve essere presente nel caso in cui lo 'statusCode' è 'completed'|'aborted'.</assert>
			
			<!--Dettaglio Allergie (entryRelationship/observation)-->
			<assert test="count(hl7:act/hl7:entryRelationship/hl7:observation/hl7:code[@code='52473-6'][@codeSystem='2.16.840.1.113883.6.1'])=1"
			>ERRORE-b51| Sotto sezione Allergie: L'entry/act deve includere uno ed un solo elemento entryRelationship/observation con il 'code' uguale a '52473-6'.</assert>	
			<assert test="count(hl7:act/hl7:entryRelationship/hl7:observation/hl7:statusCode[@code='completed'])=1"
			>ERRORE-b52| Sotto sezione Allergie: L'elemento entry/act/entryRelationship/observation/statusCode/@code deve assumere il valore costante 'completed'.</assert>
			<assert test="count(hl7:act/hl7:entryRelationship/hl7:observation/hl7:effectiveTime/hl7:low)=1"
			>ERRORE-b53| Sotto sezione Allergie: I'elemento entry/act/entryRelationship/observation/effectiveTime deve avere valorizzato l'elemento 'low'.</assert>
			<assert test="count(hl7:act/hl7:entryRelationship/hl7:observation/hl7:value)=0 or 
			count(hl7:act/hl7:entryRelationship/hl7:observation/hl7:value[@xsi:type='CD'])=1"
			>ERRORE-b54| Sotto sezione Allergie: L'elemento entry/act/entryRelationship/observation/value deve avere l'attributo @xsi:type valorizzato come 'CD'.</assert>
			<assert test="count(hl7:act/hl7:entryRelationship/hl7:observation/hl7:value)=0 or 
			(count(hl7:act/hl7:entryRelationship/hl7:observation/hl7:value/@code)=0 or 
			count(hl7:act/hl7:entryRelationship/hl7:observation/hl7:value[@codeSystem='2.16.840.1.113883.5.4'])=1)"
			>ERRORE-b55| Sotto sezione Allergie: L'elemento entry/act/entryRelationship/observation/value codificato, deve avere l'attributo @code valorizzato secondo il value set "ObservationIntoleranceType" (@codeSystem='2.16.840.1.113883.5.4').</assert>
			<assert test="count(hl7:act/hl7:entryRelationship/hl7:observation/hl7:value)=0 or 
			(count(hl7:act/hl7:entryRelationship/hl7:observation/hl7:value/@code)=1 or 
			count(hl7:act/hl7:entryRelationship/hl7:observation/hl7:value/hl7:originalText/hl7:reference)=1)"
			>ERRORE-b56| Sotto sezione Allergie: L'elemento entry/act/entryRelationship/observation/value non codificato, deve avere l'elemento originalText/reference valorizzato.</assert>
		</rule>
		
		<!--Descrizione Agente-->
		<rule context="hl7:ClinicalDocument/hl7:component/hl7:structuredBody/hl7:component/hl7:section[hl7:code[@code='11329-0']]/hl7:component/hl7:section[hl7:code[@code='48765-2']]/hl7:entry/hl7:act/hl7:entryRelationship">
			<assert test="count(hl7:observation/hl7:participant)=1"
			>ERRORE-b57| Sotto sezione Allergie: L'elemento entryRelationship/observation (Descrizione Agente) deve avere almeno un elemento 'participant' che dettaglia l'agente scatenante.</assert>
			<assert test="count(hl7:observation/hl7:participant/hl7:participantRole/hl7:playingEntity/hl7:code[@codeSystem='2.16.840.1.113883.6.73'])=1 or
			count(hl7:observation/hl7:participant/hl7:participantRole/hl7:playingEntity/hl7:code[@codeSystem='2.16.840.1.113883.2.9.6.1.5'])=1 or
			count(hl7:observation/hl7:participant/hl7:participantRole/hl7:playingEntity/hl7:code[@codeSystem='2.16.840.1.113883.2.9.77.22.11.2'])=1"
			>ERRORE-b58| Sotto sezione Allergie: L'elemento participant/participantRole/playingEntity deve avere l'attributo code/@codeSystem valorizzato come segue:
			- '2.16.840.1.113883.6.73' codifica "WHO ATC"
			- '2.16.840.1.113883.2.9.6.1.5' codifica "AIC"
			- '2.16.840.1.113883.2.9.77.22.11.2' value set "AllergenNoDrugs" (- per le allergie non a farmaci –)
			</assert>
		</rule>
		
		<!--Descrizione Reazione-->
		<rule context="hl7:ClinicalDocument/hl7:component/hl7:structuredBody/hl7:component/hl7:section[hl7:code[@code='11329-0']]/hl7:component/hl7:section[hl7:code[@code='48765-2']]/hl7:entry/hl7:act/hl7:entryRelationship/hl7:observation/hl7:entryRelationship[@typeCode='MFST']">	
			<assert test="count(hl7:observation/hl7:code[@code='75321-0'][@codeSystem='2.16.840.1.113883.6.1'])=1"
			>ERRORE-b59| Sotto sezione Allergie: L'entryRelationship/observation (Descrizione Reazioni) deve avere un elemento 'code' con gli attributi @code='75321-0' e @codeSystem='2.16.840.1.113883.6.1'.</assert>
			<assert test="count(hl7:observation/hl7:effectiveTime/hl7:low)=1"
			>ERRORE-b60| Sotto sezione Allergie: L'entryRelationship/observation (Descrizione Reazioni) deve avere un 'effectiveTime'  con un elemento 'low' valorizzato.</assert>
			<assert test="count(hl7:observation/hl7:value)=0 or	count(hl7:observation/hl7:value[@xsi:type='CD'])=1"
			>ERRORE-b61| Sotto sezione Allergie: L'elemento 'value' di entryRelationship/observation (Descrizione Reazioni) deve avere l'attributo @xsi:type='CD'.</assert>
			<assert test="count(hl7:observation/hl7:value)=0 or
			(count(hl7:observation/hl7:value/@code)=0 and count(hl7:observation/hl7:value/hl7:originalText/hl7:reference)=1) or
			(count(hl7:observation/hl7:value/@code)=1 and (count(hl7:observation/hl7:value/hl7:originalText/hl7:reference)&lt;=1))"
			>ERRORE-b62| Sotto sezione Allergie: Nel caso di 'value' non codificato (in Descrizione Reazioni), questo deve avere l'elemento originalText/reference valorizzato.</assert>	
			<assert test="count(hl7:observation/hl7:value)=0 or count(hl7:observation/hl7:value/@code)=0 or
			(count(hl7:observation/hl7:value[@codeSystem='2.16.840.1.113883.2.9.77.22.11.4'])=1 or 
			count(hl7:observation/hl7:value[@codeSystem='2.16.840.1.113883.2.9.77.22.11.3'])=1 or 
			count(hl7:observation/hl7:value[@codeSystem='2.16.840.1.113883.6.103'])=1)"
			>ERRORE-b63| Sotto sezione Allergie: L'entryRelationship/observation/value (in Descrizione Reazioni) deve avere l'attributo @codeSystem valorizzato come segue:
			- "2.16.840.1.113883.2.9.77.22.11.4" per le reazioni da allergia 
			- "2.16.840.1.113883.2.9.77.22.11.3" per le reazioni da intolleranza 
			- "2.16.840.1.113883.6.103" per le reazioni riportate nel sistema ICD-9-CM
			</assert>
		</rule>
		
		<!--Precedenti Esami eseguiti: controllo delle entry-->
		<rule context="hl7:ClinicalDocument/hl7:component/hl7:structuredBody/hl7:component/hl7:section[hl7:code[@code='55114-3']]/hl7:entry">
			<assert test="count(hl7:observation)=1"
			>ERRORE-b64| Sezione Precedenti Esami Eseguiti: L'elemento 'entry' della sezione deve contenere un elemento di tipo 'observation'.</assert>
				<!--Dubbio sul controllo @codeSystem-->
			<!--assert test="count(hl7:observation/hl7:code[@codeSystem='2.16.840.1.113883.6.1'])=1 or 
			count(hl7:observation/hl7:code[@codeSystem='2.16.840.1.113883.6.103'])=1"
			>ERRORE-109| Sezione Precedenti Esami Eseguiti: l'entry/observation/code può essere valorizzato secodo i sistemi di codifica
			LOINC: @codeSystem='2.16.840.1.113883.6.1'
			ICD-9-CM: @codeSystem='2.16.840.1.113883.6.103' </assert-->
			
			<report test="not(count(hl7:observation/hl7:code[@codeSystem='2.16.840.1.113883.6.1'])=1) and 
			not(count(hl7:observation/hl7:code[@codeSystem='2.16.840.1.113883.6.103'])=1)"
			>W004 | Sezione Esami eseguiti durante il ricovero: l'entry/observation/code può essere valorizzato secondo i sistemi di codifica
			LOINC @codeSystem='2.16.840.1.113883.6.1'
			ICD-9-CM @codeSystem='2.16.840.1.113883.6.103'</report>
		</rule>
		
		<!--Esame Eseguito: controllo delle entry-->
		<rule context="hl7:ClinicalDocument/hl7:component/hl7:structuredBody/hl7:component/hl7:section[hl7:code[@code='55111-9']]/hl7:entry">
			
			<assert test="count(hl7:act)=1"
			>ERRORE-b65| Sezione Esame Eseguito: La 'entry' della sezione deve contenere un elemento di tipo 'act'.</assert>
			
			<!--assert test="(count(hl7:act/hl7:code[@codeSystem='2.16.840.1.113883.6.1'])=1 or 
			count(hl7:act/hl7:code[@codeSystem='2.16.840.1.113883.6.103'])=1)"
			>ERRORE-111| Sezione Esame Eseguito: L'elemento entry/act/code può essere valorizzato secondo i sistemi di codifica:
			- LOINC (@codeSystem: 2.16.840.1.113883.6.1)
			- ICD-9-CM (@codeSystem: 2.16.840.1.113883.6.103).</assert-->
			
			<report test="not(count(hl7:act/hl7:code[@codeSystem='2.16.840.1.113883.6.1'])=1) and 
			not(count(hl7:act/hl7:code[@codeSystem='2.16.840.1.113883.6.103'])=1)"
			>W005 | Sezione Esami eseguiti durante il ricovero: l'entry/act/code può essere valorizzato secondo i sistemi di codifica
			LOINC @codeSystem='2.16.840.1.113883.6.1'
			ICD-9-CM @codeSystem='2.16.840.1.113883.6.103'</report>
			
			<assert test="count(hl7:act/hl7:statusCode[@code='active'])=1"
			>ERRORE-b66| Sezione Esame Eseguito: L'elemento 'statusCode' all'interno di entry/act deve avere l'attributo @code valorizzato come "active".</assert>
			<assert test="count(hl7:act/hl7:effectiveTime)=1"
			>ERRORE-b67| Sezione Esame Eseguito: entry/act della sezione deve avere l'elemento 'effectiveTime'.</assert>
			
		</rule>
		
		
	</pattern>
</schema>
",
      "subType": "00"
    }
  },
  "version": "3.1",
  "template_id_root": "2.16.840.1.113883.2.9.10.1.7.1",
  "last_update_date": {
    "$date": "2023-01-16T22:59:24.563Z"
  },
  "deleted": false,
  "last_sync": {
    "$date": "2023-01-16T23:00:03.543Z"
  }
},{
  "_id": {
    "$oid": "63c5d6ced370ce753aa68179"
  },
  "name_schematron": "schematron_RSA_v7.5.sch",
  "content_schematron": {
    "$binary": {
      "base64": "<?xml version="1.0" encoding="UTF-8"?>
<!-- schematron versione:7.5-->
<schema xmlns="http://purl.oclc.org/dsdl/schematron" 
		xmlns:cda="urn:hl7-org:v3"
        xmlns:iso="http://purl.oclc.org/dsdl/schematron"
        xmlns:sch="http://www.ascc.net/xml/schematron"
        queryBinding="xslt2">
	<title>Schematron Referto di Specialistica Ambulatoriale </title>
	<ns prefix="hl7" uri="urn:hl7-org:v3"/>
	<ns prefix="xsi" uri="http://www.w3.org/2001/XMLSchema-instance"/>
	<pattern id="all">


<!--_______________________________________________________________HEADER _____________________________________________________________-->
	
		<!-- ClinicalDocument -->
		<rule context="hl7:ClinicalDocument">
	        <!--Controllo realmCode-->	
			<assert test="count(hl7:realmCode)>=1"
			>ERRORE-1| L'elemento <name/> DEVE avere almeno un elemento 'realmCode'</assert>
			<assert test="count(hl7:realmCode[@code='IT'])= 1"
			>ERRORE-2| L'elemento <name/>/realmCode' DEVE avere l'attributo @code valorizzato con 'IT'</assert>
			
			<!--Controllo templateId-->
			<let name="num_tid" value="count(hl7:templateId)"/>
			<assert test="$num_tid >= 1"
			>ERRORE-3| L'elemento <name/> DEVE avere almeno un elemento di tipo 'templateId'</assert>
			<assert test="count(hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.9.1'])= 1 and  count(hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.9.1']/@extension)= 1"
			>ERRORE-4| Almeno un elemento <name/>/templateId DEVE essere valorizzato attraverso l'attributo @root='2.16.840.1.113883.2.9.10.1.9.1' (id del template nazionale), associato all'attributo @extension che  indica la versione a cui il templateId fa riferimento</assert>

			<!--Controllo code-->	
			<assert test="count(hl7:code[@code='11488-4'][@codeSystem='2.16.840.1.113883.6.1']) = 1"
			>ERRORE-5| L'elemento <name/>/code DEVE essere valorizzato con l'attributo @code='11488-4' e il @codeSystem='2.16.840.1.113883.6.1'</assert>
	
			<report test="not(count(hl7:code[@codeSystemName='LOINC'])=1) or not(count(hl7:code[@displayName=' Nota di consulto'])=1 or
			count(hl7:code[@displayName='NOTA DI CONSULTO'])=1 or count(hl7:code[@displayName='Nota di Consulto'])=1 or count(hl7:code[@displayName='Nota di consulto'])=1 or count(hl7:code[@displayName='nota di consulto'])=1)"
			>W001| Si raccomanda di valorizzare gli attributi dell'elemento <name/>/code nel seguente modo: @codeSystemName ='LOINC' e @displayName ='Nota di consulto'--> </report>
			
			<!--Controllo confidentialityCode-->
			<assert test="(count(hl7:confidentialityCode[@code='N'][@codeSystem='2.16.840.1.113883.5.25'])= 1) or 
			(count(hl7:confidentialityCode[@code='V'][@codeSystem='2.16.840.1.113883.5.25'])= 1)"
			>ERRORE-6| L'elemento <name/>/confidentialityCode DEVE avere l'attributo @code valorizzato con 'N' o 'V', e il @codeSystem='2.16.840.1.113883.5.25'</assert>
			
			<!--Controllo languageCode-->	
			<assert test="count(hl7:languageCode)=1"
			>ERRORE-7| L'elemento <name/> DEVE contenere un solo elemento 'languageCode' </assert>
			
			<!--Controllo incrociato tra setId-versionNumber e relatedDocument-->
			<let name="versionNumber" value="hl7:versionNumber/@value"/>
			<assert test="(string(number($versionNumber)) = 'NaN') or
					($versionNumber= '1' and hl7:id/@root = hl7:setId/@root and hl7:id/@extension = hl7:setId/@extension) or
					($versionNumber!= '1' and hl7:id/@root = hl7:setId/@root and hl7:id/@extension != hl7:setId/@extension) or
					(hl7:id/@root != hl7:setId/@root)"
			>ERRORE-8| Se ClinicalDocument.id e ClinicalDocument.setId usano lo stesso dominio di identificazione (@root identico) allora l’attributo @extension del ClinicalDocument.id 
			deve essere diverso da quello del ClinicalDocument.setId a meno che ClinicalDocument.versionNumber non sia uguale ad 1; cioè i valori di setId ed id per un documento clinico possono coincidere solo per la prima versione di un documento</assert>
			<assert test="(string(number($versionNumber)) ='NaN') or
						  ($versionNumber=1) or 
						  (($versionNumber &gt;1) and count(hl7:relatedDocument)=1)"
			>ERRORE-9| Se l'attributo <name/>/versionNumber/@value è maggiore di 1, l'elemento <name/> DEVE contenere un elemento di tipo 'relatedDocument'</assert>
			
			<!--Controllo recordTarget-->
			<assert test="count(hl7:recordTarget)=1"
			>ERRORE-10| L'elemento <name/> DEVE contenere un solo elemento 'recordTarget' </assert>
			
			<!--Controllo recordTarget/patientRole/id-->
			<assert test="count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.4.3.2'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.4.3.7'])=1 or 
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.4.3.3'])=1 or 
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.4.3.18'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.4.3.17'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.4.3.15'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.2.10.4.1'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.2.20.4.1'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.2.30.4.1'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.2.41.4.1'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.2.42.4.1'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.2.50.4.1'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.2.60.4.1'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.2.70.4.1'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.2.80.4.1'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.2.90.4.1'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.2.100.4.1'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.2.110.4.1'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.2.120.4.1'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.2.130.4.1'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.2.140.4.1'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.2.150.4.1'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.2.160.4.1'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.2.170.4.1'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.2.180.4.1'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.2.190.4.1'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.2.200.4.1'])=1"
			>ERRORE-11a| L'elemento <name/>/recordTarget/patientRole/id  deve avere l'attributo @root valorizzato tramite una  delle seguenti identificatori Nazionanli:
			CF 2.16.840.1.113883.2.9.4.3.2
			TEAM 2.16.840.1.113883.2.9.4.3.7 o 2.16.840.1.113883.2.9.4.3.3
			ENI 2.16.840.1.113883.2.9.4.3.18
			STP 2.16.840.1.113883.2.9.4.3.17
			ANA 2.16.840.1.113883.2.9.4.3.15
			Oppure tramite gli identificatori regionali generati per rappresentare l'id del paziente.
			</assert>
			
			<!--Controllo recordTarget/patientRole/addr-->
			<let name="num_addr" value="count(hl7:recordTarget/hl7:patientRole/hl7:addr)"/>
			
			<assert test="$num_addr=0 or (count(hl7:recordTarget/hl7:patientRole/hl7:addr/hl7:country)=$num_addr and 
			count(hl7:recordTarget/hl7:patientRole/hl7:addr/hl7:city)=$num_addr and 
			count(hl7:recordTarget/hl7:patientRole/hl7:addr/hl7:streetAddressLine)=$num_addr)"
			>ERRORE-11| L'elemento <name/>/recordTarget/patientRole/addr DEVE riportare i sotto-elementi 'country', 'city' e 'streetAddressLine' </assert>
			
			<!--Controllo recordTarget/patientRole/patient/name-->
			<let name="patient" value="hl7:recordTarget/hl7:patientRole/hl7:patient"/>
			
			<assert test="count($patient)=1 "
			>ERRORE-12| L'elemento <name/>/recordTaget/patientRole DEVE contenere l'elemento patient</assert>
			<assert test="count($patient)=0 or count($patient/hl7:name)=1"
			>ERRORE-13| L'elemento <name/>/recordTaget/patientRole/patient DEVE contenere l'elemento 'name'</assert>
			<assert test="count($patient)=0 or (count($patient/hl7:name/hl7:given)=1 and count($patient/hl7:name/hl7:family)=1)"
			>ERRORE-14| L'elemento <name/>/recordTaget/patientRole/patient/name DEVE riportare gli elementi 'given' e 'family'</assert>
			
			<!--Controllo recordTarget/patientRole/patient/administrativeGenderCode-->
			<let name="genderOID" value="hl7:recordTarget/hl7:patientRole/hl7:patient/hl7:administrativeGenderCode/@codeSystem"/>
			
			<assert test="count(hl7:recordTarget/hl7:patientRole/hl7:patient/hl7:administrativeGenderCode)=1"
			>ERRORE-15| L'elemento <name/>/recordTarget/patientRole/patient DEVE contenere l'elemento administrativeGenderCode </assert>
			<assert test="$genderOID='2.16.840.1.113883.5.1'"
			>ERRORE-16| L'OID assegnato all'attributo <name/>/recordTarget/patientRole/patient/administrativeGenderCode/@codeSystem='<value-of select="$genderOID"/>' non è corretto. L'attributo DEVE essere valorizzato con '2.16.840.1.113883.5.1' </assert>
			
			<!--Controllo recordTarget/patientRole/patient/birthTime-->
			<assert test="count($patient)=0 or
			(count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.4.3.2' or 
			@root='2.16.840.1.113883.2.9.4.3.7' or @root='2.16.840.1.113883.2.9.4.3.3' or 
			@root='2.16.840.1.113883.2.9.4.3.17'])=0) or 
			count(hl7:recordTarget/hl7:patientRole/hl7:patient/hl7:birthTime)=1"
			>ERRORE-17| L'elemento <name/>/recordTaget/patientRole/patient DEVE riportare un elemento 'birthTime'</assert>
			
			<!--Controllo recordTarget/patientRole/patient/birthplace/place/addr-->
			<assert test="count(hl7:recordTarget/hl7:patientRole/hl7:patient/hl7:birthplace)=0 or 
			count(hl7:recordTarget/hl7:patientRole/hl7:patient/hl7:birthplace/hl7:place/hl7:addr)=1"
			>ERRORE-18| L'elemento <name/>/recordTarget/patientRole/patient/birthplace DEVE contenere un elemento place/addr </assert>	
			
			
			<!--Controllo dataEnterer-->	
			<assert test="count(hl7:dataEnterer)=0 or count(hl7:dataEnterer/hl7:time)=1"
			>ERRORE-23| L'elemento <name/>/dataEnterer se presente, DEVE contenere un elemento 'time'</assert>
			
			<let name="id_dataEnterer" value="hl7:dataEnterer/hl7:assignedEntity/hl7:id"/>
			
			<assert test="count(hl7:dataEnterer)=0 or count($id_dataEnterer[@root='2.16.840.1.113883.2.9.4.3.2'])=1"
			>ERRORE-24| L'elemento <name/>/dataEnterer/assignedEntity DEVE avere almeno un elemento 'id' <value-of select="$id_dataEnterer"/> con l'attributo @root='2.16.840.1.113883.2.9.4.3.2'</assert>
			
			<!--Controllo dataEnterer/assignedEntity/assignedPerson-->
			<let name="nome" value="hl7:dataEnterer/hl7:assignedEntity/hl7:assignedPerson/hl7:name"/>
			
			<assert test="count(hl7:dataEnterer)=0 or (count(hl7:dataEnterer/hl7:assignedEntity/hl7:assignedPerson/hl7:name)=1)"
			>ERRORE-25| L'elemento <name/>/dataEnterer/assignedEntity DEVE riportare l'elemento 'assignedPerson/name'</assert>
			<assert test="count(hl7:dataEnterer)=0 or (count($nome/hl7:family)=1 and count($nome/hl7:given)=1)"
			>ERRORE-26| L'elemento <name/>/dataEnterer/assignedEntity/assignedPerson/name DEVE avere gli elementi 'given' e 'family'</assert>	
			

			<!--Controllo custodian/assignedCustodian/representedCustodianOrganization-->
			<assert test="count(hl7:custodian/hl7:assignedCustodian/hl7:representedCustodianOrganization/hl7:name)=1"
			>ERRORE-27| L'elemento <name/>/custodian/assignedCustodian/representedCustodianOrganization deve contenere un elemento 'name'</assert>
			
			<let name="num_addr_cust" value="count(hl7:custodian/hl7:assignedCustodian/hl7:representedCustodianOrganization/hl7:addr)"/>
			<let name="addr_cust" value="hl7:custodian/hl7:assignedCustodian/hl7:representedCustodianOrganization/hl7:addr"/>
			
			<assert test="$num_addr_cust=0 or (count($addr_cust/hl7:country)=$num_addr_cust and
			count($addr_cust/hl7:city)=$num_addr_cust and 
			count($addr_cust/hl7:streetAddressLine)=$num_addr_cust)"
			>ERRORE-28| L'elemento <name/>/custodian/assignedCustodian/representedCustodianOrganization/addr DEVE riportare i sotto-elementi 'country','city' e 'streetAddressLine'</assert>
			
			 <!--Controllo legalAuthenticator-->
			<assert test = "count(hl7:legalAuthenticator)=1" 
			>ERRORE-29| L'elemento <name/>/legalAuthenticator è obbligatorio </assert>
			<assert test = "count(hl7:legalAuthenticator)=0 or count(hl7:legalAuthenticator/hl7:signatureCode[@code='S'])=1" 
			>ERRORE-30| L'elemento <name/>/legalAuthenticator/signatureCode deve essere valorizzato con il codice "S" </assert>
			<assert test = "count(hl7:legalAuthenticator)=0 or count(hl7:legalAuthenticator/hl7:assignedEntity/hl7:id[@root='2.16.840.1.113883.2.9.4.3.2'])=1"
			>ERRORE-31| L'elemento <name/>/legalAuthenticator/assignedEntity DEVE contenere almeno un elemento id valorizzato con l'attributo @root='2.16.840.1.113883.2.9.4.3.2'</assert>
			<assert test = "count(hl7:legalAuthenticator)= 0 or count(hl7:legalAuthenticator/hl7:assignedEntity/hl7:assignedPerson/hl7:name)=1"
			>ERRORE-32| L'elemento <name/>/legalAuthenticator/assignedEntity/assignedPerson DEVE contenere l'elemento 'name'</assert>
			<assert test = "count(hl7:legalAuthenticator)=0 or (count(hl7:legalAuthenticator/hl7:assignedEntity/hl7:assignedPerson/hl7:name/hl7:family)=1 and 
			count(hl7:legalAuthenticator/hl7:assignedEntity/hl7:assignedPerson/hl7:name/hl7:given)=1)"
			>ERRORE-33| L'elemento <name/>/legalAuthenticator/assignedEntity/assignedPerson/name DEVE riportare gli elementi 'given' e 'family'</assert>
			

			<!--Controllo componentOf-->
			<assert test="count(hl7:componentOf)=1"
			>ERRORE-39| L'elemento <name/>/componentOf è obbligatorio </assert>
			<assert test="(count(hl7:componentOf)=0 or count(hl7:componentOf/hl7:encompassingEncounter/hl7:location/hl7:healthCareFacility)=1)"
			>ERRORE-40| L'elemento <name/>/componentOf/encompassingEncounter/location/healthcareFacility deve essere presente </assert>
			<assert test="count(hl7:componentOf)=0 or count(hl7:componentOf/hl7:encompassingEncounter/hl7:location)=1"
			>ERRORE-41| L'elemento <name/>/componentOf/encompassingEncounter DEVE contenere l'elemento 'location'</assert>
			<assert test="count(hl7:componentOf)=0 or count(hl7:componentOf/hl7:encompassingEncounter/hl7:location/hl7:healthCareFacility/hl7:serviceProviderOrganization/hl7:asOrganizationPartOf)=0 or 
			count (hl7:componentOf/hl7:encompassingEncounter/hl7:location/hl7:healthCareFacility/hl7:serviceProviderOrganization/hl7:asOrganizationPartOf/hl7:id)=1"
			>ERRORE-42| L'elemento <name/>/componentOf/encompassingEncounter/location/healthcareFacility/serviceProviderOrganization/asOrganizationPartOf, se presente deve contenere l'elemento 'id' </assert>	
		</rule>
		
		<!-- Controllo author-->
		<rule context="hl7:ClinicalDocument/hl7:author">
			<!--Controllo author/assignedAuthor/id-->
			<assert test="count(hl7:assignedAuthor/hl7:id[@root='2.16.840.1.113883.2.9.4.3.2'])= 1"
			>ERRORE-19| L'elemento <name/>/assignedAuthor DEVE contenere almeno un elemento 'id' con il relativo attributo @root='2.16.840.1.113883.2.9.4.3.2'</assert>
			
			<!--Controllo author/assignedAuthor/telecom-->
			<assert test="count(hl7:assignedAuthor/hl7:telecom)>=1"
			>ERRORE-20| L'elemento <name/>/assignedAuthor DEVE contenere almeno un elemento 'telecom'</assert>
			
			<!--Controllo author/assignedAuthor/assignedPerson/name-->
			<let name="name_author" value="hl7:assignedAuthor/hl7:assignedPerson"/>
			
			<assert test="count($name_author/hl7:name)=1"
			>ERRORE-21| L'elemento <name/>/assignedAuthor/assignedPerson DEVE avere l'elemento 'name' </assert>
			<assert test="count($name_author/hl7:name)=0 or (count($name_author/hl7:name/hl7:given)=1 and count($name_author/hl7:name/hl7:family)=1)"
			>ERRORE-22| L'elemento <name/>/assignedAuthor/assignedPerson/name DEVE avere gli elementi 'given' e 'family'</assert>
			
		</rule>
		
		<!-- Controllo participant-->
		<rule context="hl7:ClinicalDocument/hl7:participant">
			<assert test="count(hl7:associatedEntity/hl7:id)>=1"
			>ERRORE-34| L'elemento <name/>/associatedEntity deve contenere almeno un elemento 'id'</assert>
			
			<let name="num_addr_pcp" value="count(hl7:associatedEntity/hl7:addr)"/>
            <let name="addr_pcp" value="hl7:associatedEntity/hl7:addr"/>
			
            <assert test="$num_addr_pcp=0 or (count($addr_pcp/hl7:country)=$num_addr_pcp and
                           count($addr_pcp/hl7:city)=$num_addr_pcp and
                            count($addr_pcp/hl7:streetAddressLine)=$num_addr_pcp)"
            >ERRORE-35| L'elemento <name/>/associatedEntity/addr DEVE riportare i sotto-elementi 'country', 'city' e 'streetAddressLine' </assert>
			
			<assert test="count(hl7:associatedEntity/hl7:associatedPerson)=0 or count(hl7:associatedEntity/hl7:associatedPerson/hl7:name)=1"
			>ERRORE-36| L'elemento <name/>/associatedEntity/associatedPerson deve contenere l'elemento 'name'</assert>
			<assert test="count(/hl7:associatedEntity/hl7:associatedPerson)=0 
			or(count(hl7:associatedEntity/hl7:associatedPerson/hl7:name/hl7:family)=1 and count(hl7:participant/hl7:associatedEntity/hl7:associatedPerson/hl7:name/hl7:given)=1)"
			>ERRORE-37| L'elemento <name/>/associatedEntity/associatedPerson/name deve contenere gli elementi 'given' e 'family'</assert>
			
		</rule>
		
		<!-- Controllo inFulfillmentOf-->
		<rule context="hl7:ClinicalDocument/hl7:inFulfillmentOf">
			<!--Controllo ClinicalDocument/inFulfillmentOf-->
			<assert test ="count(hl7:order/hl7:priorityCode)=0 or 
			count(hl7:order/hl7:priorityCode[@codeSystem='2.16.840.1.113883.5.7'][@code='R' or @code='P' or @code='UR' or @code='EM'])=1" 
			>ERRORE-38| <name/>/order/priorityCode DEVE avere l'attributo '@codeSystem='2.16.840.1.113883.5.7' e @code valorizzato con uno dei seguenti valori: 'R'|'P'|'UR'|'EM' </assert>
			
		</rule>
		
<!--____________________________________________________CONTROLLI GENERICI_________________________________________________________________-->
	
		<!--Controllo use Telecom-->
		<rule context="//hl7:telecom">
			<assert test="(count(@use)=1)"
			>ERRORE-43| L’elemento 'telecom' DEVE contenere l'attributo @use </assert>
		</rule>	
		
		<!-- Controllo formato: -->
		<!--campi Codice Fiscale: 16 cifre [A-Z0-9]{16} -->
		<rule context="//hl7:id[@root='2.16.840.1.113883.2.9.4.3.2']">
			<let name="CF" value="@extension"/>
			<assert test="matches(@extension, '[A-Z0-9]{16}') and string-length($CF)=16"
			>ERRORE-44| Il codice fiscale '<value-of select="$CF"/>' cittadino ed operatore deve essere costituito da 16 cifre [A-Z0-9]{16}</assert>
		</rule>
	
		<!--Controllo sugli attributi di observation-->
		<rule context="//hl7:observation">
			<let name="moodCd" value="@moodCode"/>
			<assert test="count(@classCode)=1"
			>ERRORE-45| L'attributo "@classCode" dell'elemento "observation" deve essere presente </assert>
			<assert test="$moodCd='EVN'"
			>ERRORE-46| L'attributo "@moodCode" dell'elemento "observation" deve essere valorizzato con "EVN" </assert>
		</rule>

		<!--Verifica che i codici ActStatusActiveCompletedAborteSuspended utilizzati siano corretti-->
        <rule context="//hl7:statusCode">
            <let name="val_status" value="@code"/>
            <assert test="$val_status='active' or  $val_status='completed' or $val_status='aborted' or $val_status='suspended'"
            >Errore 47| Codice ActStatus '<value-of select="$val_status"/>' errato! L'attributo @code deve essere valorizzato con "active", "completed", "aborted", "suspended"
            </assert>
        </rule>
		
		<!--Verifica che i codici relativi al CodeSystem "UCUM" utilizzati siano corretti-->
		<!--rule context="//*[@unit]">
			<let name="val_UCUM" value="@unit"/>
			<assert test="doc('DIZ/XML_FSE_v1/2.16.840.1.113883.4.642.3.912.xml')//el[@code=$val_UCUM]"
			>ERRORE-50| Codice UCUM <value-of select="$val_UCUM"/> errato
			</assert>
		</rule-->
		
<!--__________________________________________________BODY__________________________________________________________________________-->

		<rule context="hl7:ClinicalDocument/hl7:component/hl7:structuredBody">
		<!--Controlli sulle sezioni obbligatorie-->
			<!--1-->
			<!--Sezione Prestazioni-->
			<assert test="count(hl7:component/hl7:section/hl7:code[@code='62387-6'][@codeSystem='2.16.840.1.113883.6.1'])=1"
			>ERRORE-b1| Sezione Prestazioni: la sezione DEVE essere presente</assert>		
			<assert test="count(hl7:component/hl7:section/hl7:code[@code='62387-6'][@codeSystem='2.16.840.1.113883.6.1'])=0 or count(hl7:component/hl7:section[hl7:code[@code='62387-6']]/hl7:text)=1"
			>ERRORE-b2| Sezione Prestazioni: la sezione DEVE contenere un elemento 'text'</assert>
			<assert test="count(hl7:component/hl7:section/hl7:code[@code='62387-6'][@codeSystem='2.16.840.1.113883.6.1'])=0 or count(hl7:component/hl7:section[hl7:code[@code='62387-6']]/hl7:entry)>=1"  
			>ERRORE-b3| Sezione Prestazioni: la sezione DEVE contenere un elemento 'entry'</assert>
		
			<!--2-->
			<!--Sezione Referto-->
			<assert test="count(hl7:component/hl7:section/hl7:code[@code='47045-0'][@codeSystem='2.16.840.1.113883.6.1'])=1"
			>ERRORE-b4| Sezione Referto: la sezione DEVE essere presente</assert>		
			<assert test="count(hl7:component/hl7:section[hl7:code[@code='47045-0']]/hl7:text)=1"
			>ERRORE-b5| Sezione Referto: la sezione DEVE contenere un elemento 'text'</assert>
		
		<!--Controlli sulle sezioni opzionali-->
			<!--3-->
			<!--Sezione Quesito Diagnostico-->	
			<assert test="count(hl7:component/hl7:section[hl7:code[@code='29299-5']])=0 or count(hl7:component/hl7:section[hl7:code[@code='29299-5']]/hl7:text)=1"
			>ERRORE-b6| Sezione Quesito Diagnostico: la sezione DEVE contenere un elemento 'text'</assert>
			
			<!--4-->
			<!--Sezione Storia Clinica-->
			<assert test="count(hl7:component/hl7:section[hl7:code[@code='11329-0']])=0 or count(hl7:component/hl7:section[hl7:code[@code='11329-0']]/hl7:text)=1"
			>ERRORE-b7| Sezione Storia Clinica: la sezione DEVE contenere un elemento 'text'</assert>

			<!--Controllo cardinalità sotto-sezioni-->
			<assert test="(count(hl7:component/hl7:section[hl7:code[@code='11329-0']]/hl7:component[hl7:section/hl7:code[@code='48765-2']])&lt;=1)"
			>ERRORE-b8| Sezione Storia Clinica: la sezione può contenere al massimo una sotto-sezione "Allergie"</assert>	
			<assert test="(count(hl7:component/hl7:section[hl7:code[@code='11329-0']]/hl7:component/hl7:section/hl7:code[@code='48765-2'])=0) or 
			(count(hl7:component/hl7:section[hl7:code[@code='11329-0']]/hl7:component/hl7:section[hl7:code[@code='48765-2']]/hl7:text)=1)"
			>ERRORE-b9| Sezione Storia Clinica: la sotto-sezione Allergie DEVE contenere un elemento 'text'</assert>	
			
			<assert test="(count(hl7:component/hl7:section[hl7:code[@code='11329-0']]/hl7:component[hl7:section/hl7:code[@code='10160-0']])&lt;=1)"
			>ERRORE-b10| Sezione Storia Clinica: la sezione può contenere al massimo una sotto-sezione "Terapia Farmacologica in Atto"</assert>
			<assert test="(count(hl7:component/hl7:section[hl7:code[@code='11329-0']]/hl7:component/hl7:section/hl7:code[@code='10160-0'])=0) or 
			(count(hl7:component/hl7:section[hl7:code[@code='11329-0']]/hl7:component/hl7:section[hl7:code[@code='10160-0']]/hl7:text)=1)"
			>ERRORE-b11| Sezione Storia Clinica: la sotto-sezione Terapia Farmacologica in Atto DEVE contenere un elemento 'text'</assert>
		
			<!--5-->
			<!--Sezione Precedenti Esami Eseguiti-->
			<assert test="count(hl7:component/hl7:section[hl7:code[@code='30954-2']])=0 or count(hl7:component/hl7:section[hl7:code[@code='30954-2']]/hl7:text)=1"
			>ERRORE-b12| Sezione Precedenti Esami Eseguiti: la sezione DEVE contenere un elemento 'text'</assert>
				
			<!--6-->
			<!--Sezione Esame obiettivo-->
			<assert test="count(hl7:component/hl7:section[hl7:code[@code='29545-1']])=0 or count(hl7:component/hl7:section[hl7:code[@code='29545-1']]/hl7:text)=1"
			>ERRORE-b13| Sezione Esame obiettivo: la sezione DEVE contenere un elemento 'text'</assert>
			
			<!--7-->
			<!--Sezione Confronto Con Precedenti Esami Eseguiti -->
			<assert test="count(hl7:component/hl7:section[hl7:code[@code='93126-1']])=0 or count(hl7:component/hl7:section[hl7:code[@code='93126-1']]/hl7:text)=1"
			>ERRORE-b14| Sezione Confronto Con Precedenti Esami Eseguiti: la sezione DEVE contenere un elemento 'text'</assert>
			
			<!--8-->
			<!--Sezione Diagnosi-->
			<assert test="count(hl7:component/hl7:section[hl7:code[@code='29548-5']])=0 or count(hl7:component/hl7:section[hl7:code[@code='29548-5']]/hl7:text)=1"
			>ERRORE-b15| Sezione Diagnosi: la sezione DEVE contenere un elemento 'text'</assert>
			
			<!--9-->
			<!-- Sezione Conclusioni-->
			<assert test="count(hl7:component/hl7:section[hl7:code[@code='55110-1']])=0 or count(hl7:component/hl7:section[hl7:code[@code='55110-1']]/hl7:text)=1"
			>ERRORE-b16| Sezione Conclusioni: la sezione DEVE contenere un elemento 'text'</assert>
						
			<!--10-->
			<!--Sezione Suggerimenti per il medico prescrittore-->
			<assert test="count(hl7:component/hl7:section[hl7:code[@code='62385-0']])=0 or count(hl7:component/hl7:section[hl7:code[@code='62385-0']]/hl7:text)=1"
			>ERRORE-b17| Sezione Suggerimenti per il medico prescrittore: la sezione DEVE contenere un elemento 'text'</assert>

			<!--11-->
			<!-- sezione Accertamenti e controlli consigliati-->
			<assert test="count(hl7:component/hl7:section[hl7:code[@code='80615-8']])=0 or count(hl7:component/hl7:section[hl7:code[@code='80615-8']]/hl7:text)=1"
			>ERRORE-b18| Sezione Accertamenti e controlli consigliati: la sezione DEVE contenere un elemento 'text'</assert>
			
			<!--12-->
			<!-- Sezione Terapia farmacologica consigliata-->
			<assert test="count(hl7:component/hl7:section[hl7:code[@code='93341-6']])=0 or count(hl7:component/hl7:section[hl7:code[@code='93341-6']]/hl7:text)=1"
			>ERRORE-b19| Sezione Terapia farmacologica consigliata: la sezione DEVE contenere un elemento 'text'</assert>		
		</rule>
		
		<!--Controllo sui codici delle sezioni-->
		<rule context="hl7:ClinicalDocument/hl7:component/hl7:structuredBody/hl7:component/hl7:section">
			<let name="codice" value="hl7:code/@code"/>
			<assert test="count(hl7:code[@code='29299-5'][@codeSystem='2.16.840.1.113883.6.1'])=1 or count(hl7:code[@code='11329-0'][@codeSystem='2.16.840.1.113883.6.1'])=1 or count(hl7:code[@code='30954-2'][@codeSystem='2.16.840.1.113883.6.1'])=1 
			or count(hl7:code[@code='29545-1'][@codeSystem='2.16.840.1.113883.6.1'])=1 or count(hl7:code[@code='62387-6'][@codeSystem='2.16.840.1.113883.6.1'])=1 or count(hl7:code[@code='93126-1'][@codeSystem='2.16.840.1.113883.6.1'])=1 
			or count(hl7:code[@code='47045-0'][@codeSystem='2.16.840.1.113883.6.1'])=1 or count(hl7:code[@code='29548-5'][@codeSystem='2.16.840.1.113883.6.1'])=1 or count(hl7:code[@code='55110-1'][@codeSystem='2.16.840.1.113883.6.1'])=1  
			or count(hl7:code[@code='62385-0'][@codeSystem='2.16.840.1.113883.6.1'])=1 or count(hl7:code[@code='80615-8'][@codeSystem='2.16.840.1.113883.6.1'])=1 or count(hl7:code[@code='93341-6'][@codeSystem='2.16.840.1.113883.6.1'])=1"
			>ERRORE-b20| Il codice '<value-of select="$codice"/>' non è corretto. La sezione deve essere valorizzata con uno dei seguenti codici:
			29299-5	Sezione Quesito Diagnostico
			11329-0	Sezione Storia Clinica
			30954-2	Sezione Precedenti Esami Eseguiti
			29545-1	Sezione Esame Obiettivo
			62387-6	Sezione Prestazioni
			93126-1	Sezione Confronto Con Precedenti Esami Eseguiti
			47045-0	Sezione Referto
			29548-5 Sezione Diagnosi
			55110-1	Sezione Conclusioni
			62385-0	Sezione Suggerimenti Per Il Medico Prescrittore 
			80615-8 Sezione Accertamenti e Controlli Consigliati 
			93341-6 Sezione Terapia Farmacologica Consigliata
			</assert>
		</rule>			
		
		<!--3-->
		<!--Sezione Quesito diagnostico: controllo sulla entry -->
		<rule context="hl7:ClinicalDocument/hl7:component/hl7:structuredBody/hl7:component/hl7:section[hl7:code[@code='29299-5']]/hl7:entry">
			<assert test="count(hl7:observation/hl7:code[@code='29298-7'][@codeSystem='2.16.840.1.113883.6.1'])=1"
			>ERRORE-b21| Sezione Quesito Diagnostico: l'elemento entry/observation/code deve avere l'attributo @code='29298-7' e l'attributo @codeSystem='2.16.840.1.113883.6.1'</assert>
			<assert test="count(hl7:observation/hl7:value[@codeSystem='2.16.840.1.113883.6.103'])=1"
			>ERRORE-b22| Sezione Quesito Diagnostico: l'elemento entry/observation/value DEVE avere attributo @codeSystem valorizzato con l'OID del sistema di codifica ICD-9-CM </assert>	
		</rule>
		
		<!--4-->
		<!--Sezione Storia Clinica: dettaglio Anamnesi Patologica e Fisiologica(entry/observation) -->
		<rule context="hl7:ClinicalDocument/hl7:component/hl7:structuredBody/hl7:component/hl7:section[hl7:code[@code='11329-0']]/hl7:entry">
			
			<!--controllo sui sotto elementi di entry-->
			<assert test="count(hl7:observation)=1 or count(hl7:organizer)=1"
			>ERRORE-b23| Sezione Storia Clinica: l'elemento 'entry' deve avere uno dei seguenti sotto elementi:
			- 'observation': per l'Anamnesi patologica e fisiologica;
			- 'organizer': per l'Anamnesi familiare.</assert>
			<assert test="count(hl7:observation)=0 or count(hl7:observation/hl7:code[@code='75326-9'][@codeSystem='2.16.840.1.113883.6.1'])=1"
			>ERRORE-b24| Sezione Storia Clinica: l'elemento entry/observation/code deve avere l'attributo @code='75326-9' e l'attributo @codeSystem='2.16.840.1.113883.6.1'</assert>
			<assert test="count(hl7:observation)=0 or count(hl7:observation/hl7:statusCode[@code='completed'])=1"
			>ERRORE-b25| Sezione Storia Clinica: l'elemento entry/observation/statusCode deve avere l'attributo @code='completed'</assert>
			<assert test="count(hl7:observation)=0 or count(hl7:observation/hl7:effectiveTime/hl7:low)=1"
			>ERRORE-b26| Sezione Storia Clinica: l'elemento entry/observation/effectiveTime deve essere presente e deve avere l'elemento 'low' valorizzato</assert>
			<assert test="(count(hl7:observation)=0 or count(hl7:observation/hl7:entryRelationship/hl7:observation[hl7:code[@code='33999-4']])=0) or 
			(count(hl7:observation/hl7:entryRelationship/hl7:observation[hl7:code[@code='33999-4']]/hl7:value[@code='LA18632-2'])=1 and 
			count(hl7:observation/hl7:effectiveTime/hl7:high)=1) or count(hl7:observation/hl7:effectiveTime/hl7:high)=1"
			>ERRORE-b27| Sezione Storia Clinica: l'elemento entry/observation/effectiveTime deve essere presente e deve avere l'elemento 'high' valorizzato nel caso in cui il problema non sia più presente</assert>
			<assert test="count(hl7:observation)=0 or count(hl7:observation/hl7:value[@xsi:type='CD'])=1"
			>ERRORE-b28| Sezione Storia Clinica: l'elemento entry/observation/value deve avere l'attributo @xsi:type="CD" </assert>
			<assert test="count(hl7:observation)=0 or (count(hl7:observation/hl7:value/@code)=0 and count(hl7:observation/hl7:value/hl7:originalText/hl7:reference)=1)
			or (count(hl7:observation/hl7:value/@code)=1 and count(hl7:observation/hl7:value/hl7:originalText/hl7:reference)&lt;=1)"
			>ERRORE-b29| Sezione Storia Clinica: nel caso di entry/observation/value non codificato, deve essere valorizzato l'elemento 'originalText/reference'</assert>
			<assert test="count(hl7:observation)=0 or (count(hl7:observation/hl7:entryRelationship[hl7:observation/hl7:code[@code='89261-2']])&lt;=1)"
			>ERRORE-b30| Sezione Storia Clinica: l'entry/observation può contenere al più una entryRelationship relativa alla Cronicità della patologia </assert>
			<assert test="count(hl7:observation)=0 or (count(hl7:observation/hl7:entryRelationship[hl7:observation/hl7:code[@code='33999-4']])&lt;=1)"
			>ERRORE-b31| Sezione Storia Clinica: l'entry/observation può contenere al più una 'entryRelationship' relativa allo Stato Clinico del problema </assert>
		
		<!--Sezione Storia Clinica: dettaglio Anamnesi familiare(entry/organizer)-->
			<assert test="count(hl7:organizer)=0 or count(hl7:organizer[@classCode='CLUSTER'])=1 and count(hl7:organizer/@moodCode)=1"
			>ERRORE-b32| Sezione Storia Clinica: l'elemento entry/organizer deve avere gli attributi @classCode='CLUSTER' e @moodCode </assert>
			<assert test="count(hl7:organizer)=0 or count(hl7:organizer/hl7:code[@code='10157-6'][@codeSystem='2.16.840.1.113883.6.1'])=1"
			>ERRORE-b33| Sezione Storia Clinica: l'elemento entry/organizer/code deve avere gli attributi @code='10157-6' e @codeSystem='2.16.840.1.113883.6.1'</assert>
			<assert test="count(hl7:organizer)=0 or count(hl7:organizer/hl7:statusCode[@code='completed'])=1"
			>ERRORE-b34| Sezione Storia Clinica: l'elemento entry/organizer/statusCode deve avere l'attributo @code='completed'</assert>
			<assert test="count(hl7:organizer)=0 or count(hl7:organizer/hl7:effectiveTime)=1"
			>ERRORE-b35| Sezione Storia Clinica: l'elemento entry/organizer/effectiveTime deve essere presente</assert>
			<assert test="count(hl7:organizer)=0 or count(hl7:organizer/hl7:subject/hl7:relatedSubject[@classCode='PRS'])=1 and 
			count(hl7:organizer/hl7:subject/hl7:relatedSubject/hl7:code[@codeSystem='2.16.840.1.113883.5.111'])=1"
			>ERRORE-b36| Sezione Storia Clinica: l'elemento entry/organizer/subject/relatedSubject deve avere l'attributo @classCode='PRS' e deve contenere l'elemento 'code'</assert>
			<assert test="count(hl7:organizer)=0 or count(hl7:organizer/hl7:component)>=1"
			>ERRORE-b37| Sezione Storia Clinica: l'elemento entry/organizer deve contenere almeno un elemento component di tipo observation </assert>
		</rule>
		
		<!--Sezione Storia Clinica: dettaglio anamnesi del familiare in oggetto (entry/organizer/component/observation)-->
		<rule context="hl7:ClinicalDocument/hl7:component/hl7:structuredBody/hl7:component/hl7:section[hl7:code[@code='11329-0']]/hl7:entry/hl7:organizer/hl7:component">
		
			<assert test="count(hl7:observation/hl7:code[@codeSystem='2.16.840.1.113883.6.1'])=1"
			>ERRORE-b38| Sezione Storia Clinica: l'elemento entry/organizer/component/observation/code deve avere l'attributo @codeSystem='2.16.840.1.113883.6.1'</assert>
			<assert test="count(hl7:observation/hl7:statusCode[@code='completed'])=1"
			>ERRORE-b39| Sezione Storia Clinica: l'elemento entry/organizer/component/observation/statusCode deve avere l'attributo @code='completed'</assert>
			<assert test="count(hl7:observation/hl7:effectiveTime)=1"
			>ERRORE-b40| Sezione Storia Clinica: l'elemento entry/organizer/component/observation/effectiveTime deve essere presente </assert>
			<assert test="count(hl7:observation/hl7:value[@codeSystem='2.16.840.1.113883.6.103'])=1"
			>ERRORE-b41| Sezione Storia Clinica: l'elemento entry/organizer/component/observation/value deve essere presente e valorizzato secondo il @codeSystem='2.16.840.1.113883.6.103' </assert>
			<assert test="count(hl7:observation/hl7:entryRelationship[hl7:observation/hl7:code[@code='35267-4']])&lt;=1"
			>ERRORE-b42| Sezione Storia Clinica: l'elemento entry/organizer/component/observation può contenere una entryRelationship relativa all'Età di insorgenza o di morte </assert>
			<assert test="count(hl7:observation/hl7:entryRelationship[hl7:observation/hl7:code[@code!='35267-4']])=1 and 
			count(hl7:observation/hl7:entryRelationship[hl7:observation/hl7:code[@code='39016-1']])=1 and 
			count(hl7:observation/hl7:entryRelationship/hl7:observation[hl7:code[@code='39016-1']]/hl7:value)=1"
			>ERRORE-b43| Sezione Storia Clinica: l'elemento entry/organizer/component/observation/entryRelationship/observation deve avere il code valorizzato con @code='39016-1' e deve contenere un elemento 'value'</assert>
		</rule>	
	
		<!--Sezione Storia Clinica: cronicità della patologia\stato clinico del problema (entry/observation/entryRelationship/observation)-->
		<rule context="hl7:ClinicalDocument/hl7:component/hl7:structuredBody/hl7:component/hl7:section[hl7:code[@code='11329-0']]/hl7:entry/hl7:observation/hl7:entryRelationship">
			
			<assert test="(count(hl7:observation/hl7:code[@code='89261-2'][@codeSystem='2.16.840.1.113883.6.1'])=1 or
			count(hl7:observation/hl7:code[@code='33999-4'][@codeSystem='2.16.840.1.113883.6.1'])=1)"
			>ERRORE-b44| Sezione Storia Clinica: l'elemento entry/observation/entryRelationship/observation/code deve avere l'attributo @code valorizzato con:
			"89261-2" per "Cronicità patologia";
			"33999-4" per "Stato clinico patologia"
			</assert>
			<assert test="count(hl7:observation[hl7:code[@code='89261-2']]/hl7:value)=0 or 
			(count(hl7:observation[hl7:code[@code='89261-2']]/hl7:value[@codeSystem='2.16.840.1.113883.6.1'])=1 or 
			count(hl7:observation[hl7:code[@code='89261-2']]/hl7:value[@codeSystem='2.16.840.1.113883.2.9.77.22.11.10'])=1)"
			>ERRORE-b45| Sezione Storia Clinica: l'elemento entry/observation/entryRelationship/observation/value relativo alla Cronicità deve essere valorizzato secondo il Value set "CronicitàProblema"</assert>
			
			<assert test="count(hl7:observation[hl7:code[@code='89261-2']]/hl7:value)=0 or 
			(count(hl7:observation[hl7:code[@code='89261-2']]/hl7:value[@code='LA28752-6'])=1 or
			count(hl7:observation[hl7:code[@code='89261-2']]/hl7:value[@code='LA18821-1'])=1)"
			>ERRORE-b45a| Sezione Storia Clinica: l'attributo @code di entry/observation/entryRelationship/observation/value relativo alla Cronicità deve essere valorizzato con:
			- "LA28752-6" se "chronic";
			- "LA18821-1" se "acute".
			</assert>
			
			<!--per il controllo inerente il sistema di codifica da utilizzare, c'è la possibilità di usare anche sistemi di codifica locali-->
			<assert test="count(hl7:observation[hl7:code[@code='33999-4']]/hl7:value)=0 or 
			(count(hl7:observation[hl7:code[@code='33999-4']]/hl7:value[@codeSystem='2.16.840.1.113883.6.1'])=1 or 
			count(hl7:observation[hl7:code[@code='33999-4']]/hl7:value[@codeSystem='2.16.840.1.113883.2.9.77.22.11.7'])=1)"
			>ERRORE-b46| Sezione Storia Clinica: l'elemento entry/observation/entryRelationship/observation/value relativo allo Stato Clinico della patologia deve essere valorizzato secondo il Value set "StatoClinicoProblema"</assert>
			
			<assert test="count(hl7:observation[hl7:code[@code='33999-4']]/hl7:value)=0 or 
			(count(hl7:observation[hl7:code[@code='33999-4']]/hl7:value[@code='LA16666-2'])=1 or
			count(hl7:observation[hl7:code[@code='33999-4']]/hl7:value[@code='LA18632-2'])=1)"
			>ERRORE-b46a| Sezione Storia Clinica: l'attributo @code di entry/observation/entryRelationship/observation/value relativo allo Stato Clinico della patologia deve essere valorizzato con:
			- "LA16666-2" se "active";
			- "LA18632-2" se "inactive".
			</assert>
			
		</rule>
		
		<!--4.1-->
		<!--Sotto-sezione Allergie-->
		<rule context="hl7:ClinicalDocument/hl7:component/hl7:structuredBody/hl7:component/hl7:section[hl7:code[@code='11329-0']]/hl7:component/hl7:section[hl7:code[@code='48765-2']]/hl7:entry">
		
			<assert test="count(hl7:act[@classCode='ACT'][@moodCode='EVN'])=1"
			>ERRORE-b47| Sotto-sezione Allergie: la sezione deve contenere un elemento entry di tipo 'act'con attributi @classCode='ACT' e @moodCode='EVN'</assert>
			<assert test="count(hl7:act/hl7:effectiveTime/hl7:low)=1"
			>ERRORE-b48| Sotto-sezione  Allergie: l'elemento entry/act/effectiveTime deve essere presente e deve avere l'elemento 'low' valorizzato</assert>
			<let name="status" value="hl7:act/hl7:statusCode/@code"/>
			<assert test="count(hl7:act/hl7:statusCode)=0 or ($status='completed' and count(hl7:act/hl7:effectiveTime/hl7:high)=1) or
			($status='aborted' and count(hl7:act/hl7:effectiveTime/hl7:high)=1) or 
			($status='suspended' and count(hl7:act/hl7:effectiveTime/hl7:high)=0) or 
			($status='active' and count(hl7:act/hl7:effectiveTime/hl7:high)=0)"
			>ERRORE-b49| Sotto-sezione  Allergie: l'elemento entry/act/effectiveTime/high deve essere presente nel caso in cui lo 'statusCode' sia 'completed'oppure'aborted'</assert>
			<!--Sotto-sezione Allergie: osservazione Allergia o Intolleranza(entry/act/entryRelationship/observation)-->
			<assert test="count(hl7:act/hl7:entryRelationship/hl7:observation/hl7:code[@code='52473-6'][@codeSystem='2.16.840.1.113883.6.1'])=1"
			>ERRORE-b50| Sotto-sezione Allergie: l'entry/act deve includere uno ed un solo elemento entryRelationship/observation con attributo @code='52473-6' e @codeSystem='2.16.840.1.113883.6.1</assert>	
			<assert test="count(hl7:act/hl7:entryRelationship/hl7:observation/hl7:text)=0 or 
			count(hl7:act/hl7:entryRelationship/hl7:observation/hl7:text/hl7:reference/@value)=1"
			>ERRORE-b51| Sotto-sezione Allergie: l'entry/act/entryRelationship/observation/text se presente, ha l'attributo reference/@value valorizzato con l'URI che punta alla descrizione di allarme, allergia o intolleranza nel narrative block della sezione </assert>
			<assert test="count(hl7:act/hl7:entryRelationship/hl7:observation/hl7:statusCode[@code='completed'])=1"
			>ERRORE-b52| Sotto-sezione Allergie: l'elemento entry/act/entryRelationship/observation/statusCode/@code deve assumere il valore costante 'completed'</assert>
			<assert test="count(hl7:act/hl7:entryRelationship/hl7:observation/hl7:effectiveTime/hl7:low)=1"
			>ERRORE-b53| Sotto-sezione Allergie: l'elemento entry/act/entryRelationship/observation/effectiveTime deve essere presente e deve avere l'elemento 'low' valorizzato </assert>
			<assert test="count(hl7:act/hl7:entryRelationship/hl7:observation/hl7:value[@xsi:type='CD'])=1"
			>ERRORE-b54| Sotto-sezione Allergie: l'elemento entry/act/entryRelationship/observation/value deve avere l'attributo @xsi:type='CD'</assert>
			<assert test="count(hl7:act/hl7:entryRelationship/hl7:observation/hl7:value/@code)=0 or 
			count(hl7:act/hl7:entryRelationship/hl7:observation/hl7:value[@codeSystem='2.16.840.1.113883.5.4'])=1"
			>ERRORE-b55| Sotto-sezione Allergie: l'elemento entry/act/entryRelationship/observation/value codificato, deve avere l'attributo @code valorizzato secondo il value set "ObservationIntoleranceType" - @codeSystem='2.16.840.1.113883.5.4'</assert>
			<assert test="(count(hl7:act/hl7:entryRelationship/hl7:observation/hl7:value/@code)=0 and 
			count(hl7:act/hl7:entryRelationship/hl7:observation/hl7:value/hl7:originalText/hl7:reference/@value)=1) or 
			(hl7:act/hl7:entryRelationship/count(hl7:observation/hl7:value/@code)=1 and 
			count(hl7:act/hl7:entryRelationship/hl7:observation/hl7:value/hl7:originalText/hl7:reference/@value)&lt;=1)"
			>ERRORE-b56| Sotto-sezione Allergie: l'elemento entry/act/entryRelationship/observation/value non codificato, deve avere l'elemento originalText/reference/@value valorizzato, altrimenti l'elemento originalText/reference può non essere presente</assert>
			<assert test="count(hl7:act/hl7:entryRelationship/hl7:observation/hl7:participant)>=1"
			>ERRORE-b57| Sotto-sezione Allergie: entry/act/entryRelationship/observation deve contenere almeno un elemento 'participant'</assert>				
			<assert test="(count(hl7:act/hl7:entryRelationship/hl7:observation/hl7:entryRelationship[@typeCode='SUBJ'][hl7:observation])&lt;=1)"
			>ERRORE-b58| Sotto-sezione Allergie: entry/act/entryRelationship/observation deve contenere solo un elemento 'entryRelationship/observation' relativo alla Criticità</assert>
			<assert test="(count(hl7:act/hl7:entryRelationship/hl7:observation/hl7:entryRelationship[@typeCode='REFR'])&lt;=1)"
			>ERRORE-b59| Sotto-sezione Allergie: entry/act/entryRelationship/observation deve contenere solo un elemento 'entryRelationship/observation' relativo allo Stato dell'allergia</assert>
			<assert test="(count(hl7:act/hl7:entryRelationship/hl7:observation/hl7:entryRelationship[@typeCode='SUBJ'][hl7:act])&lt;=1)"
			>ERRORE-b60| Sotto-sezione Allergie: entry/act/entryRelationship/observation deve contenere solo un elemento 'entryRelationship/act' relativo ai Commenti</assert>
		</rule>
		
			<!--Sotto-sezione Allergie: descrizione agente codificato(entry/act/entryRelationship/observation/participant)-->
		<rule context="hl7:ClinicalDocument/hl7:component/hl7:structuredBody/hl7:component/hl7:section[hl7:code[@code='11329-0']]/hl7:component/hl7:section[hl7:code[@code='48765-2']]/hl7:entry/hl7:act/hl7:entryRelationship/hl7:observation/hl7:participant">
		
			<assert test="count(hl7:participantRole/hl7:playingEntity/hl7:code[@codeSystem='2.16.840.1.113883.6.73'])=1 or
			count(hl7:participantRole/hl7:playingEntity/hl7:code[@codeSystem='2.16.840.1.113883.2.9.6.1.5'])=1 or
			count(hl7:participantRole/hl7:playingEntity/hl7:code[@codeSystem='2.16.840.1.113883.2.9.77.22.11.2'])=1"
			>ERRORE-b61| Sotto-sezione Allergie (descrizione agente codificato): l'elemento entry/act/entryRelationship/observation/participant/participantRole/playingEntity deve avere l'attributo code/@codeSystem valorizzato come segue:
			- 2.16.840.1.113883.6.73		codifica "WHO ATC"
			- 2.16.840.1.113883.2.9.6.1.5 		codifica "AIC"
			- 2.16.840.1.113883.2.9.77.22.11.2 	value set "AllergenNoDrugs" (- per le allergie non a farmaci –)
			</assert>
		</rule>
	
			<!--Sotto-sezione Allergie: descrizione reazione (entry/act/entryRelationship/observation/entryRelationship[MFST]/observation)-->
		<rule context="hl7:ClinicalDocument/hl7:component/hl7:structuredBody/hl7:component/hl7:section[hl7:code[@code='11329-0']]/hl7:component/hl7:section[hl7:code[@code='48765-2']]/hl7:entry/hl7:act/hl7:entryRelationship/hl7:observation/hl7:entryRelationship[@typeCode='MFST']">	
			
			<assert test="count(hl7:observation/hl7:code[@code='75321-0'][@codeSystem='2.16.840.1.113883.6.1'])=1"
			>ERRORE-b62| Sotto-sezione Allergie (descrizione reazione): entry/act/entryRelationship/observation/entryRelationship/observation deve avere un elemento 'code' con gli attributi @code=75321-0' e @codeSystem='2.16.840.1.113883.6.1' </assert>
			<assert test="count(hl7:observation/hl7:effectiveTime/hl7:low)=1"
			>ERRORE-b63| Sotto-sezione Allergie (descrizione reazione): entry/act/entryRelationship/observation/entryRelationship/observation deve avere un 'effectiveTime' che contiene l'elemento 'low' valorizzato </assert>
			<!--Descrizione reazione codificata-->
			<assert test="count(hl7:observation/hl7:value)=0 or	count(hl7:observation/hl7:value[@xsi:type='CD'])=1"
			>ERRORE-b64| Sotto-sezione Allergie (descrizione reazione): l'elemento entry/act/entryRelationship/observation/entryRelationship/observation/value deve avere l'attributo @xsi:type='CD'</assert>
			<assert test="count(hl7:observation/hl7:value)=0 or
						(count(hl7:observation/hl7:value/@code)=0 and count(hl7:observation/hl7:value/hl7:originalText/hl7:reference)=1) or
						(count(hl7:observation/hl7:value/@code)=1 and (count(hl7:observation/hl7:value/hl7:originalText/hl7:reference)&lt;=1))"
			>ERRORE-b65| Sotto-sezione Allergie (descrizione reazione): nel caso di entry/act/entryRelationship/observation/entryRelationship/observation/value non codificato, questi deve avere l'elemento originalText/reference valorizzato</assert>
			<assert test="count(hl7:observation/hl7:value/@code)=0 or
						(count(hl7:observation/hl7:value[@codeSystem='2.16.840.1.113883.2.9.77.22.11.4'])=1 or 
						count(hl7:observation/hl7:value[@codeSystem='2.16.840.1.113883.2.9.77.22.11.3'])=1 or 
						count(hl7:observation/hl7:value[@codeSystem='2.16.840.1.113883.6.103'])=1)"
			>ERRORE-b66| Sotto-sezione Allergie (descrizione reazione): entry/act/entryRelationship/observation/entryRelationship/observation/value deve avere l'attributo @codeSystem valorizzato come segue:
			- "2.16.840.1.113883.2.9.77.22.11.4" per le reazioni da allergia 
			- "2.16.840.1.113883.2.9.77.22.11.3" per le reazioni da intolleranza 
			- "2.16.840.1.113883.6.103" per le reazioni riportate nel sistema ICD-9-CM
			</assert>
		</rule>
		
			<!--Sotto-sezione Allergie: Criticità dell'allergia o intolleranza (entry/act/entryRelationship/observation/entryRelationship[SUBJ]/observation)-->
		<rule context="hl7:ClinicalDocument/hl7:component/hl7:structuredBody/hl7:component/hl7:section[hl7:code[@code='11329-0']]/hl7:component/hl7:section[hl7:code[@code='48765-2']]/hl7:entry/hl7:act/hl7:entryRelationship/hl7:observation/hl7:entryRelationship[@typeCode='SUBJ'][hl7:observation]">
					
			<assert test="count(hl7:observation/hl7:code[@codeSystem='2.16.840.1.113883.5.4'])=1"
			>ERRORE-b67| Sotto-sezione Allergie (criticità dell'allergia o intolleranza): entry/act/entryRelationship/observation/entryRelationship/observation/code deve avere l'attributo @codesystem='2.16.840.1.113883.5.4'</assert>
			<assert test="count(hl7:observation/hl7:text)=0 or count(hl7:observation/hl7:text/hl7:reference/@value)=1"
			>ERRORE-b68| Sotto-sezione Allergie (criticità dell'allergia o intolleranza): entry/act/entryRelationship/observation/entryRelationship/observation/text/reference/value deve essere valorizzato con l'URI che punta alla descrizione della severità nel narrative block della sezione </assert>	
			<assert test="count(hl7:observation/hl7:value[@codeSystem='2.16.840.1.113883.5.1063'])=1"
			>ERRORE-b69| Sotto-sezione Allergie (criticità dell'allergia o intolleranza): entry/act/entryRelationship/observation/entryRelationship/observation/value deve essere valorizzato secondo il value set "CriticalityObservation" @codesystem='2.16.840.1.113883.5.1063'</assert>	
		</rule>
			
			<!--Sotto-sezione Allergie: Stato dell'Allergia (entry/act/entryRelationship/observation/entryRelationship[REFR]/observation)-->
		<rule context="hl7:ClinicalDocument/hl7:component/hl7:structuredBody/hl7:component/hl7:section[hl7:code[@code='11329-0']]/hl7:component/hl7:section[hl7:code[@code='48765-2']]/hl7:entry/hl7:act/hl7:entryRelationship/hl7:observation/hl7:entryRelationship[@typeCode='REFR']">
			
			<assert test="count(hl7:observation/hl7:code[@code='33999-4'][@codeSystem='2.16.840.1.113883.6.1'])=1"
			>ERRORE-b70| Sotto-sezione Allergie (stato dell'allergia): entry/act/entryRelationship/observation/entryRelationship/observation/code deve avere l'attributo @code='33999-4' e @codesystem='2.16.840.1.113883.6.1'</assert>
			<assert test="count(hl7:observation/hl7:value[@codeSystem='2.16.840.1.113883.6.1'])=1 or
			count(hl7:observation/hl7:value[@codeSystem='2.16.840.1.113883.2.9.77.22.11.11'])=1"
			>ERRORE-b71| Sotto-sezione Allergie (stato dell'allergia): entry/act/entryRelationship/observation/entryRelationship/observation/value deve essere valorizzato secondo il value set "StatoClinicoAllergia"</assert>
			
			<assert test="count(hl7:observation/hl7:value[@code='LA16666-2'])=1 or
			count(hl7:observation/hl7:value[@code='LA18632-2'])=1"
			>ERRORE-b71a| Sotto-sezione Allergie (stato dell'allergia): il @code di entry/act/entryRelationship/observation/entryRelationship/observation/value deve essere valorizzato con:
			- "LA16666-2" se "active";
			- "LA18632-2" se "inactive".
			</assert>
		</rule>
	
			<!--Sotto-sezione Allergie: commenti (entry/act/entryRelationship/observation/entryRelationship/act)-->	
		<rule context="hl7:ClinicalDocument/hl7:component/hl7:structuredBody/hl7:component/hl7:section[hl7:code[@code='11329-0']]/hl7:component/hl7:section[hl7:code[@code='48765-2']]/hl7:entry/hl7:act/hl7:entryRelationship/hl7:observation/hl7:entryRelationship[@typeCode='SUBJ'][hl7:act]">
			
			<assert test="count(hl7:act/hl7:code[@code='48767-8'][@codeSystem='2.16.840.1.113883.6.1'])=1"
			>ERRORE-b72| Sotto-sezione Allergie (commenti): l'elemento entry/act/entryRelationship/observation/entryRelationship/act deve contenere l'elemento act con attributi @code='48767-8' e @codeSystem='2.16.840.1.113883.6.1'</assert>
		</rule>
		
		<!--4.2-->
		<!--Sotto-sezione Terapia farmacologica in atto-->
		<rule context="hl7:ClinicalDocument/hl7:component/hl7:structuredBody/hl7:component/hl7:section[hl7:code[@code='11329-0']]/hl7:component/hl7:section[hl7:code[@code='10160-0']]/hl7:entry">
		
			<assert test="count(hl7:substanceAdministration[@classCode='SBADM'][@moodCode='EVN'])=1"
			>ERRORE-b73| Sotto-sezione Terapia farmacologica in atto: la sezione deve contenere un elemento substanceAdministration con attributi @classCode='SBADM' e @moodCode='EVN'</assert>
			<assert test="count(hl7:substanceAdministration/hl7:consumable/hl7:manufacturedProduct/hl7:manufacturedMaterial)=1"
			>ERRORE-b74| Sotto-sezione Terapia farmacologica in atto: la sezione deve contenere un elemento entry/substanceAdministration/consumable/manufacturedProduct/manufacturedMaterial </assert>
			
			<let name="man_mat" value="hl7:substanceAdministration/hl7:consumable/hl7:manufacturedProduct/hl7:manufacturedMaterial"/>
			<assert test="count($man_mat/hl7:code[@codeSystem='2.16.840.1.113883.6.73'])=1 or 
			count($man_mat/hl7:code[@codeSystem='2.16.840.1.113883.2.9.6.1.5'])=1 or
			count($man_mat/hl7:code[@codeSystem='2.16.840.1.113883.2.9.6.1.51'])=1"
			>ERRORE-b75| Sotto-sezione Terapia farmacologica in atto: l'elemento entry/substanceAdministration/consumable/manufacturedProduct/manufacturedMaterial deve contenere un elemento 'code' il cui @codeSystem deve essere valorizzato secondo i seguenti sistemi di codifica:
			@codeSystem='2.16.840.1.113883.6.73'		(ATC)
			@codeSystem='2.16.840.1.113883.2.9.6.1.5' 	(AIC)
			@codeSystem='2.16.840.1.113883.2.9.6.1.51' 	(GE)
			</assert>
			<assert test="count($man_mat/hl7:code/hl7:translation)=0 or 
			(count($man_mat/hl7:code[@codeSystem='2.16.840.1.113883.6.73']/hl7:translation[@codeSystem='2.16.840.1.113883.2.9.6.1.5'])=1 or 
			count($man_mat/hl7:code[@codeSystem='2.16.840.1.113883.6.73']/hl7:translation[@codeSystem='2.16.840.1.113883.2.9.6.1.51'])=1 or
			count($man_mat/hl7:code[@codeSystem='2.16.840.1.113883.2.9.6.1.5']/hl7:translation[@codeSystem='2.16.840.1.113883.6.73'])=1 or 
			count($man_mat/hl7:code[@codeSystem='2.16.840.1.113883.2.9.6.1.5']/hl7:translation[@codeSystem='2.16.840.1.113883.2.9.6.1.51'])=1 or
			count($man_mat/hl7:code[@codeSystem='2.16.840.1.113883.2.9.6.1.51']/hl7:translation[@codeSystem='2.16.840.1.113883.6.73'])=1 or 
			count($man_mat/hl7:code[@codeSystem='2.16.840.1.113883.2.9.6.1.51']/hl7:translation[@codeSystem='2.16.840.1.113883.2.9.6.1.5'])=1)"
			>ERRORE-b76| Sotto-sezione Terapia farmacologica in atto: l'elemento entry/substanceAdministration/consumable/manufacturedProduct/manufacturedMaterial/code/translation deve essere valorizzato secondo i seguenti sistemi di codifica:
			@codeSystem='2.16.840.1.113883.6.73'		(ATC)
			@codeSystem='2.16.840.1.113883.2.9.6.1.5' 	(AIC)
			@codeSystem='2.16.840.1.113883.2.9.6.1.51' 	(GE)</assert>
		</rule>
		
		<!--5-->
		<!--Sezione Precedenti esami eseguiti-->
		<rule context="hl7:ClinicalDocument/hl7:component/hl7:structuredBody/hl7:component/hl7:section[hl7:code[@code='30954-2']]/hl7:entry">
			
			<assert test="count(hl7:observation)=1"
			>ERRORE-b77| Sezione Precedenti esami eseguiti: l'elemento entry DEVE contenere una observation</assert>
			<report test="not(count(hl7:observation/hl7:code[@codeSystem='2.16.840.1.113883.6.1'])=1) and 
			not(count(hl7:observation/hl7:code[@codeSystem='2.16.840.1.113883.6.103'])=1)"
			>W003 | Sezione Esami eseguiti durante il ricovero: l'entry/observation/code può essere valorizzato secondo i sistemi di codifica
			LOINC @codeSystem='2.16.840.1.113883.6.1'
			ICD-9-CM @codeSystem='2.16.840.1.113883.6.103'</report>
		</rule>	

		<!--7-->
		<!--Sezione prestazioni: dettaglio prestazioni amministrative eseguite (entry/act)-->
		<rule context="hl7:ClinicalDocument/hl7:component/hl7:structuredBody/hl7:component/hl7:section[hl7:code[@code='62387-6']]/hl7:entry">
			
			<assert test="count(hl7:act)=1"
			>ERRORE-b78| Sezione Prestazioni: l'elemento entry DEVE contenere un elemento act</assert>
			<assert test="count(hl7:act[@classCode='ACT'][@moodCode='EVN'])=1"
			>ERRORE-b79| Sezione Prestazioni: l'elemento entry/act DEVE avere gli attributi valorizzati @classCode="ACT" e @moodCode="EVN"</assert>
			<assert test="count(hl7:act/hl7:effectiveTime/@value)=1"
			>ERRORE-b80| Sezione Prestazioni: l'elemento entry/act DEVE contenere l'elemento effectiveTime valorizzato con l'attributo @value</assert>
		</rule>
		
		<!--Sezione prestazioni: procedura operativa eseguita (entry/act/entryRelationship)-->
		<rule context="hl7:ClinicalDocument/hl7:component/hl7:structuredBody/hl7:component/hl7:section[hl7:code[@code='62387-6']]/hl7:entry/hl7:act/hl7:entryRelationship">

			<assert test="count(hl7:procedure)=1 or count(hl7:substanceAdministration)=1 or count(hl7:observation)=1 or count(hl7:act)=1"
			>ERRORE-b81| Sezione Prestazioni: l'elemento entry/act/entryRelationship deve avere uno dei seguenti sotto elementi:
			- 'procedure': per procedure diagnostiche invasive, interventistiche, chirurgiche;
			- 'substanceAdministration': per somministrazioni farmaceutiche;
			- 'observation': per osservazioni eseguite durante la prestazione;
			- 'act': per altre procedure che non ricadono nei casi precedenti.
			</assert>
			<assert test="count(hl7:procedure)=0 or count(hl7:procedure/hl7:code)=1"
			>ERRORE-b82| Sezione Prestazioni: l'elemento entry/act/entryRelationship/procedure deve contenere l'elemento code </assert>
			<assert test="count(hl7:substanceAdministration)=0 or count(hl7:substanceAdministration/hl7:code)=1"
			>ERRORE-b83| Sezione Prestazioni: l'elemento entry/act/entryRelationship/substanceAdministration deve contenere l'elemento code </assert>
		</rule>
		
		<!--10-->
		<!--Sezione Diagnosi-->
		<rule context="hl7:ClinicalDocument/hl7:component/hl7:structuredBody/hl7:component/hl7:section[hl7:code[@code='29548-5']]/hl7:entry">
			
			<assert test="count(hl7:observation)=1"
			>ERRORE-b84| Sezione Diagnosi: l'elemento entry DEVE contenere un elemento observation</assert>
			<assert test="count(hl7:observation/hl7:code[@code='29308-4'][@codeSystem='2.16.840.1.113883.6.1'])=1"
			>ERRORE-b85| Sezione Diagnosi: l'elemento entry/observation DEVE contenere l'elemento code valorizzato con gli attributi @code='29308-4' e @codeSystem='2.16.840.1.113883.6.1'</assert>
			<assert test="count(hl7:observation/hl7:value)=1"
			>ERRORE-b86| Sezione Diagnosi: l'elemento entry/observation DEVE contenere l'elemento value </assert>
		</rule>
		
		<!--13-->
		<!--Sezione Accertamenti e controlli consigliati-->
		<rule context="hl7:ClinicalDocument/hl7:component/hl7:structuredBody/hl7:component/hl7:section[hl7:code[@code='80615-8']]/hl7:entry">
			
			<assert test="count(hl7:act)=1"
			>ERRORE-b87| Sezione Accertamenti e controlli consigliati: l'elemento entry DEVE contenere l'elemento act </assert>
			<assert test="count(hl7:act[@classCode='ACT'][@moodCode='PRP'])=1"
			>ERRORE-b88| Sezione Accertamenti e controlli consigliati: l'elemento entry/act DEVE avere gli attributi valorizzati @classCode="ACT" e @moodCode="PRP" </assert>
		</rule>
		
		<!--14-->
		<!--Sezione Terapia Farmacologica Consigliata-->
		<rule context="hl7:ClinicalDocument/hl7:component/hl7:structuredBody/hl7:component/hl7:section[hl7:code[@code='93341-6']]/hl7:entry">
			
			<assert test="count(hl7:substanceAdministration)=1"
			>ERRORE-b89| Sezione Terapia farmacologica consigliata: l'elemento entry deve contenere un elemento substanceAdministration </assert>
			<assert test="count(hl7:substanceAdministration[@classCode='SBADM'][@moodCode='PRP'])=1"
			>ERRORE-b90| Sezione Terapia Farmacologica Cosnigliata: l'elemento entry/act DEVE avere gli attributi valorizzati @classCode="SBADM" e @moodCode="PRP" </assert>
			<assert test="count(hl7:substanceAdministration/hl7:effectiveTime/hl7:low)=1"
			>ERRORE-b91| Sezione Terapia farmacologica consigliata: l'elemento entry/substanceAdministration DEVE contenere l'elemento effectiveTime e DEVE avere l'elemento 'low' valorizzato </assert>
			<assert test="count(hl7:substanceAdministration/hl7:consumable/hl7:manufacturedProduct/hl7:manufacturedMaterial/hl7:code[@codeSystem='2.16.840.1.113883.2.9.6.1.5'])=1 or
			count(hl7:substanceAdministration/hl7:consumable/hl7:manufacturedProduct/hl7:manufacturedMaterial/hl7:code[@codeSystem='2.16.840.1.113883.6.73'])=1 or 
			count(hl7:substanceAdministration/hl7:consumable/hl7:manufacturedProduct/hl7:manufacturedMaterial/hl7:code[@codeSystem='2.16.840.1.113883.2.9.6.1.51'])=1"
			>ERRORE-b92|Sezione Terapia farmacologica consigliata: l'elemento entry/substanceAdministration/consumable/manufacturedProduct/manufacturedMaterial/code DEVE avere l'attributo "@codeSystem" valorizzato come segue:
			- 2.16.840.1.113883.6.73 		codifica "ATC";
			- 2.16.840.1.113883.2.9.6.1.5 	codifica "AIC";
			- 2.16.840.1.113883.2.9.6.1.51	codifica "GE".
			</assert>
			<let name="trans_vl" value="hl7:substanceAdministration/hl7:consumable/hl7:manufacturedProduct/hl7:manufacturedMaterial"/>
			<assert test="count($trans_vl/hl7:code/hl7:translation)=0 or 
			(count($trans_vl/hl7:code[@codeSystem='2.16.840.1.113883.6.73']/hl7:translation[@codeSystem='2.16.840.1.113883.2.9.6.1.5'])=1 or 
			count($trans_vl/hl7:code[@codeSystem='2.16.840.1.113883.6.73']/hl7:translation[@codeSystem='2.16.840.1.113883.2.9.6.1.51'])=1 or
			count($trans_vl/hl7:code[@codeSystem='2.16.840.1.113883.2.9.6.1.5']/hl7:translation[@codeSystem='2.16.840.1.113883.6.73'])=1 or 
			count($trans_vl/hl7:code[@codeSystem='2.16.840.1.113883.2.9.6.1.5']/hl7:translation[@codeSystem='2.16.840.1.113883.2.9.6.1.51'])=1 or
			count($trans_vl/hl7:code[@codeSystem='2.16.840.1.113883.2.9.6.1.51']/hl7:translation[@codeSystem='2.16.840.1.113883.6.73'])=1 or 
			count($trans_vl/hl7:code[@codeSystem='2.16.840.1.113883.2.9.6.1.51']/hl7:translation[@codeSystem='2.16.840.1.113883.2.9.6.1.5'])=1)"
			>ERRORE-b93| Sezione Terapia farmacologica consigliata: l'elemento entry/substanceAdministration/consumable/manufacturedProduct/manufacturedMaterial/code/translation deve essere valorizzato secondo i seguenti sistemi di codifica:
			@codeSystem='2.16.840.1.113883.6.73'		(ATC)
			@codeSystem='2.16.840.1.113883.2.9.6.1.5' 	(AIC)
			@codeSystem='2.16.840.1.113883.2.9.6.1.51' 	(GE)</assert>	
		</rule>	
		
		<!--Sezione Terapia Farmacologica Consigliata (entry/substanceAdministration/entryRelationship)-->
		<rule context="hl7:ClinicalDocument/hl7:component/hl7:structuredBody/hl7:component/hl7:section[hl7:code[@code='93341-6']]/hl7:entry/hl7:substanceAdministration/hl7:entryRelationship">

			<assert test="count(hl7:observation)=1 or count(hl7:supply)=1"
			>ERRORE-b94| Sezione Terapia farmacologica consigliata: l'elemento entry/substanceAdministration/entryRelationship deve avere uno dei seguenti sotto elementi:
			- 'observation': per informazioni relative a grammatura e quantità della confezione;
			- 'supply': per il numero di confezioni prescritte;
			</assert>
			<assert test="count(hl7:observation)=0 or count(hl7:observation/hl7:value)=1"
			>ERRORE-b95| Sezione Terapia farmacologica consigliata: l'elemento entry/substanceAdministration/entryRelationship/observation DEVE avere l'elemento 'value' valorizzato.</assert>
			<assert test="count(hl7:supply)=0 or count(hl7:supply/hl7:quantity)=1"
			>ERRORE-b96| Sezione Terapia farmacologica consigliata: l'elemento entry/substanceAdministration/entryRelationship/supply deve avere l'elemento 'quantity' valorizzato</assert>
		</rule>
		
		<!--Sezione Terapia Farmacologica Consigliata: controllo participant (entry/substanceAdministration/participant)-->
		<rule context="hl7:ClinicalDocument/hl7:component/hl7:structuredBody/hl7:component/hl7:section[hl7:code[@code='93341-6']]/hl7:entry/hl7:substanceAdministration/hl7:participant">
			
			<assert test="count(hl7:participantRole/hl7:id)&gt;=1"
			>ERRORE-b97| Sezione Terapia Farmacologica consigliata: se presente entry/substanceAdministration/participant, DEVE contenere almeno un elemento participantRole/id </assert>
			<assert test="count(hl7:participantRole/hl7:playingEntity/hl7:name/hl7:given)=1 and count(hl7:participantRole/hl7:playingEntity/hl7:name/hl7:family)=1"
			>ERRORE-b98| Sezione Terapia Farmacologica consigliata: se presente entry/substanceAdministration/participant, DEVE contenere l'elemento participant/playingEntity/name con i sotto-elementi given e family </assert>
		</rule>	
		
	</pattern>
</schema>
",
      "subType": "00"
    }
  },
  "version": "3.1",
  "template_id_root": "2.16.840.1.113883.2.9.10.1.9.1",
  "last_update_date": {
    "$date": "2023-01-16T22:59:26.701Z"
  },
  "deleted": false,
  "last_sync": {
    "$date": "2023-01-16T23:00:03.543Z"
  }
},{
  "_id": {
    "$oid": "63c5d6d1d370ce753aa6817a"
  },
  "name_schematron": "schematron_singola_VACC v2.4.sch",
  "content_schematron": {
    "$binary": {
      "base64": "<?xml version="1.0" encoding="UTF-8"?>
<!-- schematron versione:2.4 -->
<schema xmlns="http://purl.oclc.org/dsdl/schematron" 
		xmlns:cda="urn:hl7-org:v3"
        xmlns:iso="http://purl.oclc.org/dsdl/schematron"
        xmlns:sch="http://www.ascc.net/xml/schematron"
        queryBinding="xslt2">
	<title>Schematron Scheda della Singola Vaccinazione 1.1 </title>
	<ns prefix="hl7" uri="urn:hl7-org:v3"/>
	<ns prefix="xsi" uri="http://www.w3.org/2001/XMLSchema-instance"/>	
	<pattern id="all">
	
	
	<!--_______________________________________________________________HEADER _____________________________________________________________________-->


	<!-- ClinicalDocument -->
		<rule context="hl7:ClinicalDocument">
	        <!--Controllo realmCode-->	
			<assert test="count(hl7:realmCode)>=1"
			>ERRORE-1| L'elemento <name/> DEVE avere almeno un elemento 'realmCode'</assert>
			<assert test="count(hl7:realmCode[@code='IT'])= 1"
			>ERRORE-2| L'elemento <name/>/realmCode DEVE avere l'attributo @code valorizzato come 'IT'</assert>
			
			<!--Controllo templateId-->
			<let name="num_tid" value="count(hl7:templateId)"/>
			<assert test="$num_tid >= 1"
			>ERRORE-2| L'elemento <name/> DEVE avere almeno un elemento di tipo 'templateId'</assert>
			<assert test="count(hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.11.1.1'])= 1 and  count(hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.11.1.1']/@extension)= 1"
			>ERRORE-4| Almeno un elemento <name/>/templateId DEVE essere valorizzato attraverso l'attributo @root='2.16.840.1.113883.2.9.10.1.11.1.1', associato all'attributo @extension che  indica la versione a cui il templateId fa riferimento</assert>
			
			<!--Controllo code-->	
			<assert test="count(hl7:code[@code='87273-9'][@codeSystem='2.16.840.1.113883.6.1']) = 1"
			>ERRORE-5| L'elemento <name/>/code DEVE essere valorizzato con l'attributo @code='87273-9' e il @codeSystem='2.16.840.1.113883.6.1'</assert>
	
			<report test="not(count(hl7:code[@codeSystemName='LOINC'])=1) or not(count(hl7:code[@displayName='Immunization Note'])=1 or
			count(hl7:code[@displayName='IMMUNIZATION NOTE'])=1 or count(hl7:code[@displayName='Immunization note'])=1 or count(hl7:code[@displayName=' Immunization note'])=1)"
			>W001| Si raccomanda di valorizzare gli attributi dell'elemento <name/>/code nel seguente modo: @codeSystemName ='LOINC' e @displayName ='Immunization Note'--> </report>
			
			<!--Controllo confidentialityCode-->
			<assert test="(count(hl7:confidentialityCode[@code='N'][@codeSystem='2.16.840.1.113883.5.25'])= 1) or 
			(count(hl7:confidentialityCode[@code='V'][@codeSystem='2.16.840.1.113883.5.25'])= 1)"
			>ERRORE-6| L'elemento <name/>/confidentialityCode DEVE avere l'attributo @code valorizzato con 'N' o 'V', e il @codeSystem='2.16.840.1.113883.5.25'</assert>
			
			<!--Controllo languageCode-->	
			<assert test="count(hl7:languageCode)=1"
			>ERRORE-7| L'elemento <name/> DEVE contenere un elemento 'languageCode' </assert>
			
			<!--Controllo incrociato tra setId-versionNumber e relatedDocument-->
			<let name="versionNumber" value="hl7:versionNumber/@value"/>
			<assert test="(string(number($versionNumber)) = 'NaN') or
					($versionNumber= 1 and hl7:id/@root = hl7:setId/@root and hl7:id/@extension = hl7:setId/@extension) or
					($versionNumber!= '1' and hl7:id/@root = hl7:setId/@root and hl7:id/@extension != hl7:setId/@extension) or
					(hl7:id/@root != hl7:setId/@root)"
			>ERRORE-8| Se ClinicalDocument.id e ClinicalDocument.setId usano lo stesso dominio di identificazione (@root identico) allora l’attributo @extension del ClinicalDocument.id 
			deve essere diverso da quello del ClinicalDocument.setId a meno che ClinicalDocument.versionNumber non sia uguale ad 1; cioè i valori di setId ed id per un documento clinico possono coincidere solo per la prima versione di un documento</assert>
			
			<assert test="(string(number($versionNumber)) ='NaN') or
						  ($versionNumber=1) or 
						  (($versionNumber &gt;1) and count(hl7:relatedDocument)=1)"
			>ERRORE-9| Se l'attributo <name/>/versionNumber/@value è maggiore di 1, l'elemento <name/>  deve contenere un elemento di tipo 'relatedDocument'</assert>
			
			<!--Controllo recordTarget-->
			<assert test="count(hl7:recordTarget)=1"
			>ERRORE-10| L'elemento <name/> DEVE contenere un solo elemento 'recordTarget' </assert>
			
            <!--Controllo recordTarget/patientRole/id-->
			<assert test="count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.4.3.2'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.4.3.7'])=1 or 
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.4.3.3'])=1 or 
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.4.3.18'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.4.3.17'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.4.3.15'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.2.10.4.1'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.2.20.4.1'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.2.30.4.1'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.2.41.4.1'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.2.42.4.1'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.2.50.4.1'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.2.60.4.1'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.2.70.4.1'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.2.80.4.1'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.2.90.4.1'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.2.100.4.1'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.2.110.4.1'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.2.120.4.1'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.2.130.4.1'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.2.140.4.1'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.2.150.4.1'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.2.160.4.1'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.2.170.4.1'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.2.180.4.1'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.2.190.4.1'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.2.200.4.1'])=1"
			>ERRORE-11a| L'elemento <name/>/recordTarget/patientRole/id  deve avere l'attributo @root valorizzato tramite una  delle seguenti identificatori Nazionanli:
			CF 2.16.840.1.113883.2.9.4.3.2
			TEAM 2.16.840.1.113883.2.9.4.3.7 o 2.16.840.1.113883.2.9.4.3.3
			ENI 2.16.840.1.113883.2.9.4.3.18
			STP 2.16.840.1.113883.2.9.4.3.17
			ANA 2.16.840.1.113883.2.9.4.3.15
			Oppure tramite gli identificatori regionali generati per rappresentare l'id del paziente.
			</assert>
			
			<!--Controllo recordTarget/patientRole/addr-->
			<let name="num_addr" value="count(hl7:recordTarget/hl7:patientRole/hl7:addr)"/>
			<assert test="$num_addr=0 or (count(hl7:recordTarget/hl7:patientRole/hl7:addr/hl7:country)=$num_addr and 
			count(hl7:recordTarget/hl7:patientRole/hl7:addr/hl7:city)=$num_addr and 
			count(hl7:recordTarget/hl7:patientRole/hl7:addr/hl7:streetAddressLine)=$num_addr)"
			>ERRORE-11| L'elemento <name/>/recordTarget/patientRole/addr DEVE riportare i sotto-elementi 'country', 'city' e 'streetAddressLine' </assert>
			
		    <!--Controllo recordTarget/patientRole/patient/name-->
			<let name="patient" value="hl7:recordTarget/hl7:patientRole/hl7:patient"/>
			<assert test="count($patient)=1 "
			>ERRORE-12| L'elemento <name/>/recordTaget/patientRole DEVE contenere l'elemento patient</assert>
			<assert test="count($patient)=0 or count($patient/hl7:name)=1"
			>ERRORE-13| L'elemento <name/>/recordTaget/patientRole/patient DEVE contenere l'elemento 'name'</assert>
			<assert test="count($patient)=0 or (count($patient/hl7:name/hl7:given)=1 and count($patient/hl7:name/hl7:family)=1)"
			>ERRORE-14| L'elemento <name/>/recordTaget/patientRole/patient/name DEVE riportare gli elementi 'given' e 'family'</assert>
			
			<!--Controllo recordTarget/patientRole/patient/administrativeGenderCode-->
			<let name="genderOID" value="hl7:recordTarget/hl7:patientRole/hl7:patient/hl7:administrativeGenderCode/@codeSystem"/>
			
			<assert test="count($patient)=0 or count(hl7:recordTarget/hl7:patientRole/hl7:patient/hl7:administrativeGenderCode)=1"
			>ERRORE-15| L'attributo <name/>/recordTarget/patientRole/patient DEVE contenere l'elemento administrativeGenderCode </assert>
			<assert test="count($patient)=0 or $genderOID='2.16.840.1.113883.5.1'"
			>ERRORE-16| L'OID assegnato all'attributo <name/>/recordTarget/patientRole/patient/administrativeGenderCode/@codeSystem='<value-of select="$genderOID"/>' non è corretto. L'attributo DEVE essere valorizzato con '2.16.840.1.113883.5.1' </assert>
			
			
			<!--Controllo recordTarget/patientRole/patient/birthTime-->
			<assert test="count($patient)=0 or
			(count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.4.3.2' or 
			@root='2.16.840.1.113883.2.9.4.3.7' or @root='2.16.840.1.113883.2.9.4.3.3' or 
			@root='2.16.840.1.113883.2.9.4.3.17'])=0) or 
			count(hl7:recordTarget/hl7:patientRole/hl7:patient/hl7:birthTime)=1"
			>ERRORE-17| L'elemento <name/>/recordTaget/patientRole/patient DEVE riportare un elemento 'birthTime'</assert>
			
			
			<!--Controllo recordTarget/patientRole/patient/birthplace/place/addr-->
			<assert test="count(hl7:recordTarget/hl7:patientRole/hl7:patient/hl7:birthplace)=0 or 
			count(hl7:recordTarget/hl7:patientRole/hl7:patient/hl7:birthplace/hl7:place/hl7:addr)=1"
			>ERRORE-18| L'elemento <name/>/recordTarget/patientRole/patient/birthplace DEVE contenere un elemento place/addr </assert>	
			
						
			
		    <!--Controllo ClinicalDocument/custodian/assignedCustodian/representedCustodianOrganization-->
			<assert test="count(hl7:custodian/hl7:assignedCustodian/hl7:representedCustodianOrganization/hl7:name)=1"
			>ERRORE-23| <name/>/custodian/assignedCustodian/representedCustodianOrganization deve contenere un elemento 'name'</assert>
			
			<let name="num_addr_cust" value="count(hl7:custodian/hl7:assignedCustodian/hl7:representedCustodianOrganization/hl7:addr)"/>
			<let name="addr_cust" value="hl7:custodian/hl7:assignedCustodian/hl7:representedCustodianOrganization/hl7:addr"/>
			<assert test="$num_addr_cust=0 or (count($addr_cust/hl7:country)=$num_addr_cust and count($addr_cust/hl7:city)=$num_addr_cust and count($addr_cust/hl7:streetAddressLine)=$num_addr_cust)"
			>ERRORE-24| L'elemento <name/>/custodian/assignedCustodian/representedCustodianOrganization/addr DEVE riportare i sotto-elementi 'country','city' e 'streetAddressLine'</assert>
			
			
			<!--Controllo legalAuthenticator-->
			<assert test = "(count(hl7:legalAuthenticator)&lt;=1)" 
			>ERRORE-25| L'elemento <name/>/legalAuthenticator può essere presente una volta sola</assert>
			<assert test = "count(hl7:legalAuthenticator)=0 or count(hl7:legalAuthenticator/hl7:signatureCode[@code='S'])=1" 
			>ERRORE-26| L'elemento <name/>/legalAuthenticator/signatureCode deve essere valorizzato con il codice "S" </assert>
			<assert test = "count(hl7:legalAuthenticator)=0 or count(hl7:legalAuthenticator/hl7:assignedEntity/hl7:id[@root='2.16.840.1.113883.2.9.4.3.2'])=1"
			>ERRORE-27| L'elemento <name/>/legalAuthenticator/assignedEntity DEVE contenere almeno un elemento id valorizzato con l'attributo @root='2.16.840.1.113883.2.9.4.3.2'</assert>
			
			<assert test = "count(hl7:legalAuthenticator/hl7:assignedEntity/hl7:assignedPerson/hl7:name)=0
			or (count(hl7:legalAuthenticator/hl7:assignedEntity/hl7:assignedPerson/hl7:name/hl7:family)=1 and 
			count(hl7:legalAuthenticator/hl7:assignedEntity/hl7:assignedPerson/hl7:name/hl7:given)=1)"
			>ERRORE-28| L'elemento <name/>/legalAuthenticator/assignedEntity/assignedPerson/name DEVE riportare gli elementi 'given' e 'family'</assert>
				
			
		</rule>

		<!-- Controllo author-->
		<rule context="hl7:ClinicalDocument/hl7:author">
			<!--Controllo author/assignedAuthor/id-->
			<assert test="count(hl7:assignedAuthor/hl7:id/@nullFlavor)=1 or 
			count(hl7:assignedAuthor/hl7:id[@root='2.16.840.1.113883.2.9.4.3.2'])=1"
			>ERRORE-19| L'elemento <name/>/assignedAuthor DEVE contenere almeno un elemento 'id' con il relativo attributo @root='2.16.840.1.113883.2.9.4.3.2'</assert>
						

						
			<!--Controllo author/assignedAuthor/assignedPerson/name-->
			<let name="name_author" value="hl7:assignedAuthor/hl7:assignedPerson"/>
		
		    <assert test="count(hl7:assignedAuthor/hl7:id/@nullFlavor)=1 or count($name_author/hl7:name)=1"
			>ERRORE-20| L'elemento <name/>/assignedAuthor/assignedPerson DEVE avere l'elemento 'name' </assert>
			<assert test="count(hl7:assignedAuthor/hl7:id/@nullFlavor)=1 or count($name_author/hl7:name)=0 or
			(count($name_author/hl7:name/hl7:given)=1 and count($name_author/hl7:name/hl7:family)=1)"
			>ERRORE-21| L'elemento <name/>/assignedAuthor/assignedPerson/name DEVE avere gli elementi 'given' e 'family'</assert>
		
			<let name="num_addr_auth" value="count(/hl7:assignedAuthor/hl7:representedOrganization/hl7:addr)"/>
			<let name="addr_auth" value="hl7:assignedAuthor/hl7:representedOrganization/hl7:addr"/>
			<assert test="$num_addr_auth=0 or (count($addr_auth/hl7:country)=$num_addr_auth and
			count($addr_auth/hl7:city)=$num_addr_auth and 
			count($addr_auth/hl7:streetAddressLine)=$num_addr_auth)"
			>ERRORE-22| L'elemento <name/>/assignedAuthor/representedOrganization/addr DEVE riportare i sotto-elementi 'country','city' e 'streetAddressLine'</assert>
			
		</rule>
		
		<!-- Controllo participant-->
		<rule context="hl7:ClinicalDocument/hl7:participant">
			<assert test="count(hl7:associatedEntity/hl7:id)>=1"
			>ERRORE-29| L'elemento <name/>/associatedEntity deve contenere l'elemento 'id'</assert>
			<assert test="count(hl7:associatedEntity/hl7:associatedPerson)=0 or count(hl7:associatedEntity/hl7:associatedPerson/hl7:name)=1"
			>ERRORE-30| L'elemento <name/>/associatedEntity/associatedPerson deve contenere l'elemento 'name'</assert>
			<assert test="count(hl7:associatedEntity/hl7:associatedPerson)=0 
			or(count(hl7:associatedEntity/hl7:associatedPerson/hl7:name/hl7:family)=1 and count(hl7:associatedEntity/hl7:associatedPerson/hl7:name/hl7:given)=1)"
			>ERRORE-31| L'elemento <name/>/associatedEntity/associatedPerson/name deve contenere gli elementi 'given' e 'family'</assert>
			
		</rule>
		
	<!--__________________________________________________________CONTROLLI GENERICI________________________________________________________________-->


		<!--Controllo use Telecom-->
		<rule context="//hl7:telecom">
			<assert test="(count(@use)=1)"
			>ERRORE-32| L’elemento 'telecom' DEVE contenere l'attributo @use </assert>
		</rule>	
		
		<!-- Controllo formato: -->
		<!--campi Codice Fiscale: 16 cifre [A-Z0-9]{16} -->
		<rule context="//hl7:id[@root='2.16.840.1.113883.2.9.4.3.2']">
			<let name="CF" value="@extension"/>
			<assert test="matches(@extension, '[A-Z0-9]{16}') and string-length($CF)=16"
			>ERRORE-33| Il codice fiscale '<value-of select="$CF"/>' cittadino ed operatore deve essere costituito da 16 cifre [A-Z0-9]{16}</assert>
		</rule>
	
		<!--Controllo sugli attributi di observation-->
		<rule context="//hl7:observation">
			<let name="moodCd" value="@moodCode"/>
			<assert test="count(@classCode)=1"
			>ERRORE-34| L'attributo "@classCode" dell'elemento "observation" deve essere presente </assert>
			<assert test="$moodCd='EVN'"
			>ERRORE-35| L'attributo "@moodCode" dell'elemento "observation" deve essere valorizzato con "EVN" </assert>
		</rule>

		
		
		
		<!--___________________________________________________________________BODY__________________________________________________________________________-->
	
		
		
		<rule context="hl7:ClinicalDocument/hl7:component/hl7:structuredBody/hl7:component">
			<assert test="count(hl7:section[@classCode='DOCSECT'][@moodCode='EVN'])=1"
			>ERRORE-b1| La section DEVE contenere gli attributi @classCode='DOCSECT' @moodCode='EVN'.</assert>
			<assert test="count(hl7:section/hl7:templateId)=0 or count(hl7:section/hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.11.3.1'])=1"
			>ERRORE-b2| L'elemento section DEVE contenere un elemento 'templateId' valorizzato con l'attributo @root='2.16.840.1.113883.2.9.10.1.11.3.1' </assert>
			<assert test="count(hl7:section/hl7:code)=0 or count(hl7:section/hl7:code[@code='11369-6'][@codeSystem='2.16.840.1.113883.6.1'])=1"
			>ERRORE-b3| L'elemento section/code DEVE contenere gli attributi valorizzati nel seguente modo: @code='11369-6' e @codeSystem='2.16.840.1.113883.6.1'.</assert>
			<assert test="count(hl7:section/hl7:title)=1"
			>ERRORE-b4| L'elemento section DEVE contenere un elemento 'title'.</assert>
			<assert test="count(hl7:section/hl7:text)=1"
			>ERRORE-b5| L'elemento section DEVE contenere un elemento 'text'.</assert>
			<assert test="count(hl7:section/hl7:entry)=1"
			>ERRORE-b6| L'elemento section DEVE contenere un solo elemento 'entry' relativo ad uno dei seguenti casi:
			- "Dati Vaccinazione"
			- "Esonero/omissione o differimento".</assert>
		</rule>
		<!--controllo sulla entry-->
		
		<rule context="hl7:ClinicalDocument/hl7:component/hl7:structuredBody/hl7:component/hl7:section/hl7:entry">
			
			<assert test="count(hl7:substanceAdministration[@classCode='SBADM'][@moodCode='EVN'])=1"
			>ERRORE-b7| L'elemento entry/substanceAdministration DEVE avere gli attributi valorizzati con @classCode='SBADM' e @moodCode='EVN'.</assert>
			<assert test="count(hl7:substanceAdministration/hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.11.4.1'])=1 or 
			count(hl7:substanceAdministration/hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.11.4.2'])=1"
			>ERRORE-b8| L'elemento entry/substanceAdministration DEVE contenere un elemento 'templateId' valorizzato con uno dei seguenti modi:
			- @root='2.16.840.1.113883.2.9.10.1.11.4.1' per "Dati Vaccinazione"
			- @root='2.16.840.1.113883.2.9.10.1.11.4.2' per "Esonero/omissione o differimento".</assert>
			
			<!--Dati vaccinazione-->
			
			<assert test="count(hl7:substanceAdministration/hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.11.4.1'])=0 or 
			count(hl7:substanceAdministration[hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.11.4.1']]/hl7:statusCode[@code='completed'])=1"
			>ERRORE-b9| L'elemento entry/substanceAdministration DEVE contenere un elemento 'statusCode' valorizzato con l'attributo @code='completed'.</assert>
			<assert test="count(hl7:substanceAdministration/hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.11.4.1'])=0 or 
			count(hl7:substanceAdministration[hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.11.4.1']]/hl7:effectiveTime)=1"
			>ERRORE-b10| L'elemento entry/substanceAdministration DEVE contenere un elemento 'effectiveTime'.</assert>
			<assert test="count(hl7:substanceAdministration/hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.11.4.1'])=0 or 
			count(hl7:substanceAdministration[hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.11.4.1']]/hl7:consumable[@typeCode='CSM'])=1"
			>ERRORE-b11| L'elemento entry/substanceAdministration DEVE contenere un elemento 'consumable' con l'attributo @typeCode='CSM' valorizzato.</assert>
						
			<report test="not(count(hl7:substanceAdministration/hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.11.4.1'])=0) and 
			not(count(hl7:substanceAdministration[hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.11.4.1']]/hl7:routeCode)=1)"
			>W003| Si consiglia di valorizzare la via di somministrazione tramite l'elemento 'routeCode'.--> </report> 	
			<report test="not(count(hl7:substanceAdministration/hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.11.4.1'])=0) and 
			not(count(hl7:substanceAdministration[hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.11.4.1']]/hl7:approachSiteCode)=1)"
			>W004| Si consiglia di valorizzare la sede anatomica di somministrazione tramite l'elemento 'approachSiteCode' .--> </report>			
			<report test="not(count(hl7:substanceAdministration/hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.11.4.1'])=0) and 
			not(count(hl7:substanceAdministration[hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.11.4.1']]/hl7:doseQuantity)=1)"
			>W005| Si consiglia di valorizzare la dose somministrata tramite l'elemento 'doseQuantity'.--> </report>
			
			<let name="farma" value="hl7:substanceAdministration/hl7:consumable/hl7:manufacturedProduct/hl7:manufacturedMaterial"/>
			<assert test="(count($farma/hl7:code[@codeSystem='2.16.840.1.113883.2.9.6.1.5'])=1)"
			>ERRORE-b12|L'elemento entry/substanceAdministration/templateId[@root='2.16.840.1.113883.2.9.10.1.11.4.1'] se presente, DEVE contenere l'elemento consumable/manufacturedProduct/manufacturedMaterial/code valorizzato secondo i seguenti sistemi di codifica:
			- @codeSystem='2.16.840.1.113883.2.9.6.1.5' 	(AIC)
			</assert>		
			
			<!--Controllo incrociato tra code e translation-->
			<assert test="(count($farma/hl7:code/hl7:translation)=0 or 
			count($farma/hl7:code/hl7:translation[@codeSystem='2.16.840.1.113883.6.73'])=1)"
			>ERRORE-b13| L'elemento entry/substanceAdministration/consumable/manufacturedProduct/manufacturedMaterial/code/translation deve essere valorizzato secondo i seguenti sistemi di codifica:
			- @codeSystem='2.16.840.1.113883.6.73'		(ATC)
			</assert>
			<let name="consum" value="hl7:substanceAdministration[hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.11.4.1']]/hl7:consumable/hl7:manufacturedProduct"/>
			<assert test="(count($consum/hl7:manufacturerOrganization)=0 or
			count($consum/hl7:manufacturerOrganization/hl7:name)&gt;=1)"
			>ERRORE-b14| L'elemento entry/substanceAdministration/consumable/manufacturedProduct/manufacturerOrganization DEVE contenere almeno un elemento 'name'.</assert>
			
			<assert test="count(hl7:substanceAdministration/hl7:participant)=0 or (count(hl7:substanceAdministration/hl7:participant[@typeCode='LOC'])>=1)"
			>ERRORE-b15| L'elemento entry/substanceAdministration/participant DEVE essere valorizzato con l'attributo @typeCode='LOC'</assert>
			<assert test="count(hl7:substanceAdministration/hl7:participant/hl7:participantRole/@classCode)=0 or 
			(count(hl7:substanceAdministration/hl7:participant/hl7:participantRole[@classCode='ROL'])>=1)"
			>ERRORE-b16| L'elemento entry/substanceAdministration/participant/participantRole DEVE essere valorizzato con l'attributo @typeCode='ROL'</assert>
		
				<!--entryRelationship relativa al numero di dose-->
				<assert test="count(hl7:substanceAdministration/hl7:entryRelationship[@typeCode='SUBJ'][@inversionInd='true'])&lt;=1"
				>ERRORE-b17| L'elemento entry/substanceAdministration/entryRelationship relativo al "Numero di dose" può essere presente una volta sola.</assert>			
				
				<assert test="count(hl7:substanceAdministration/hl7:entryRelationship[@typeCode='SUBJ'][@inversionInd='true'])=0 or 
				count(hl7:substanceAdministration/hl7:entryRelationship[@typeCode='SUBJ'][@inversionInd='true']/hl7:observation/hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.11.4.3'])=1"
				>ERRORE-b18| L'elemento entry/substanceAdministration/entryRelationship/observation (Numero dose) DEVE contenere un elemento 'templateId' valorizzato con @root='2.16.840.1.113883.2.9.10.1.11.4.3'</assert>			
				<assert test="count(hl7:substanceAdministration/hl7:entryRelationship[@typeCode='SUBJ'][@inversionInd='true'])=0 or  
				count(hl7:substanceAdministration/hl7:entryRelationship[@typeCode='SUBJ']/hl7:observation/hl7:code[@code='30973-2'][@codeSystem='2.16.840.1.113883.6.1'])=1"
				>ERRORE-b19| L'elemento entry/substanceAdministration/entryRelationship/observation (Numero dose) DEVE contenere l'elemento 'code' valorizzato con gli attributi @code='30973-2' e @codeSystem='2.16.840.1.113883.6.1'.</assert>			
				<assert test="count(hl7:substanceAdministration/hl7:entryRelationship[@typeCode='SUBJ'][@inversionInd='true'])=0 or 
				count(hl7:substanceAdministration/hl7:entryRelationship[@typeCode='SUBJ']/hl7:observation/hl7:statusCode[@code='completed'])=1"
				>ERRORE-b20| L'elemento entry/substanceAdministration/entryRelationship/observation (Numero dose) DEVE contenere l'elemento 'statusCode' valorizzato con l'attributo @code='completed'.</assert>			
				<assert test="count(hl7:substanceAdministration/hl7:entryRelationship[@typeCode='SUBJ'][@inversionInd='true'])=0 or 
				count(hl7:substanceAdministration/hl7:entryRelationship[@typeCode='SUBJ']/hl7:observation/hl7:value[@xsi:type='INT'])=1"
				>ERRORE-b21| L'elemento entry/substanceAdministration/entryRelationship/observation (Numero dose) DEVE contenere l'elemento value valorizzato con l'attributo @xsi:type='INT'.</assert>
					
				
				<!--entryRelationship relativa al periodo di copertura/ data prossimo vaccino-->
				<assert test="count(hl7:substanceAdministration[hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.11.4.1']]/hl7:entryRelationship[@typeCode='REFR'])&lt;=2"
				>ERRORE-b22| L'elemento entry/substanceAdministration/entryRelationship relativo al "Periodo di Copertura /prossimo appuntamento" può essere presente al più due volte.</assert>			
				
				
				<!--entryRelationship relativa alla categorie a rischio-->
				<let name="risk" value="hl7:substanceAdministration[hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.11.4.1']]/hl7:entryRelationship[@typeCode='RSON']/hl7:observation[hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.11.4.5']]"/>
				
				<assert test="count(hl7:substanceAdministration/hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.11.4.1'])=0 or 
				count($risk)&lt;=1"
				>ERRORE-b23| L'elemento entry/substanceAdministration/entryRelationship/observation (Categorie a rischio) DEVE contenere un elemento 'templateId' valorizzato con @root='2.16.840.1.113883.2.9.10.1.11.4.5'</assert>	
				<assert test="count($risk)=0 or 
				count($risk/hl7:code[@code='95715-9'][@codeSystem='2.16.840.1.113883.6.1'])=1"
				>ERRORE-b24| L'elemento entry/substanceAdministration/entryRelationship (Categorie a rischio) DEVE contenere l'elemento code valorizzato con gli attributi @code='95715-9' e @codeSystem='2.16.840.1.113883.6.1'.</assert>			
				<assert test="count($risk)=0 or 
				count($risk/hl7:statusCode[@code='completed'])=1"
				>ERRORE-b25| L'elemento entry/substanceAdministration/entryRelationship (Categorie a rischio) DEVE contenere l'elemento statusCode valorizzato con l'attributo @code='completed'.</assert>			
				<assert test="count($risk)=0 or 
				count($risk/hl7:value[@xsi:type='CD'])=1"
				>ERRORE-b26| L'elemento entry/substanceAdministration/entryRelationship (Categorie a rischio) DEVE contenere l'elemento value valorizzato con l'attributo @xsi:type='CD'.</assert>
	
		
				<!--entryRelationship relativa alla condizioni sanitarie a rischio-->
				<let name="cond" value="hl7:substanceAdministration[hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.11.4.1']]/hl7:entryRelationship[@typeCode='RSON']/hl7:observation[hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.11.4.6']]"/>
				
				<assert test="count(hl7:substanceAdministration/hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.11.4.1'])=0 or 
				count($cond)&lt;=1"
				>ERRORE-b27| L'elemento entry/substanceAdministration/entryRelationship (condizioni sanitarie a rischio) DEVE contenere un elemento 'templateId' valorizzato con @root='2.16.840.1.113883.2.9.10.1.11.4.6'</assert>	
				<assert test="count($cond)=0 or 
				count($cond/hl7:code[@code='59785-6'][@codeSystem='2.16.840.1.113883.6.1'])=1"
				>ERRORE-b28| L'elemento entry/substanceAdministration/entryRelationship (condizioni sanitarie a rischio) DEVE contenere l'elemento code valorizzato con gli attributi @code='59785-6' e @codeSystem='2.16.840.1.113883.6.1'.</assert>			
				<assert test="count($cond)=0 or 
				count($cond/hl7:statusCode[@code='completed'])=1"
				>ERRORE-b29| L'elemento entry/substanceAdministration/entryRelationship (condizioni sanitarie a rischio) DEVE contenere l'elemento statusCode valorizzato con l'attributo @code='completed'.</assert>			
				<assert test="count($cond)=0 or 
				count($cond/hl7:value[@xsi:type='CD'][@codeSystem='2.16.840.1.113883.6.103'])=1"
				>ERRORE-b30| L'elemento entry/substanceAdministration/entryRelationship (condizioni sanitarie a rischio) DEVE contenere l'elemento value valorizzato con l'attributo @xsi:type='CD' e @codeSystem='2.16.840.1.113883.6.103'.</assert>
				
				<!--entryRelationship relativa alle reazioni avverse-->
				<let name="reaction" value="hl7:substanceAdministration[hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.11.4.1']]/hl7:entryRelationship[@typeCode='CAUS']"/>
				
				<assert test="count($reaction)=0 or 
				count($reaction/hl7:observation[hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.11.4.8']])=1"
				>ERRORE-b31| L'elemento entry/substanceAdministration/entryRelationship (reazioni avverse) DEVE contenere un elemento 'templateId' valorizzato con @root='2.16.840.1.113883.2.9.10.1.11.4.8'.</assert>		
				<assert test="count($reaction)=0 or 
				count($reaction/hl7:observation/hl7:code[@code='31044-1'][@codeSystem='2.16.840.1.113883.6.1'])=1"
				>ERRORE-b32| L'elemento entry/substanceAdministration/entryRelationship (reazioni avverse) DEVE contenere l'elemento code valorizzato con gli attributi @code='31044-1' e @codeSystem='2.16.840.1.113883.6.1'.</assert>			
				<assert test="count($reaction)=0 or 
				count($reaction/hl7:observation/hl7:statusCode[@code='completed'])=1"
				>ERRORE-b33| L'elemento entry/substanceAdministration/entryRelationship (reazioni avverse) DEVE contenere l'elemento statusCode valorizzato con l'attributo @code='completed'.</assert>						
				<assert test="count($reaction/hl7:observation/hl7:value)=0 or 
				count($reaction/hl7:observation/hl7:value[@xsi:type='CD'][@codeSystem='2.16.840.1.113883.6.103'])=1"
				>ERRORE-b34| L'elemento entry/substanceAdministration/entryRelationship/observation/value (reazioni avverse) DEVE essere valorizzato secondo il sistema di codifica ICD9-CM (@codeSystem='2.16.840.1.113883.6.103').</assert>
				
			
			<!--entry/substanceAdministration dati esonero/omissione o differimento-->
		
			<assert test="count(hl7:substanceAdministration/hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.11.4.2'])=0 or 
			count(hl7:substanceAdministration[hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.11.4.2']]/hl7:statusCode[@code='cancelled'])=1"
			>ERRORE-b35| L'elemento entry/substanceAdministration/templateId[@root='2.16.840.1.113883.2.9.10.1.11.4.2'] DEVE contenere l'elemento statusCode valorizzato con l'attributo @code='cancelled'.</assert>		
			<assert test="count(hl7:substanceAdministration/hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.11.4.2'])=0 or 
			count(hl7:substanceAdministration[hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.11.4.2']]/hl7:effectiveTime)=1"
			>ERRORE-b36| L'elemento entry/substanceAdministration/templateId[@root='2.16.840.1.113883.2.9.10.1.11.4.2'] DEVE contenere l'elemento effectiveTime.</assert>
			<assert test="count(hl7:substanceAdministration/hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.11.4.2'])=0 or 
			count(hl7:substanceAdministration[hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.11.4.2']]/hl7:consumable[@typeCode='CSM'])=1"
			>ERRORE-b37|L'elemento entry/substanceAdministration/templateId[@root='2.16.840.1.113883.2.9.10.1.11.4.2'] DEVE contenere l'elemento consumable con l'attributo @typeCode='CSM' valorizzato .</assert>
			
				<!--entryRelationship ragione esonero/omissione o differimento-->
				<assert test="count(hl7:substanceAdministration/hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.11.4.2'])=0 or 
				count(hl7:substanceAdministration[hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.11.4.2']]/hl7:entryRelationship[@typeCode='RSON'][hl7:observation/hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.11.4.10']])=1"
				>ERRORE-b38| L'elemento entry/substanceAdministration/entryRelationship[@typeCode='RSON'] DEVE avere l'elemento templateId valorizzato con l'attributo @root='2.16.840.1.113883.2.9.10.1.11.4.10'.</assert>						
				<assert test="count(hl7:substanceAdministration/hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.11.4.2'])=0 or 
				count(hl7:substanceAdministration[hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.11.4.2']]/hl7:entryRelationship[@typeCode='RSON']/hl7:observation[hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.11.4.10']]/hl7:code[@code='85714-4'][@codeSystem='2.16.840.1.113883.6.1'])=1"
				>ERRORE-b39| L'elemento entry/substanceAdministration/entryRelationship[@typeCode='RSON']  DEVE contenere l'elemento observation/code valorizzato con gli attributi @code='85714-4' e @codeSystem='2.16.840.1.113883.6.1'.</assert>					
				<assert test="count(hl7:substanceAdministration/hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.11.4.2'])=0 or 
				count(hl7:substanceAdministration[hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.11.4.2']]/hl7:entryRelationship[@typeCode='RSON']/hl7:observation[hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.11.4.10']]/hl7:statusCode[@code='completed'])=1"
				>ERRORE-b40| L'elemento entry/substanceAdministration/entryRelationship[@typeCode='RSON']  DEVE contenere l'elemento observation/statusCode valorizzato con l'attributo @code='completed'.</assert>			
				<assert test="count(hl7:substanceAdministration/hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.11.4.2'])=0 or 
				count(hl7:substanceAdministration[hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.11.4.2']]/hl7:entryRelationship[@typeCode='RSON']/hl7:observation[hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.11.4.10']]/hl7:effectiveTime/hl7:low)=1"
				>ERRORE-b41| L'elemento entry/substanceAdministration/entryRelationship[@typeCode='RSON'] DEVE contenere l'elemento observation/effectiveTime/low.</assert>				
				<assert test="count(hl7:substanceAdministration/hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.11.4.2'])=0 or 
				count(hl7:substanceAdministration[hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.11.4.2']]/hl7:entryRelationship[@typeCode='RSON']/hl7:observation[hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.11.4.10']]/hl7:effectiveTime/hl7:high)=1"
				>ERRORE-b42| L'elemento entry/substanceAdministration/entryRelationship[@typeCode='RSON'] DEVE contenere l'elemento observation/effectiveTime/high.</assert>				
		
		
		</rule>
		
		
		<rule context="hl7:ClinicalDocument/hl7:component/hl7:structuredBody/hl7:component/hl7:section/hl7:entry/hl7:substanceAdministration[hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.11.4.1']]/hl7:entryRelationship[@typeCode='REFR']">
			
			<assert test="count(hl7:observation/hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.11.4.4'])=1"
			>ERRORE-b43| L'elemento entry/substanceAdministration/entryRelationship/observation (Periodo di copertura/prossimo appuntamento) DEVE contenere un elemento 'templateId' valorizzato con @root='2.16.840.1.113883.2.9.10.1.11.4.4'.</assert>
			<assert test="(count(hl7:observation/hl7:code[@code='59778-1'][@codeSystem='2.16.840.1.113883.6.1'])=1 or
			count(hl7:observation/hl7:code[@code='59778-1'][@codeSystem='2.16.840.1.113883.4.642.3.308'])=1) or
			(count(hl7:observation/hl7:code[@code='30980-7'][@codeSystem='2.16.840.1.113883.6.1'])=1 or
			count(hl7:observation/hl7:code[@code='30980-7'][@codeSystem='2.16.840.1.113883.4.642.3.308'])=1)"
			>ERRORE-b44|L'elemento entry/substanceAdministration/entryRelationship valorizzato con l'attributo @typeCode='REFR' DEVE avere l'lemento observation/code valorizzato con i seguenti attributi:
			- @code='59778-1' con i seguenti sistemi di codifica @codeSystem='2.16.840.1.113883.6.1' o @codeSystem='2.16.840.1.113883.4.642.3.308' (Periodo di Copertura)
			- @code='30980-7' con i seguenti sistemi di codifica @codeSystem='2.16.840.1.113883.6.1' o @codeSystem='2.16.840.1.113883.4.642.3.308' (Schedulazione prossimo Vaccino)
			</assert>	
			<assert test="count(hl7:observation/hl7:statusCode[@code='completed'])=1"
			>ERRORE-b45|L'elemento entry/substanceAdministration/entryRelationship[@typeCode='REFR'] DEVE contenere l'elemento statusCode valorizzato sempre con il code 'completed'.</assert>	
			<assert test="count(hl7:observation/hl7:value[@xsi:type='IVL_TS' or @xsi:type='TS'])=1"
			>ERRORE-b46|L'elemento entry/substanceAdministration/entryRelationship[@typeCode='REFR'] DEVE contenere l'elemento value valorizzato con l'attributo @xsi:type='IVL_TS' o @xsi:type='TS'.</assert>
			
		
		</rule>
		
		<!--entryRelationship relativa alla malattia per cui si effettua la vaccinazione relativa alla entry/substanceAdministration dati vaccinazione-->
		<rule context="hl7:ClinicalDocument/hl7:component/hl7:structuredBody/hl7:component/hl7:section/hl7:entry/hl7:substanceAdministration/hl7:entryRelationship[@typeCode='RSON'][hl7:observation/hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.11.4.9']]">
			
			<assert test="count(hl7:observation/hl7:code[@code='75323-6'][@codeSystem='2.16.840.1.113883.6.1'])=1"
			>ERRORE-b47| L'elemento observation (malattia per cui si effettua la vaccinazione) DEVE contenere l'elemento code valorizzato con i seguenti attributi @code='75323-6' e @codeSystem='2.16.840.1.113883.6.1'.</assert>
			<assert test="count(hl7:observation/hl7:statusCode[@code='completed'])=1"
			>ERRORE-b48| L'elemento observation (malattia per cui si effettua la vaccinazione) DEVE contenere l'elemento statusCode valorizzato con l'attributo @code='completed'.</assert>
			<assert test="count(hl7:observation/hl7:value[@xsi:type='CD'])=1"
			>ERRORE-b49| L'elemento observation (malattia per cui si effettua la vaccinazione) DEVE contenere l'elemento value valorizzato con l'attributo @xsi:type='CD'.</assert>
			
		</rule>
		
		<!--entryRelationship relativa alla malattia con presunta immunità relativa alla entry/substanceAdministration dati esonero/omissione o differimento-->
		<rule context="hl7:ClinicalDocument/hl7:component/hl7:structuredBody/hl7:component/hl7:section/hl7:entry/hl7:substanceAdministration[hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.11.4.2']]/hl7:entryRelationship[@typeCode='RSON'][hl7:observation/hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.11.4.7']]">
			
			<assert test="count(hl7:observation/hl7:code[@code='59784-9'][@codeSystem='2.16.840.1.113883.6.1'])=1"
			>ERRORE-b50| L'elemento observation(malattia con presunta immunità) DEVE contenere l'elemento code valorizzato con i seguenti attributi @code='59784-9' e @codeSystem='2.16.840.1.113883.6.1'.</assert>
			<assert test="count(hl7:observation/hl7:statusCode[@code='completed'])=1"
			>ERRORE-b51| L'elemento observation (malattia con presunta immunità) DEVE contenere l'elemento statusCode valorizzato con l'attributo @code='completed'.</assert>
			<assert test="count(hl7:observation/hl7:value)=0 or count(hl7:observation/hl7:value[@codeSystem='2.16.840.1.113883.6.103'])=1"
			>ERRORE-b52| L'elemento observation/value (malattia con presunta immunità) DEVE essere valorizzato secondo il sistema di codifica ICD9-CM (@codeSystem='2.16.840.1.113883.6.103').</assert>
		
		</rule>
		
		<!--controli template ER @typeCode='RSON'-->
		<rule context="hl7:ClinicalDocument/hl7:component/hl7:structuredBody/hl7:component/hl7:section/hl7:entry/hl7:substanceAdministration/hl7:entryRelationship[@typeCode='RSON']">
			
			<assert test="count(hl7:observation/hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.11.4.5'])=1 or
			count(hl7:observation/hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.11.4.6'])=1 or
			count(hl7:observation/hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.11.4.7'])>=1 or
			count(hl7:observation/hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.11.4.9'])>=1 or
			count(hl7:observation/hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.11.4.10'])=1"
			>ERRORE b53| Ciascuno di questi templateId è contenuto in una entryRelationship con l'attributo @typeCode='RSON'.
			- @root='2.16.840.1.113883.2.9.10.1.11.4.5' (Categorie a rischio)
			- @root='2.16.840.1.113883.2.9.10.1.11.4.6' (Condizioni sanitarie)
			- @root='2.16.840.1.113883.2.9.10.1.11.4.7' (Malattia con presunta immunità)
			- @root='2.16.840.1.113883.2.9.10.1.11.4.9' (Malattia per cui si effettua la vaccinazione)
			- @root='2.16.840.1.113883.2.9.10.1.11.4.10' (Ragione dell'esonero)</assert>
		
		</rule>
		
	</pattern>
</schema>
",
      "subType": "00"
    }
  },
  "version": "3.1",
  "template_id_root": "2.16.840.1.113883.2.9.10.1.11.1.1",
  "last_update_date": {
    "$date": "2023-01-16T22:59:29.135Z"
  },
  "deleted": false,
  "last_sync": {
    "$date": "2023-01-16T23:00:03.543Z"
  }
},{
  "_id": {
    "$oid": "63c5d6d3d370ce753aa6817b"
  },
  "name_schematron": "schematron_certificato_VACC v1.5.sch",
  "content_schematron": {
    "$binary": {
      "base64": "<?xml version="1.0" encoding="UTF-8"?>
<!-- schematron versione:1.5 -->
<schema xmlns="http://purl.oclc.org/dsdl/schematron" 
		xmlns:cda="urn:hl7-org:v3"
        xmlns:iso="http://purl.oclc.org/dsdl/schematron"
        xmlns:sch="http://www.ascc.net/xml/schematron"
        queryBinding="xslt2">
	<title>Schematron Certificato Vaccinale v 1.1</title>
	<ns prefix="hl7" uri="urn:hl7-org:v3"/>
	<ns prefix="xsi" uri="http://www.w3.org/2001/XMLSchema-instance"/>
	<pattern id="all">


<!--_______________________________________________________________HEADER _____________________________________________________________________-->


	<!-- ClinicalDocument -->
		<rule context="hl7:ClinicalDocument">
	        
			<!--Controllo realmCode-->	
			<assert test="count(hl7:realmCode)>=1 and count(hl7:realmCode[@code='IT'])= 1"
			>ERRORE-1| L'elemento <name/> DEVE avere almeno un elemento 'realmCode', il cui attributo @code deve essere valorizzato con 'IT'</assert>
			
			<!--Controllo templateId-->
			<let name="num_tid" value="count(hl7:templateId)"/>
			<assert test="$num_tid >= 1"
			>ERRORE-2| L'elemento <name/> DEVE avere almeno un elemento di tipo 'templateId'</assert>
			<assert test="count(hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.11.1.2'])= 1 and  count(hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.11.1.2']/@extension)= 1"
			>ERRORE-3| Almeno un elemento <name/>/templateId DEVE essere valorizzato attraverso l'attributo @root='“2.16.840.1.113883.2.9.10.1.11.1.2', associato all'attributo @extension che  indica la versione a cui il templateId fa riferimento</assert>
			
			<!--Controllo code-->	
			<assert test="count(hl7:code[@code='82593-5'][@codeSystem='2.16.840.1.113883.6.1']) = 1"
			>ERRORE-4| L'elemento <name/>/code DEVE essere valorizzato con l'attributo @code='82593-5"' e il @codeSystem='2.16.840.1.113883.6.1'</assert>
			<report test="not(count(hl7:code[@codeSystemName='LOINC'])=1) or not(count(hl7:code[@displayName='Immunization summary report'])=1 or
			count(hl7:code[@displayName='IMMUNIZATION SUMMARY REPORT'])=1 or count(hl7:code[@displayName='Immunization Summary Report'])=1)"
			>W001| Si raccomanda di valorizzare gli attributi dell'elemento <name/>/code nel seguente modo: @codeSystemName ='LOINC' e @displayName ='Immunization summary report'--> </report>
			
			<!--Controllo confidentialityCode-->
			<assert test="(count(hl7:confidentialityCode[@code='N'][@codeSystem='2.16.840.1.113883.5.25'])= 1) or 
			(count(hl7:confidentialityCode[@code='V'][@codeSystem='2.16.840.1.113883.5.25'])= 1)"
			>ERRORE-5| L'elemento <name/>/confidentialityCode DEVE avere l'attributo @code valorizzato con 'N' o 'V', e il @codeSystem='2.16.840.1.113883.5.25'</assert>
			
			<!--Controllo languageCode-->	
			<assert test="count(hl7:languageCode)=1"
			>ERRORE-6| L'elemento <name/> DEVE contenere un elemento 'languageCode' </assert>
			
			<!--Controllo incrociato tra setId-versionNumber e relatedDocument-->
			<let name="versionNumber" value="hl7:versionNumber/@value"/>
			<assert test="(string(number($versionNumber)) = 'NaN') or
					($versionNumber= '1' and hl7:id/@root = hl7:setId/@root and hl7:id/@extension = hl7:setId/@extension) or
					($versionNumber!= '1' and hl7:id/@root = hl7:setId/@root and hl7:id/@extension != hl7:setId/@extension) or
					(hl7:id/@root != hl7:setId/@root)"
			>ERRORE-7| Se ClinicalDocument.id e ClinicalDocument.setId usano lo stesso dominio di identificazione (@root identico) allora l’attributo @extension del ClinicalDocument.id 
			deve essere diverso da quello del ClinicalDocument.setId a meno che ClinicalDocument.versionNumber non sia uguale ad 1; cioè i valori di setId ed id per un documento clinico possono coincidere solo per la prima versione di un documento</assert>
			<assert test="(string(number($versionNumber)) ='NaN') or
						  ($versionNumber=1) or 
						  (($versionNumber &gt;1) and count(hl7:relatedDocument)=1)"
			>ERRORE-8| Se l'attributo <name/>/versionNumber/@value è maggiore di 1, l'elemento <name/> DEVE contenere un elemento di tipo 'relatedDocument'</assert>
			
			
			<!--Controllo recordTarget-->
			<assert test="count(hl7:recordTarget)=1"
			>ERRORE-9| L'elemento <name/> DEVE contenere un solo elemento 'recordTarget' </assert>
			
			<!--Controllo recordTarget/patientRole/id-->
			<assert test="count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.4.3.2'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.4.3.7'])=1 or 
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.4.3.3'])=1 or 
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.4.3.18'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.4.3.17'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.4.3.15'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.2.10.4.1'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.2.20.4.1'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.2.30.4.1'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.2.41.4.1'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.2.42.4.1'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.2.50.4.1'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.2.60.4.1'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.2.70.4.1'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.2.80.4.1'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.2.90.4.1'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.2.100.4.1'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.2.110.4.1'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.2.120.4.1'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.2.130.4.1'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.2.140.4.1'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.2.150.4.1'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.2.160.4.1'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.2.170.4.1'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.2.180.4.1'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.2.190.4.1'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.2.200.4.1'])=1"
			>ERRORE-10a| L'elemento <name/>/recordTarget/patientRole/id  deve avere l'attributo @root valorizzato tramite una  delle seguenti identificatori Nazionanli:
			CF 2.16.840.1.113883.2.9.4.3.2
			TEAM 2.16.840.1.113883.2.9.4.3.7 o 2.16.840.1.113883.2.9.4.3.3
			ENI 2.16.840.1.113883.2.9.4.3.18
			STP 2.16.840.1.113883.2.9.4.3.17
			ANA 2.16.840.1.113883.2.9.4.3.15
			Oppure tramite gli identificatori regionali generati per rappresentare l'id del paziente.
			</assert>
			
			<!--Controllo recordTarget/patientRole/addr-->
			<let name="num_addr" value="count(hl7:recordTarget/hl7:patientRole/hl7:addr)"/>
			
			<assert test="count(hl7:recordTarget)=0 or $num_addr=0 or (count(hl7:recordTarget/hl7:patientRole/hl7:addr/hl7:country)=$num_addr and 
			count(hl7:recordTarget/hl7:patientRole/hl7:addr/hl7:city)=$num_addr and 
			count(hl7:recordTarget/hl7:patientRole/hl7:addr/hl7:streetAddressLine)=$num_addr)"
			>ERRORE-10| L'elemento <name/>/recordTarget/patientRole/addr DEVE riportare i sotto-elementi 'country', 'city' e 'streetAddressLine' </assert>
			
			<!--Controllo recordTarget/patientRole/patient/name-->
			<let name="patient" value="hl7:recordTarget/hl7:patientRole/hl7:patient"/>
			<assert test="count($patient)=1 "
			>ERRORE-11| L'elemento <name/>/recordTaget/patientRole DEVE contenere l'elemento patient</assert>
			<assert test="count($patient)=0 or count($patient/hl7:name)=1"
			>ERRORE-12| L'elemento <name/>/recordTaget/patientRole/patient DEVE contenere l'elemento 'name'</assert>
			<assert test="count($patient)=0 or (count($patient/hl7:name/hl7:given)=1 and count($patient/hl7:name/hl7:family)=1)"
			>ERRORE-13| L'elemento <name/>/recordTaget/patientRole/patient/name DEVE riportare gli elementi 'given' e 'family'</assert>
			
			<!--Controllo recordTarget/patientRole/patient/administrativeGenderCode-->
			<let name="genderOID" value="hl7:recordTarget/hl7:patientRole/hl7:patient/hl7:administrativeGenderCode/@codeSystem"/>
			
			<assert test="count($patient)=0 or count(hl7:recordTarget/hl7:patientRole/hl7:patient/hl7:administrativeGenderCode)=1"
			>ERRORE-14| L'attributo <name/>/recordTarget/patientRole/patient DEVE contenere l'elemento administrativeGenderCode </assert>
			<assert test="count($patient)=0 or $genderOID='2.16.840.1.113883.5.1'"
			>ERRORE-15| L'OID assegnato all'attributo <name/>/recordTarget/patientRole/patient/administrativeGenderCode/@codeSystem='<value-of select="$genderOID"/>' non è corretto. 
			L'attributo DEVE essere valorizzato con '2.16.840.1.113883.5.1' </assert>
			
			<!--Controllo recordTarget/patientRole/patient/birthTime-->
			<assert test="count($patient)=0 or
			(count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.4.3.2' or 
			@root='2.16.840.1.113883.2.9.4.3.7' or @root='2.16.840.1.113883.2.9.4.3.3' or 
			@root='2.16.840.1.113883.2.9.4.3.17'])=0) or 
			count(hl7:recordTarget/hl7:patientRole/hl7:patient/hl7:birthTime)=1"
			>ERRORE-16| L'elemento <name/>/recordTaget/patientRole/patient DEVE riportare un elemento 'birthTime'</assert>	
			
			<!--Controllo recordTarget/patientRole/patient/birthplace/place/addr-->
			<assert test="count(hl7:recordTarget)=0 or count(hl7:recordTarget/hl7:patientRole/hl7:patient/hl7:birthplace)=0 or 
			count(hl7:recordTarget/hl7:patientRole/hl7:patient/hl7:birthplace/hl7:place/hl7:addr)=1"
			>ERRORE-17| L'elemento <name/>/recordTarget/patientRole/patient/birthplace DEVE contenere un elemento place/addr </assert>	
			
			
			<!--Controllo custodian/assignedCustodian/representedCustodianOrganization-->
			<assert test="count(hl7:custodian/hl7:assignedCustodian/hl7:representedCustodianOrganization/hl7:name)=1"
			>ERRORE-21| L'elemento <name/>/custodian/assignedCustodian/representedCustodianOrganization deve contenere un elemento 'name'</assert>
			
			<let name="num_addr_cust" value="count(hl7:custodian/hl7:assignedCustodian/hl7:representedCustodianOrganization/hl7:addr)"/>
			<let name="addr_cust" value="hl7:custodian/hl7:assignedCustodian/hl7:representedCustodianOrganization/hl7:addr"/>
			<assert test="$num_addr_cust=0 or (count($addr_cust/hl7:country)=$num_addr_cust and
			count($addr_cust/hl7:city)=$num_addr_cust and 
			count($addr_cust/hl7:streetAddressLine)=$num_addr_cust)"
			>ERRORE-22| L'elemento <name/>/custodian/assignedCustodian/representedCustodianOrganization/addr DEVE riportare i sotto-elementi 'country','city' e 'streetAddressLine'</assert>
			
			<!--Controllo legalAuthenticator-->
			<assert test = "(count(hl7:legalAuthenticator)&lt;=1)" 
			>ERRORE-23| L'elemento <name/>/legalAuthenticator può essere presente una volta sola</assert>
			<assert test = "count(hl7:legalAuthenticator)=0 or count(hl7:legalAuthenticator/hl7:signatureCode[@code='S'])=1" 
			>ERRORE-24| L'elemento <name/>/legalAuthenticator/signatureCode deve essere valorizzato con il codice "S" </assert>
			<assert test = "count(hl7:legalAuthenticator)=0 or count(hl7:legalAuthenticator/hl7:assignedEntity/hl7:id[@root='2.16.840.1.113883.2.9.4.3.2'])=1"
			>ERRORE-25| L'elemento <name/>/legalAuthenticator/assignedEntity DEVE contenere almeno un elemento id valorizzato con l'attributo @root='2.16.840.1.113883.2.9.4.3.2'</assert>
			
			<assert test = "count(hl7:legalAuthenticator/hl7:assignedEntity/hl7:assignedPerson/hl7:name)=0
			or (count(hl7:legalAuthenticator/hl7:assignedEntity/hl7:assignedPerson/hl7:name/hl7:family)=1 and 
			count(hl7:legalAuthenticator/hl7:assignedEntity/hl7:assignedPerson/hl7:name/hl7:given)=1)"
			>ERRORE-26| L'elemento <name/>/legalAuthenticator/assignedEntity/assignedPerson/name DEVE riportare gli elementi 'given' e 'family'</assert>
			
			
		</rule>
		
		<!-- Controllo author-->
		<rule context="hl7:ClinicalDocument/hl7:author">
			<!--Controllo author/assignedAuthor/id-->
			<assert test="count(hl7:assignedAuthor/hl7:id/@nullFlavor)=1 or 
			count(hl7:assignedAuthor/hl7:id[@root='2.16.840.1.113883.2.9.4.3.2'])=1"
			>ERRORE-18| L'elemento <name/>/assignedAuthor DEVE contenere almeno un elemento 'id' con il relativo attributo @root='2.16.840.1.113883.2.9.4.3.2'</assert>
						
			<!--Controllo author/assignedAuthor/assignedPerson/name-->
			<let name="name_author" value="hl7:assignedAuthor/hl7:assignedPerson"/>
		
			<assert test="count(hl7:assignedAuthor/hl7:id/@nullFlavor)=1 or count($name_author/hl7:name)=1" 
			>ERRORE-19| L'elemento <name/>/assignedAuthor/assignedPerson DEVE contenere un elemento name </assert>
			<assert test="count(hl7:assignedAuthor/hl7:id/@nullFlavor)=1 or count($name_author/hl7:name)=0 or 
			(count($name_author/hl7:name/hl7:given)=1 and count($name_author/hl7:name/hl7:family)=1)"
			>ERRORE-20| L'elemento <name/>/assignedAuthor/assignedPerson/name DEVE avere gli elementi 'given' e 'family'</assert>
			
		</rule>
		
		<!-- Controllo participant-->
		<rule context="hl7:ClinicalDocument/hl7:participant">
			<assert test="count(hl7:associatedEntity/hl7:id)>=1"
			>ERRORE-27| L'elemento <name/>/associatedEntity deve contenere l'elemento 'id'</assert>
			<assert test="count(hl7:associatedEntity/hl7:associatedPerson)=0 or count(hl7:associatedEntity/hl7:associatedPerson/hl7:name)=1"
			>ERRORE-28| L'elemento <name/>/associatedEntity/associatedPerson deve contenere l'elemento 'name'</assert>
			<assert test="count(hl7:associatedEntity/hl7:associatedPerson)=0 
			or(count(hl7:associatedEntity/hl7:associatedPerson/hl7:name/hl7:family)=1 and count(hl7:associatedEntity/hl7:associatedPerson/hl7:name/hl7:given)=1)"
			>ERRORE-29| L'elemento <name/>/associatedEntity/associatedPerson/name deve contenere gli elementi 'given' e 'family'</assert>
			
		</rule>
	
	
	
	<!--__________________________________________________________CONTROLLI GENERICI________________________________________________________________-->


		<!--Controllo use Telecom-->
		<rule context="//hl7:telecom">
			<assert test="(count(@use)=1)"
			>ERRORE-30| L’elemento 'telecom' DEVE contenere l'attributo @use </assert>
		</rule>	
		
		<!-- Controllo formato: -->
		<!--campi Codice Fiscale: 16 cifre [A-Z0-9]{16} -->
		<rule context="//hl7:id[@root='2.16.840.1.113883.2.9.4.3.2']">
			<let name="CF" value="@extension"/>
			<assert test="matches(@extension, '[A-Z0-9]{16}') and string-length($CF)=16"
			>ERRORE-31| Il codice fiscale '<value-of select="$CF"/>' cittadino ed operatore deve essere costituito da 16 cifre [A-Z0-9]{16}</assert>
		</rule>
	
		<!--Controllo sugli attributi di observation-->
		<rule context="//hl7:observation">
			<let name="moodCd" value="@moodCode"/>
			<assert test="count(@classCode)=1"
			>ERRORE-32| L'attributo "@classCode" dell'elemento "observation" deve essere presente </assert>
			<assert test="$moodCd='EVN'"
			>ERRORE-33| L'attributo "@moodCode" dell'elemento "observation" deve essere valorizzato con "EVN" </assert>
		</rule>
		
<!--___________________________________________________________________BODY__________________________________________________________________________-->
	
	
	
		<rule context="hl7:ClinicalDocument/hl7:component/hl7:structuredBody">
		
			<!--Vaccinazioni-->
			<assert test="count(hl7:component/hl7:section[@classCode='DOCSECT'][@moodCode='EVN'])=1"
			>ERRORE-b1| L'elemento component/section deve avere gli attributi @classCode='DOCSECT </assert>
			<assert test="count(hl7:component/hl7:section/hl7:templateId)=0 or 
			count(hl7:component/hl7:section/hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.11.3.2'])=1"
			>ERRORE-b2| L'elemento section può contenere un elemento 'templateId' valorizzato con l'attributo @root='2.16.840.1.113883.2.9.10.1.11.3.2'</assert>
			<assert test="count(hl7:component/hl7:section/hl7:code)=0 or 
			count(hl7:component/hl7:section/hl7:code[@code='11369-6'][@codeSystem='2.16.840.1.113883.6.1'])=1"
			>ERRORE-b3| L'elemento section può contenere un elemento 'code' valorizzato con gli attributi @code='11369-6' e @codeSystem='2.16.840.1.113883.6.1'</assert>
			<assert test="count(hl7:component/hl7:section/hl7:title)=1"
			>ERRORE-b4| L'elemento section DEVE contenere un elemento 'title' possibilmente valorizzato con 'Certificato Vaccinale'</assert>
			<assert test="count(hl7:component/hl7:section/hl7:text)=1"
			>ERRORE-b5| L'elemento section DEVE contenere un elemento 'text'</assert>
			<assert test="count(hl7:component/hl7:section/hl7:entry)&gt;=1"
			>ERRORE-b6| L'elemento section DEVE contenere almeno un elemento 'entry'</assert>
			
		</rule>
		
		
		<!--controllo sulle entry-->
		<rule context="hl7:ClinicalDocument/hl7:component/hl7:structuredBody/hl7:component/hl7:section/hl7:entry">
			
			<assert test="count(hl7:substanceAdministration[@moodCode='EVN'][@classCode='SBADM'])=1"
			>ERRORE-b7| L'elemento entry/substanceAdministration DEVE avere attributi @moodCode='EVN' e @classCode='SBADM'</assert>
			<assert test="count(hl7:substanceAdministration/hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.11.4.1' or @root='2.16.840.1.113883.2.9.10.1.11.4.2'])=1"
			>ERRORE-b8| L'elemento entry/substanceAdministration DEVE contenere un elemento 'templateId' valorizzato con @root='2.16.840.1.113883.2.9.10.1.11.4.1'</assert>
			<assert test="count(hl7:substanceAdministration/hl7:effectiveTime)=1"
			>ERRORE-b9| L'elemento entry/substanceAdministration DEVE contenere un elemento 'effectiveTime'.</assert>
			<assert test="count(hl7:substanceAdministration/hl7:consumable[@typeCode='CSM'])=1"
			>ERRORE-b10| L'elemento entry/substanceAdministration DEVE contenere un elemento 'consumable' valorizzato con @typeCode='CSM'</assert>
			<assert test="count(hl7:substanceAdministration/hl7:participant)=0 or 
			count(hl7:substanceAdministration/hl7:participant[@typeCode='LOC'])>=1"
			>ERRORE-b11| L'elemento entry/substanceAdministration può contenere un elemento 'participant' valorizzato con l'attributo @typeCode='LOC'</assert>
			<assert test="count(hl7:substanceAdministration/hl7:participant)=0 or 
			count(hl7:substanceAdministration/hl7:participant/hl7:participantRole[@classCode='ROL'])>=1"
			>ERRORE-b12| L'elemento entry/substanceAdministration/participant DEVE contenere l'elemento 'participantRole' valorizzato con l'attributo @classCode='ROL' </assert>
			
			<!-- entry - Dati Vaccino-->
			<assert test="count(hl7:substanceAdministration[hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.11.4.1']])=0 or 
			count(hl7:substanceAdministration[hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.11.4.1']]/hl7:statusCode[@code='completed'])=1"
			>ERRORE-b13| L'elemento entry/substanceAdministration (in Dati vaccinazione) DEVE contenere un elemento 'statusCode' valorizzato con attributo @code='completed' </assert>
			<let name="farma_dv" value="hl7:substanceAdministration[hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.11.4.1']]/hl7:consumable/hl7:manufacturedProduct/hl7:manufacturedMaterial"/>
			<assert test="count(hl7:substanceAdministration[hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.11.4.1']])=0 or 
			count($farma_dv/hl7:code[@codeSystem='2.16.840.1.113883.2.9.6.1.5'])=1"
			>ERRORE-b14| L'elemento entry/substanceAdministration/consumable/manufacturedProduct/manufacturedMaterial (in Dati vaccinazione) DEVE contenere un elemento 'code' valorizzato secondo AIC - @codeSystem='2.16.840.1.113883.2.9.6.1.5'.</assert>
			<assert test="count($farma_dv/hl7:code/hl7:translation)=0 or
			(count($farma_dv/hl7:code/hl7:translation[@codeSystem='2.16.840.1.113883.6.73'])=1)"
			>ERRORE-b15| L'elemento entry/substanceAdministration/consumable/manufacturedProduct/manufacturedMaterial/code (in Dati vaccinazione) può contenere un elemento 'translation' valorizzato secondo ATC - @codeSystem='2.16.840.1.113883.6.73'.</assert>

				<!-- entryRelationship - Numero di dose-->
				<assert test="count(hl7:substanceAdministration/hl7:entryRelationship[@typeCode='SUBJ'][@inversionInd='true'])=0 or 
				count(hl7:substanceAdministration/hl7:entryRelationship[@typeCode='SUBJ']/hl7:observation/hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.11.4.3'])=1"
				>ERRORE-b16| L'elemento entry/substanceAdministration/entryRelationship/observation (Numero di dose) DEVE contenere un elemento 'templateId' valorizzato con @root='2.16.840.1.113883.2.9.10.1.11.4.3' </assert>
				<assert test="count(hl7:substanceAdministration/hl7:entryRelationship[@typeCode='SUBJ'][@inversionInd='true'])=0 or
				count(hl7:substanceAdministration/hl7:entryRelationship[@typeCode='SUBJ']/hl7:observation/hl7:code[@code='30973-2'][@codeSystem='2.16.840.1.113883.6.1'])=1"
				>ERRORE-b17| L'elemento entry/substanceAdministration/entryRelationship/observation (Numero di dose) DEVE contenere un elemento 'code' valorizzato con gli attributi @code='30973-2' e @codeSystem='2.16.840.1.113883.6.1'</assert>			
				<assert test="count(hl7:substanceAdministration/hl7:entryRelationship[@typeCode='SUBJ'][@inversionInd='true'])=0 or 
				count(hl7:substanceAdministration/hl7:entryRelationship[@typeCode='SUBJ']/hl7:observation/hl7:statusCode[@code='completed'])=1"
				>ERRORE-b18| L'elemento entry/substanceAdministration/entryRelationship/observation (Numero di dose) DEVE contenere un elemento 'statusCode' valorizzato con l'attributo @code='completed'</assert>			
				<assert test="count(hl7:substanceAdministration/hl7:entryRelationship[@typeCode='SUBJ'][@inversionInd='true'])=0 or 
				count(hl7:substanceAdministration/hl7:entryRelationship[@typeCode='SUBJ']/hl7:observation/hl7:value[@xsi:type='INT'])=1"
				>ERRORE-b19| L'elemento entry/substanceAdministration/entryRelationship/observation (Numero di dose) DEVE contenere un elemento value valorizzato con l'attributo @xsi:type='INT'</assert>
				
				<!--entryRelationship relativa al periodo di copertura/ data prossimo vaccino-->
				<assert test="count(hl7:substanceAdministration[hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.11.4.1']]/hl7:entryRelationship[@typeCode='REFR'])&lt;=2"
				>ERRORE-b20| L'elemento entry/substanceAdministration/entryRelationship relativo al "Periodo di Copertura /prossimo appuntamento" può essere presente al più due volte.</assert>			
				
				
				<!--Vaccinazioni: entryRelationship - categorie di rischio-->
				<let name="risk" value="hl7:substanceAdministration[hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.11.4.1']]/hl7:entryRelationship[@typeCode='RSON']/hl7:observation[hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.11.4.5']]"/>
				
				<assert test="count(hl7:substanceAdministration[hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.11.4.1']])=0 or
				count($risk)&lt;=1"
				>ERRORE-b21| L'elemento entry/substanceAdministration/entryRelationship/observation (Categorie a rischio) può essere presente al più una sola volta.</assert> 	
				<assert test="count($risk)=0 or 
				count($risk/hl7:code[@code='95715-9'][@codeSystem='2.16.840.1.113883.6.1'])=1"
				>ERRORE-b22| L'elemento entry/substanceAdministration/entryRelationship/observation (Categorie a rischio)  DEVE contenere un elemento 'code' valorizzato con gli attributi @code='95715-9' e @codeSystem='2.16.840.1.113883.6.1'.</assert>			
				<assert test="count($risk)=0 or 
				count($risk/hl7:statusCode[@code='completed'])=1"
				>ERRORE-b23| L'elemento entry/substanceAdministration/entryRelationship/observation (Categorie a rischio)  DEVE contenere un elemento 'statusCode' valorizzato con @code='completed'</assert>			
				<assert test="count($risk)=0 or 
				count($risk/hl7:value[@xsi:type='CD'])=1"
				>ERRORE-b24| L'elemento entry/substanceAdministration/entryRelationship/observation (Categorie a rischio)  DEVE contenere un elemento 'value valorizzato con l'attributo @xsi:type='CD'</assert>
				
				
				
				<!--Vaccinazioni: entryRelationship - condizioni sanitarie a rischio-->
				<let name="condition" value="hl7:substanceAdministration[hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.11.4.1']]/hl7:entryRelationship[@typeCode='RSON'][@inversionInd='false']/hl7:observation[hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.11.4.6']]"/>
				<assert test="count(hl7:substanceAdministration/hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.11.4.1'])=0 or 
				count($condition)&lt;=1"
				>ERRORE-b25| L'elemento entry/substanceAdministration/entryRelationship/observation (Condizioni sanitarie a rischio)  può essere presente al più una sola volta.</assert> 	
				<assert test="count($condition)=0 or 
				count($condition/hl7:code[@code='59785-6'][@codeSystem='2.16.840.1.113883.6.1'])=1"
				>ERRORE-b26| L'elemento entry/substanceAdministration/entryRelationship/observation (Condizioni sanitarie a rischio)  DEVE contenere un elemento 'code' valorizzato con gli attributi @code='59785-6' e @codeSystem='2.16.840.1.113883.6.1'</assert>			
				<assert test="count($condition)=0 or 
				count($condition/hl7:statusCode[@code='completed'])=1"
				>ERRORE-b27| L'elemento entry/substanceAdministration/entryRelationship/observation (Condizioni sanitarie a rischio)  DEVE contenere un elemento 'statusCode' valorizzato con @code='completed'.</assert>			
				<assert test="count($condition)=0 or 
				count($condition/hl7:value[@xsi:type='CD'][@codeSystem='2.16.840.1.113883.6.103'])=1"
				>ERRORE-b28| L'elemento entry/substanceAdministration/entryRelationship/observation (Condizioni sanitarie a rischio)  DEVE contenere un elemento 'value' valorizzato con l'attributo @xsi:type='CD' e @codeSystem='2.16.840.1.113883.6.103' (ICD-9-CM)</assert>
				
					<!--Vaccinazioni: entryRelationship - reazioni Avverse-->
				<let name="reaction" value="hl7:substanceAdministration[hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.11.4.1']]/hl7:entryRelationship[@typeCode='CAUS']"/>
				<assert test="count(hl7:substanceAdministration/hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.11.4.1'])=0 or 
				count($reaction)&lt;=1"
				>ERRORE-b29| L'elemento entry/substanceAdministration/entryRelationship/observation (Reazioni avverse) può essere presente al più una sola volta.</assert>
				<assert test="count($reaction)=0 or 
				count($reaction/hl7:observation/hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.11.4.8'])=1"
				>ERRORE-b30| L'elemento entry/substanceAdministration/entryRelationship/observation (Reazioni avverse) DEVE contenere un elemento 'templateId' valorizzato con @root='2.16.840.1.113883.2.9.10.1.11.4.8'</assert>			
				<assert test="count($reaction)=0 or 
				count($reaction/hl7:observation/hl7:code[@code='31044-1'][@codeSystem='2.16.840.1.113883.6.1'])=1"
				>ERRORE-b31| L'elemento entry/substanceAdministration/entryRelationship/observation (Reazioni avverse) DEVE contenere un elemento 'code' valorizzato con gli attributi @code='31044-1' e @codeSystem='2.16.840.1.113883.6.1'</assert>			
				<assert test="count($reaction)=0 or 
				count($reaction/hl7:observation/hl7:statusCode[@code='completed'])=1"
				>ERRORE-b32| L'elemento entry/substanceAdministration/entryRelationship/observation (Reazioni avverse) DEVE contenere un elemento 'statusCode' valorizzato con @code='completed'</assert>						
				<assert test="count($reaction/hl7:observation/hl7:value)=0 or
				count($reaction/hl7:observation/hl7:value[@xsi:type='CD'][@codeSystem='2.16.840.1.113883.6.103'])=1"
				>ERRORE-b33| L'elemento entry/substanceAdministration/entryRelationship/observation (Reazioni avverse) DEVE contenere un elemento 'value' valorizzato con l'attributo @xsi:type='CD' e @codeSystem='2.16.840.1.113883.6.103' (ICD-9-CM)</assert>


		
			<!--entry - Dati esonero/omissione o differimento-->
			<assert test="count(hl7:substanceAdministration[hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.11.4.2']])=0 or 
			count(hl7:substanceAdministration[hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.11.4.2']]/hl7:statusCode[@code='cancelled'])=1"
			>ERRORE-b34| L'elemento entry/substanceAdministration (in Dati Esonero/omissione o differimento) DEVE contenere un elemento 'statusCode' valorizzato con @code='cancelled' </assert>
			<let name="farma_de" value="hl7:substanceAdministration[hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.11.4.2']]/hl7:consumable/hl7:manufacturedProduct/hl7:manufacturedMaterial"/>
			<assert test="count($farma_de/hl7:code)=0 or
			count($farma_de/hl7:code[@codeSystem='2.16.840.1.113883.2.9.6.1.5'])=1"
			>ERRORE-b35| L'elemento entry/substanceAdministration/consumable/manufacturedProduct/manufacturedMaterial (in Dati Esonero/omissione o differimento) può contenere un elemento 'code' valorizzato secondo AIC - @codeSystem='2.16.840.1.113883.2.9.6.1.5'.</assert>
			<assert test="count($farma_de/hl7:code/hl7:translation)=0 or
			(count($farma_de/hl7:code/hl7:translation[@codeSystem='2.16.840.1.113883.6.73'])=1)"
			>ERRORE-b36| L'elemento entry/substanceAdministration/consumable/manufacturedProduct/manufacturedMaterial/code (in Dati Esonero/omissione o differimento) può contenere un elemento 'translation' valorizzato secondo ATC - @codeSystem='2.16.840.1.113883.6.73'.</assert>
		
		
			<!--Vaccinazioni: entryRelationship - Ragione esonero/omissione o differimento-->
			<let name="reason" value="hl7:substanceAdministration[hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.11.4.2']]/hl7:entryRelationship[@typeCode='RSON']/hl7:observation[hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.11.4.10']]"/>
			
			<assert test="count(hl7:substanceAdministration[hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.11.4.2']])=0 or 
			count($reason)=1"
			>ERRORE-b37| L'elemento entry/substanceAdministration/entryRelationship relativo alla "Ragione esonero/omissione o differimento" DEVE essere presente. </assert>						
			<assert test="count(hl7:substanceAdministration[hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.11.4.2']])=0 or
			count($reason/hl7:code[@code='85714-4'][@codeSystem='2.16.840.1.113883.6.1'])=1"
			>ERRORE-b38| L'elemento entry/substanceAdministration/entryRelationship/observation (Ragione esonero/omissione o differimento) DEVE contenere  un elemento 'code' valorizzato con gli attributi @code='85714-4' e @codeSystem='2.16.840.1.113883.6.1'</assert>					
			<assert test="count(hl7:substanceAdministration[hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.11.4.2']])=0 or
			count($reason/hl7:statusCode[@code='completed'])=1"
			>ERRORE-b39| L'elemento entry/substanceAdministration/entryRelationship/observation (Ragione esonero/omissione o differimento) DEVE contenere  un elemento 'statusCode' valorizzato con l'attributo @code='completed'.</assert>			
			<assert test="count(hl7:substanceAdministration[hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.11.4.2']])=0 or
			count($reason/hl7:effectiveTime/hl7:low)=1"
			>ERRORE-b40| L'elemento entry/substanceAdministration/entryRelationship/observation (Ragione esonero/omissione o differimento) DEVE contenere  un elemento 'effectiveTime' col sottoelemento 'low' valorizzato.</assert>				
			<assert test="count(hl7:substanceAdministration[hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.11.4.2']])=0 or
			count($reason/hl7:effectiveTime/hl7:high)=1"
			>ERRORE-b41| L'elemento entry/substanceAdministration/entryRelationship/observation (Ragione esonero/omissione o differimento) DEVE contenere  un elemento 'effectiveTime' col sottoelemento 'high' valorizzato.</assert>
		
		</rule>
		
		
		<!--entryRelationship - periodo di copertura/prossimo appuntamento-->
		<rule context="hl7:ClinicalDocument/hl7:component/hl7:structuredBody/hl7:component/hl7:section/hl7:entry/hl7:substanceAdministration[hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.11.4.1']]/hl7:entryRelationship[@typeCode='REFR']">
			
			<assert test="count(hl7:observation/hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.11.4.4'])=1"
			>ERRORE-b42| L'elemento entry/substanceAdministration/entryRelationship/observation (Periodo di copertura/prossimo appuntament) DEVE contenere un elemento 'templateId' valorizzato con @root='2.16.840.1.113883.2.9.10.1.11.4.4'.</assert>
			<assert test="(count(hl7:observation/hl7:code[@code='59778-1'][@codeSystem='2.16.840.1.113883.6.1'])=1 or
			count(hl7:observation/hl7:code[@code='59778-1'][@codeSystem='2.16.840.1.113883.4.642.3.308'])=1) or
			(count(hl7:observation/hl7:code[@code='30980-7'][@codeSystem='2.16.840.1.113883.6.1'])=1 or
			count(hl7:observation/hl7:code[@code='30980-7'][@codeSystem='2.16.840.1.113883.4.642.3.308'])=1)"
			>ERRORE-b43| L'elemento entry/substanceAdministration/entryRelationship/observation (Periodo di copertura/prossimo appuntament) DEVE contenere un elemento 'code' valorizzato con 
			- 59778-1 per Periodo di copertura:
			- 30980-7 per prossimo appuntamento.</assert>	
			<assert test="count(hl7:observation/hl7:statusCode[@code='completed'])=1"
			>ERRORE-b44| L'elemento entry/substanceAdministration/entryRelationship/observation (Periodo di copertura/prossimo appuntament) DEVE contenere un elemento 'statusCode' valorizzato con @code='completed'.</assert>	
			<assert test="count(hl7:observation/hl7:value[@xsi:type='IVL_TS' or @xsi:type='TS'])=1"
			>ERRORE-b45| L'elemento entry/substanceAdministration/entryRelationship/observation (Periodo di copertura/prossimo appuntament) DEVE contenere un elemento 'value' valorizzato con l'attributo @xsi:type='IVL_TS'</assert>
			
		
		</rule>
				
		<!--Vaccinazioni: entry/substanceAdministration/entryRelationship - dati vaccinazione- malattia per cui si effettua la vaccinazione-->
		<rule context="hl7:ClinicalDocument/hl7:component/hl7:structuredBody/hl7:component/hl7:section/hl7:entry/hl7:substanceAdministration/hl7:entryRelationship[@typeCode='RSON'][hl7:observation/hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.11.4.9']]">
		
			<assert test="count(hl7:observation[hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.11.4.9']]/hl7:code[@code='75323-6'][@codeSystem='2.16.840.1.113883.6.1'])=1"
			>ERRORE-b46| L'elemento entry/substanceAdministration/entryRelationship/observation (malattia per cui si effettua la vaccinazione) DEVE contenere un elemento 'code' valorizzato con gli attributi @code='75323-6' e @codeSystem='2.16.840.1.113883.6.1'</assert>
			<assert test="count(hl7:observation[hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.11.4.9']]/hl7:statusCode[@code='completed'])=1"
			>ERRORE-b47| L'elemento entry/substanceAdministration/entryRelationship/observation (malattia per cui si effettua la vaccinazione) DEVE contenere un elemento 'statusCode' valorizzato con @code='completed'</assert>
			<assert test="count(hl7:observation[hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.11.4.9']]/hl7:value[@xsi:type='CD'][@codeSystem='2.16.840.1.113883.6.103'])=1"
			>ERRORE-b48| L'elemento entry/substanceAdministration/entryRelationship/observation (malattia per cui si effettua la vaccinazione) DEVE contenere un elemento 'value' valorizzato con l'attributo @xsi:type='CD' e @codeSystem='2.16.840.1.113883.6.103' (ICD-9-CM)</assert>
		
		</rule>
			
			
		<!--Vaccinazioni: entry/substanceAdministration/entryRelationship - Esonero/omissione o differimento - Malattia con presunta immunità-->			
		<rule context="hl7:ClinicalDocument/hl7:component/hl7:structuredBody/hl7:component/hl7:section/hl7:entry/hl7:substanceAdministration[hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.11.4.2']]/hl7:entryRelationship[@typeCode='RSON'][hl7:observation/hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.11.4.7']]">
		
			<assert test="count(hl7:observation/hl7:code[@code='59784-9'][@codeSystem='2.16.840.1.113883.6.1'])=1"
			>ERRORE-b49| L'elemento entry/substanceAdministration/entryRelationship/observation (malattia con presunta immunità) DEVE contenere un elemento 'code' valorizzato con gli attributi @code='59784-9' e @codeSystem='2.16.840.1.113883.6.1'</assert>
			<assert test="count(hl7:observation/hl7:statusCode[@code='completed'])=1"
			>ERRORE-b50| L'elemento entry/substanceAdministration/entryRelationship/observation (malattia con presunta immunità) DEVE contenere un elemento 'statusCode' valorizzato con l'attributo @code='completed' </assert>
			<assert test="count(hl7:observation/hl7:value)=0 or count(hl7:observation/hl7:value[@codeSystem='2.16.840.1.113883.6.103'])=1"
			>ERRORE-b51| L'elemento entry/substanceAdministration/entryRelationship/observation (malattia con presunta immunità) DEVE contenere un elemento 'value' che deve essere valorizzato secondo il sistema di codifica ICD-9-CM (@codeSystem='2.16.840.1.113883.6.103')</assert>
		
		</rule>
	
		<!--controli template ER @typeCode='RSON'-->
		<rule context="hl7:ClinicalDocument/hl7:component/hl7:structuredBody/hl7:component/hl7:section/hl7:entry/hl7:substanceAdministration/hl7:entryRelationship[@typeCode='RSON']">
			
			<assert test="count(hl7:observation/hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.11.4.5'])=1 or
			count(hl7:observation/hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.11.4.6'])=1 or
			count(hl7:observation/hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.11.4.7'])>=1 or
			count(hl7:observation/hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.11.4.9'])>=1 or
			count(hl7:observation/hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.11.4.10'])=1"
			>ERRORE b52| Ciascuno di questi templateId è contenuto in una entryRelationship con l'attributo @typeCode='RSON'.
			- @root='2.16.840.1.113883.2.9.10.1.11.4.5' (Categorie a rischio)
			- @root='2.16.840.1.113883.2.9.10.1.11.4.6' (Condizioni sanitarie)
			- @root='2.16.840.1.113883.2.9.10.1.11.4.7' (Malattia con presunta immunità)
			- @root='2.16.840.1.113883.2.9.10.1.11.4.9' (Malattia per cui si effettua la vaccinazione)
			- @root='2.16.840.1.113883.2.9.10.1.11.4.10' (Ragione dell'esonero)</assert>
		
		</rule>
			
			
		
	</pattern>
</schema>
",
      "subType": "00"
    }
  },
  "version": "3.1",
  "template_id_root": "2.16.840.1.113883.2.9.10.1.11.1.2",
  "last_update_date": {
    "$date": "2023-01-16T22:59:31.271Z"
  },
  "deleted": false,
  "last_sync": {
    "$date": "2023-01-16T23:00:03.543Z"
  }
},{
  "_id": {
    "$oid": "63c5d6d5d370ce753aa6817c"
  },
  "name_schematron": "schematron_VPS_v 2.9.sch",
  "content_schematron": {
    "$binary": {
      "base64": "<?xml version="1.0" encoding="UTF-8"?>
<!-- schematron versione:2.9-->
<schema xmlns="http://purl.oclc.org/dsdl/schematron" 
		xmlns:cda="urn:hl7-org:v3"
        xmlns:iso="http://purl.oclc.org/dsdl/schematron"
        xmlns:sch="http://www.ascc.net/xml/schematron"
        queryBinding="xslt2">
	<title>Schematron Verbale di Pronto Soccorso V 1.0 </title>
	<ns prefix="hl7" uri="urn:hl7-org:v3"/>
	<ns prefix="xsi" uri="http://www.w3.org/2001/XMLSchema-instance"/>
	<pattern id="all">


<!--________________________________ HEADER _____________________________________________________________-->
	
	<!-- ClinicalDocument -->
		<rule context="hl7:ClinicalDocument">
	        <!--Controllo realmCode-->	
			<assert test="count(hl7:realmCode)>=1"
			>ERRORE-1| L'elemento <name/> DEVE avere almeno un elemento 'realmCode'</assert>
			<assert test="count(hl7:realmCode[@code='IT'])= 1"
			>ERRORE-2| L'elemento 'realmCode' DEVE avere l'attributo @code valorizzato come 'IT'</assert>
	        
			<!--Controllo templateId-->
			<let name="num_tid" value="count(hl7:templateId)"/>
			<assert test="$num_tid >= 1"
			>ERRORE-3| L'elemento <name/> DEVE avere almeno un elemento di tipo 'templateId'</assert>
			<assert test="count(hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.6.1'])= 1 and  count(hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.6.1']/@extension)= 1"
			>ERRORE-4| Almeno un elemento 'templateId' DEVE essere valorizzato attraverso l'attributo @root='2.16.840.1.113883.2.9.10.1.6.1' (id del template nazionale), associato all'attributo @extension che  indica la versione a cui il templateId fa riferimento</assert>
			
			<!--Controllo code-->	
			<assert test="count(hl7:code[@code='59258-4'][@codeSystem='2.16.840.1.113883.6.1']) = 1"
			>ERRORE-5| L'elemento <name/>/code deve essere valorizzato con l'attributo @code='59258-4' e il @codeSystem='2.16.840.1.113883.6.1'</assert>
			
			<report test="not(count(hl7:code[@codeSystemName='LOINC'])=1) or not(count(hl7:code[@displayName='Verbale di Pronto Soccorso'])=1 or
			count(hl7:code[@displayName='VERBALE DI PRONTO SOCCORSO'])=1)"
			>W001| Si raccomanda di valorizzare gli attributi dell'elemento <name/>/code nel seguente modo: @codeSystemName ='LOINC' e @displayName ='Verbale di Pronto Soccorso'.--> </report>
			
			
			
			<!--Controllo confidentialityCode-->
			<assert test="(count(hl7:confidentialityCode[@code='N'][@codeSystem='2.16.840.1.113883.5.25'])= 1) or 
			(count(hl7:confidentialityCode[@code='V'][@codeSystem='2.16.840.1.113883.5.25'])= 1)"
			>ERRORE-6| L'elemento 'confidentialityCode' di <name/> DEVE avere l'attributo @code valorizzato con 'N' o 'V', e il @codeSystem='2.16.840.1.113883.5.25'</assert>
			
			<!--Controllo languageCode-->	
			<assert test="count(hl7:languageCode)=1"
			>ERRORE-7| L'elemento <name/> DEVE contenere un solo elemento 'languageCode' </assert>
		
			<!--Controllo incrociato tra setId-versionNumber e relatedDocument-->
			<let name="versionNumber" value="hl7:versionNumber/@value"/>
			<assert test="(string(number($versionNumber)) = 'NaN') or
					($versionNumber= '1' and hl7:id/@root = hl7:setId/@root and hl7:id/@extension = hl7:setId/@extension) or
					($versionNumber!= '1' and hl7:id/@root = hl7:setId/@root and hl7:id/@extension != hl7:setId/@extension) or
					(hl7:id/@root != hl7:setId/@root)"
			>ERRORE-8| Se ClinicalDocument.id e ClinicalDocument.setId usano lo stesso dominio di identificazione (@root identico) allora l’attributo @extension del
			ClinicalDocument.id deve essere diverso da quello del ClinicalDocument.setId a meno che ClinicalDocument.versionNumber non sia uguale ad 1; cioè i valori di setId ed id per un documento clinico possono coincidere solo per la prima versione di un documento</assert>
			
			<assert test="(string(number($versionNumber)) ='NaN') or
						  ($versionNumber=1) or 
						  (($versionNumber &gt;1) and count(hl7:relatedDocument)=1)"
			>ERRORE-9| Se l'attributo <name/>/versionNumber/@value è maggiore di 1, l'elemento <name/>  deve contenere un elemento di tipo 'relatedDocument'</assert>
			
			<!--Controllo recordTarget-->
			<assert test="count(hl7:recordTarget)=1"
			>ERRORE-10| L'elemento <name/> DEVE contenere un solo elemento 'recordTarget' </assert>
			
			<!--Controllo recordTarget/patientRole/id-->
			<assert test="count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.4.3.2'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.4.3.7'])=1 or 
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.4.3.3'])=1 or 
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.4.3.18'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.4.3.17'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.4.3.15'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.2.10.4.1'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.2.20.4.1'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.2.30.4.1'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.2.41.4.1'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.2.42.4.1'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.2.50.4.1'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.2.60.4.1'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.2.70.4.1'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.2.80.4.1'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.2.90.4.1'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.2.100.4.1'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.2.110.4.1'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.2.120.4.1'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.2.130.4.1'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.2.140.4.1'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.2.150.4.1'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.2.160.4.1'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.2.170.4.1'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.2.180.4.1'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.2.190.4.1'])=1 or
			count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.2.200.4.1'])=1"
			>ERRORE-11a| L'elemento <name/>/recordTarget/patientRole/id  deve avere l'attributo @root valorizzato tramite una  delle seguenti identificatori Nazionanli:
			CF 2.16.840.1.113883.2.9.4.3.2
			TEAM 2.16.840.1.113883.2.9.4.3.7 o 2.16.840.1.113883.2.9.4.3.3
			ENI 2.16.840.1.113883.2.9.4.3.18
			STP 2.16.840.1.113883.2.9.4.3.17
			ANA 2.16.840.1.113883.2.9.4.3.15
			Oppure tramite gli identificatori regionali generati per rappresentare l'id del paziente.
			</assert>
			
			<!--Controllo patientRole/addr-->
			<let name="num_addr" value="count(hl7:recordTarget/hl7:patientRole/hl7:addr)"/>
			
			<assert test="$num_addr=0 or (count(hl7:recordTarget/hl7:patientRole/hl7:addr/hl7:country)=$num_addr and 
			count(hl7:recordTarget/hl7:patientRole/hl7:addr/hl7:city)=$num_addr and 
			count(hl7:recordTarget/hl7:patientRole/hl7:addr/hl7:streetAddressLine)=$num_addr)"
			>ERRORE-11| L'elemento <name/>/recordTarget/patientRole/addr DEVE riportare i sotto-elementi 'country', 'city' e 'streetAddressLine' </assert>
			
			<!--Controllo recordTarget/patientRole/patient/name-->
			<let name="patient" value="hl7:recordTarget/hl7:patientRole/hl7:patient"/>
			<assert test="count($patient)=1 "
			>ERRORE-12| L'elemento <name/>/recordTaget/patientRole DEVE contenere l'elemento patient</assert>
			<assert test="count($patient)=0 or count($patient/hl7:name)=1"
			>ERRORE-13| L'elemento <name/>/recordTaget/patientRole/patient DEVE contenere l'elemento 'name'</assert>
			<assert test="count($patient)=0 or (count($patient/hl7:name/hl7:given)=1 and count($patient/hl7:name/hl7:family)=1)"
			>ERRORE-14| L'elemento <name/>/recordTaget/patientRole/patient/name DEVE riportare gli elementi 'given' e 'family'</assert>
			
			<!--Controllo patient/administrativeGenderCode-->
			<let name="genderOID" value="hl7:recordTarget/hl7:patientRole/hl7:patient/hl7:administrativeGenderCode/@codeSystem"/>
			
			<assert test="count($patient)=0 or count(hl7:recordTarget/hl7:patientRole/hl7:patient/hl7:administrativeGenderCode)=1"
			>ERRORE-15| L'attributo <name/>/recordTarget/patientRole/patient DEVE contenere l'elemento administrativeGenderCode </assert>
			<assert test="count($patient)=0 or $genderOID='2.16.840.1.113883.5.1'"
			>ERRORE-16| L'OID assegnato all'attributo <name/>/recordTarget/patientRole/patient/administrativeGenderCode/@codeSystem='<value-of select="$genderOID"/>' non è corretto. L'attributo DEVE essere valorizzato con '2.16.840.1.113883.5.1' </assert>
			
			<!--Controllo recordTarget/patientRole/patient/birthTime-->
			<assert test="count($patient)=0 or
			(count(hl7:recordTarget/hl7:patientRole/hl7:id[@root='2.16.840.1.113883.2.9.4.3.2' or 
			@root='2.16.840.1.113883.2.9.4.3.7' or @root='2.16.840.1.113883.2.9.4.3.3' or 
			@root='2.16.840.1.113883.2.9.4.3.17'])=0) or 
			count(hl7:recordTarget/hl7:patientRole/hl7:patient/hl7:birthTime)=1"
			>ERRORE-17| L'elemento <name/>/recordTaget/patientRole/patient DEVE riportare un elemento 'birthTime'.</assert>
			
			<!--Controllo recordTarget/patientRole/patient/birthplace/place/addr-->
			<assert test="count(hl7:recordTarget/hl7:patientRole/hl7:patient/hl7:birthplace)=0 or 
			count(hl7:recordTarget/hl7:patientRole/hl7:patient/hl7:birthplace/hl7:place/hl7:addr)=1"
			>ERRORE-18| L'elemento <name/>/recordTarget/patientRole/patient/birthplace DEVE contenere un elemento place/addr </assert>	
			
			
			<!--Controllo dataEnterer-->	
			<assert test="count(hl7:dataEnterer)=0 or count(hl7:dataEnterer/hl7:time)=1"
			>ERRORE-22| L'elemento <name/>/dataEnterer se presnete, DEVE contenere un elemento 'time'</assert>
			
			<let name="id_dataEnterer" value="hl7:dataEnterer/hl7:assignedEntity/hl7:id"/>
			<assert test="count(hl7:dataEnterer)=0 or count($id_dataEnterer[@root='2.16.840.1.113883.2.9.4.3.2'])=1"
			>ERRORE-23| L'elemento <name/>/dataEnterer/assignedEntity DEVE avere almeno un elemento 'id' <value-of select="$id_dataEnterer"/> con l'attributo @root='2.16.840.1.113883.2.9.4.3.2'</assert>
			
			<!--Controllo dataEnterer/assignedEntity/assignedPerson-->
			<let name="nome" value="hl7:dataEnterer/hl7:assignedEntity/hl7:assignedPerson/hl7:name"/>
			<assert test="count(hl7:dataEnterer)=0 or (count(hl7:dataEnterer/hl7:assignedEntity/hl7:assignedPerson/hl7:name)=1)"
			>ERRORE-24| L'elemento <name/>/dataEnterer/assignedEntity DEVE riportare l'elemento 'assignedPerson/name'.</assert>
			<assert test="count(hl7:dataEnterer)=0 or (count($nome/hl7:family)=1 and count($nome/hl7:given)=1)"
			>ERRORE-25| L'elemento <name/>/dataEnterer/assignedEntity/assignedPerson/name DEVE avere gli elementi 'given' e 'family'.</assert>	
			
			<!--Controllo custodian/assignedCustodian/representedCustodianOrganization-->
			<assert test="count(hl7:custodian/hl7:assignedCustodian/hl7:representedCustodianOrganization/hl7:name)=1"
			>ERRORE-26| L'elemento <name/>/custodian/assignedCustodian/representedCustodianOrganization deve contenere un elemento 'name'</assert>
			
			<let name="num_addr_cust" value="count(hl7:custodian/hl7:assignedCustodian/hl7:representedCustodianOrganization/hl7:addr)"/>
			<let name="addr_cust" value="hl7:custodian/hl7:assignedCustodian/hl7:representedCustodianOrganization/hl7:addr"/>
			<assert test="$num_addr_cust=0 or (count($addr_cust/hl7:country)=$num_addr_cust and
			count($addr_cust/hl7:city)=$num_addr_cust and 
			count($addr_cust/hl7:streetAddressLine)=$num_addr_cust)"
			>ERRORE-27| L'elemento <name/>/custodian/assignedCustodian/representedCustodianOrganization/addr DEVE riportare i sotto-elementi 'country','city' e 'streetAddressLine'</assert>
			
			 <!--Controllo legalAuthenticator-->
			<assert test="count(hl7:legalAuthenticator)=1" 
			>ERRORE-28| L'elemento <name/>/legalAuthenticator è obbligatorio</assert>
			<assert test="count(hl7:legalAuthenticator)= 0 or count(hl7:legalAuthenticator/hl7:signatureCode[@code='S'])=1" 
			>ERRORE-29| L'elemento <name/>/legalAuthenticator/signatureCode deve essere valorizzato con il codice "S" </assert>
			<assert test="count(hl7:legalAuthenticator)= 0 or count(hl7:legalAuthenticator/hl7:assignedEntity/hl7:id[@root='2.16.840.1.113883.2.9.4.3.2'])=1"
			>ERRORE-30| L'elemento <name/>/legalAuthenticator/assignedEntity DEVE contenere almeno un elemento id valorizzato con l'attributo @root='2.16.840.1.113883.2.9.4.3.2'</assert>
			<assert test = "count(hl7:legalAuthenticator)= 0 or count(hl7:legalAuthenticator/hl7:assignedEntity/hl7:assignedPerson/hl7:name)=1"
			>ERRORE-31| L'elemento legalAuthenticator/assignedEntity/assignedPerson DEVE contenere l'elemento 'name'</assert>
			<assert test = "count(hl7:legalAuthenticator)= 0 or count(hl7:legalAuthenticator/hl7:assignedEntity/hl7:assignedPerson/hl7:name/hl7:family)=1 and count(hl7:legalAuthenticator/hl7:assignedEntity/hl7:assignedPerson/hl7:name/hl7:given)=1"
			>ERRORE-32| L'elemento legalAuthenticator/assignedEntity/assignedPerson/name DEVE riportare gli elementi 'given' e 'family'</assert>
			
		
			<!--Controllo componentOf-->
			<assert test="count(hl7:componentOf)=1"
			>ERRORE-37| L'elemento <name/>/componentOf è obbligatorio </assert>
			<assert test="count(hl7:componentOf)=0 or 
			count(hl7:componentOf/hl7:encompassingEncounter/hl7:effectiveTime/hl7:low)=1 and 
			count(hl7:componentOf/hl7:encompassingEncounter/hl7:effectiveTime/hl7:high)=1"
			>ERRORE-38| L'elemento <name/>/componentOf/encompassingEncounter/effectiveTime deve contenere gli elementi 'low' e 'high' valorizzati </assert>
			
			<let name="path_name" value="hl7:componentOf/hl7:encompassingEncounter/hl7:responsibleParty/hl7:assignedEntity/hl7:assignedPerson/hl7:name"/>
			<assert test="count(hl7:componentOf/hl7:encompassingEncounter/hl7:responsibleParty/hl7:assignedEntity/hl7:assignedPerson)=0 or 
			count (hl7:componentOf/hl7:encompassingEncounter/hl7:responsibleParty/hl7:assignedEntity/hl7:assignedPerson/hl7:name)=1 "
			>ERRORE-39| Deve essere presente l'elemento <name/>/componentOf/encompassingEncounter/responsibleParty/assignedentity/assignedPerson/name </assert>
			<assert test="count(hl7:componentOf/hl7:encompassingEncounter/hl7:responsibleParty/hl7:assignedEntity/hl7:assignedPerson)=0 or 
			(count($path_name/hl7:given)=1 and count($path_name/hl7:family)=1)"
			>ERRORE-40| L'elemento <name/>/componentOf/encompassingEncounter/responsibleParty/assignedentity/assignedPerson/name deve contenere gli elementi 'given' e 'family' </assert>
		    <assert test="count(hl7:componentOf)=0 or count(hl7:componentOf/hl7:encompassingEncounter/hl7:location)=1"
			>ERRORE-41| L'elemento <name/>/encompassingEncounter DEVE contenere l'elemento 'location'</assert>

			<assert test="count(hl7:componentOf/hl7:encompassingEncounter/hl7:location/hl7:healthCareFacility/hl7:serviceProviderOrganization)=0 or 
			count (hl7:componentOf/hl7:encompassingEncounter/hl7:location/hl7:healthCareFacility/hl7:serviceProviderOrganization/hl7:id)=1"
			>ERRORE-42| L'elemento <name/>/componentOf/encompassingEncounter/location/healthcareFacility/serviceProviderOrganization deve contenere l'elemento 'id' </assert>
				
		</rule>
		
		<!-- Controllo author-->
		<rule context="hl7:ClinicalDocument/hl7:author">
			<!--Controllo author/assignedAuthor/id-->
			<assert test="count(hl7:assignedAuthor/hl7:id[@root='2.16.840.1.113883.2.9.4.3.2'])=1"
			>ERRORE-19| L'elemento <name/>/assignedAuthor DEVE contenere almeno un elemento 'id' con il relativo attributo @root valorizzato con '2.16.840.1.113883.2.9.4.3.2'</assert>
			
			<!--Controllo author/assignedAuthor/assignedPerson/name-->
			<let name="name_author" value="hl7:assignedAuthor/hl7:assignedPerson"/>
			<assert test="count($name_author/hl7:name)=1"
			>ERRORE-20| L'elemento <name/>/author/assignedAuthor/assignedPerson DEVE avere l'elemento 'name' </assert>
			<assert test="count($name_author/hl7:name)=0 or (count($name_author/hl7:name/hl7:given)=1 and count($name_author/hl7:name/hl7:family)=1)"
			>ERRORE-21| L'elemento <name/>/author/assignedAuthor/assignedPerson/name DEVE avere gli elementi 'given' e 'family'</assert>
		</rule>
		
		<!-- Controllo participant-->
		<rule context="hl7:ClinicalDocument/hl7:participant">
			<assert test="count(hl7:associatedEntity/hl7:id)>=1"
			>ERRORE-33| L'elemento <name/>/associatedEntity deve contenere l'elemento 'id'.</assert>
			
			<let name="num_addr_pcp" value="count(hl7:associatedEntity/hl7:addr)"/>
            <let name="addr_pcp" value="hl7:associatedEntity/hl7:addr"/>
            <assert test="$num_addr_pcp=0 or (count($addr_pcp/hl7:country)=$num_addr_pcp and
                          count($addr_pcp/hl7:city)=$num_addr_pcp and
                          count($addr_pcp/hl7:streetAddressLine)=$num_addr_pcp)"
            >ERRORE-34| L'elemento <name/>/associatedEntity/addr DEVE riportare i sotto-elementi 'country', 'city' e 'streetAddressLine' </assert>
			<assert test="count(hl7:associatedEntity/hl7:associatedPerson)=0 or 
			(count(hl7:associatedEntity/hl7:associatedPerson/hl7:name)=1)"
			>ERRORE-35| L'elemento <name/>/associatedEntity/associatedPerson deve contenere l'elemento 'name'</assert>
			
			<assert test="count(hl7:associatedEntity/hl7:associatedPerson)=0 or 
			(count(hl7:associatedEntity/hl7:associatedPerson/hl7:name/hl7:family)=1 and count(hl7:associatedEntity/hl7:associatedPerson/hl7:name/hl7:given)=1)"
			>ERRORE-36| L'elemento <name/>/associatedEntity/associatedPerson/name deve contenere gli elementi 'given' e 'family'</assert>
		</rule>
				
<!--________________________________CONTROLLI GENERICI_________________________________________________________________-->
	
		<!--Controllo use Telecom-->
		<rule context="//hl7:telecom">
			<assert test="(count(@use)=1)"
			>ERRORE-43| L’elemento 'telecom' DEVE contenere l'attributo @use </assert>
		</rule>	
		
		<!-- Controllo formato: -->
		<!--campi Codice Fiscale: 16 cifre [A-Z0-9]{16} -->
		<rule context="//hl7:id[@root='2.16.840.1.113883.2.9.4.3.2']">
			<let name="CF" value="@extension"/>
			<assert test="matches(@extension, '[A-Z0-9]{16}') and string-length($CF)=16"
			>ERRORE-44| codice fiscale '<value-of select="$CF"/>' cittadino ed operatore: 16 cifre [A-Z0-9]{16}</assert>
		</rule>
	
		<!--Controllo sugli attributi di observation-->
		<rule context="//hl7:observation">
			<let name="moodCd" value="@moodCode"/>
			<assert test="count(@classCode)=1"
			>ERRORE-45| L'attributo "@classCode" dell'elemento "observation" deve essere presente </assert>
			<assert test="$moodCd='EVN'"
			>ERRORE-46| L'attributo "@moodCode" dell'elemento "observation" deve essere valorizzato con "EVN" </assert>
		</rule>
		
		<!--Controllo sui valori di statusCode-->
		<rule context="//hl7:statusCode">
			<let name="val_status" value="@code"/>
			<assert test="$val_status='active' or  $val_status='completed' or $val_status='aborted' or $val_status='suspended'"
			>ERRORE-47| Codice ActStatus '<value-of select="$val_status"/>' errato! Deve essere valorizzato con uno dei seguenti valori:
			- active
			- completed
			- aborted
			- suspended
			</assert>
		</rule>
		
		<!--Verifica che i codici relativi al CodeSystem "UCUM" utilizzati siano corretti-->
		<!--rule context="//*[@unit]">
			<let name="val_UCUM" value="@unit"/>
			<assert test="doc('DIZ/XML_FSE_v1/2.16.840.1.113883.4.642.3.912.xml')//el[@code=$val_UCUM]"
			>ERRORE-48| Codice UCUM <value-of select="$val_UCUM"/> errato
			</assert>
		</rule-->
		
				
<!--________________________________BODY____________________________________________________________________________-->
		
		
		
		<rule context="hl7:ClinicalDocument/hl7:component/hl7:structuredBody">
		                            <!--Controllo sulle Section obbligatorie-->
			<!--1-->
			<!-- Modalità di trasporto-->
			<assert test="count(hl7:component/hl7:section/hl7:code[@code='11459-5'][@codeSystem='2.16.840.1.113883.6.1'])=1"
			>ERRORE-b1| Sezione Modalità di Trasporto: la sezione DEVE essere presente</assert>
			<assert test="count(hl7:component/hl7:section[hl7:code[@code='11459-5']]/hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.6.20'])=1"
			>ERRORE-b2| Sezione Modalità di Trasporto: la sezione deve contenere l'elemento templateId valorizzato con l'attributo @root='2.16.840.1.113883.2.9.10.1.6.20'</assert>			
			<assert test="count(hl7:component/hl7:section[hl7:code[@code='11459-5']]/hl7:text)=1 and count(hl7:component/hl7:section[hl7:code[@code='11459-5']]/hl7:entry)=1"
			>ERRORE-b3| Sezione Modalità di Trasporto: la sezione DEVE contenere un elemento 'text' e un solo elemento 'entry'</assert>
			
			
			<!--2-->
			<!--Motivo della Visita-->
			<assert test="count(hl7:component/hl7:section/hl7:code[@code='46239-0'][@codeSystem='2.16.840.1.113883.6.1'])=1"
			>ERRORE-b4| Sezione Motivo della Visita: la sezione DEVE essere presente</assert>
			<assert test="count(hl7:component/hl7:section[hl7:code[@code='46239-0']]/hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.6.42'])=1"
			>ERRORE-b5| Sezione Motivo della Visita: la sezione deve contenere l'elemento templateId valorizzato con l'attributo @root='2.16.840.1.113883.2.9.10.1.6.42'</assert>
			<assert test="count(hl7:component/hl7:section[hl7:code[@code='46239-0']]/hl7:text)=1"
			>ERRORE-b6| Sezione Motivo della Visita: la sezione DEVE contenere l'elemento 'text'</assert>
				
				<!--Motivo della visita: controllo delle 2 entry-->
				<let name="probl_principale" value="hl7:component/hl7:section[hl7:code[@code='46239-0']]/hl7:entry[hl7:observation/hl7:code[@code='56817-0']]"/>
				<let name="causa_accesso" value="hl7:component/hl7:section[hl7:code[@code='46239-0']]/hl7:entry[hl7:observation/hl7:code[@code='29298-7']]"/>
				<assert test="count($probl_principale)=1 and (count($causa_accesso)&lt;=1)"
				>ERRORE-b7| Sezione Motivo della visita: la sezione DEVE contenere almeno una 'entry' relativa al Problema Principale e può contenere una seconda 'entry' relativa alla Causa di Accesso</assert>
				
				<assert test="count($probl_principale/hl7:observation/hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.6.37'])=1"
				>ERRORE-b8| Sezione Motivo della visita: l'elemento entry/observation relativo al "Problema Principale" DEVE contenere l'elemento templateId valorizzato con l'attributo @root='2.16.840.1.113883.2.9.10.1.6.37'</assert>			
				<assert test="count($probl_principale/hl7:observation/hl7:code[@code='56817-0'][@codeSystem='2.16.840.1.113883.6.1'])=1"
				>ERRORE-b9| Sezione Motivo della visita: l'elemento entry/observation/code relativo al "Problema Principale" deve avere l'attributo @code valorizzato con '56817-0' e l'attributo @codeSystem con '2.16.840.1.113883.6.1'</assert>
				<assert test="count($probl_principale/hl7:observation/hl7:statusCode[@code='completed'])=1"
				>ERRORE-b10| Sezione Motivo della visita: l'elemento entry/observation/statusCode relativo al "Problema Principale" DEVE  assumere il valore 'completed'</assert>
				<assert test="count($probl_principale/hl7:observation/hl7:value[@codeSystem='2.16.840.1.113883.2.9.6.1.54.2'])=1"
				>ERRORE-b11| Sezione Motivo della visita: l'elemento entry/observation/value relativo al "Problema Principale" DEVE essere valorizzato col value set ProblemaPrincipale_VPS</assert>			
				
				<assert test="count($causa_accesso)=0 or 
				count($causa_accesso/hl7:observation/hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.6.87'])=1"
				>ERRORE-b12| Sezione Motivo della visita: l'elemento entry relativo alla "Causa di accesso" DEVE contenere l'elemento templateId valorizzato con l'attributo @root='2.16.840.1.113883.2.9.10.1.6.87'</assert>
				<assert test="count($causa_accesso)=0 or 
				count($causa_accesso/hl7:observation/hl7:code[@code='29298-7'][@codeSystem='2.16.840.1.113883.6.1'])=1"
				>ERRORE-b13| Sezione Motivo della visita: l'elemento entry relativo alla "Causa di accesso" DEVE contenere l'elemento code valorizzato con l'attributo @code='29298-7' e l'attributo @codeSystem='2.16.840.1.113883.6.1'</assert>
				<assert test="count($causa_accesso)=0 or 
				count($causa_accesso/hl7:observation/hl7:statusCode[@code='completed'])=1"
				>ERRORE-b14| Sezione Motivo della visita: l'elemento entry relativo alla "Causa di accesso" DEVE contenere l'elemento statusCode  col valore costante 'completed'</assert>
				<assert test="count($causa_accesso)=0 or 
				count($causa_accesso/hl7:observation/hl7:value[@xsi:type='ST'])=1"
				>ERRORE-b15| Sezione Motivo della visita: l'elemento entry relativo alla "Causa di accesso" DEVE contenere l'elemento value valorizzato tramite una stringa</assert>
			
			<!--3-->			
			<!--Triage-->
			<assert test="count(hl7:component/hl7:section/hl7:code[@code='54094-8'][@codeSystem='2.16.840.1.113883.6.1'])=1"
			>ERRORE-b16| Sezione Triage: la sezione DEVE essere presente</assert>
			<assert test="count(hl7:component/hl7:section[hl7:code[@code='54094-8']]/hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.6.21'])=1"
			>ERRORE-b17| Sezione Triage: la sezione deve contenere l'elemento templateId valorizzato con l'attributo @root='2.16.840.1.113883.2.9.10.1.6.21'</assert>
			<assert test="count(hl7:component/hl7:section[hl7:code[@code='54094-8']]/hl7:text)=1 and count(hl7:component/hl7:section[hl7:code[@code='54094-8']]/hl7:entry)=1"
			>ERRORE-b18| Sezione Triage: la sezione DEVE contenere un elemento 'text' ed un solo elemento 'entry'</assert>
			
			<!--12-->
			<!--Dimissione-->
			<assert test="count(hl7:component/hl7:section/hl7:code[@code='28574-2'][@codeSystem='2.16.840.1.113883.6.1'])=1"
			>ERRORE-b19| Sezione Dimissione: la sezione DEVE essere presente</assert>
			<assert test="count(hl7:component/hl7:section/hl7:code[@code='28574-2'])=0 or 
			count(hl7:component/hl7:section[hl7:code[@code='28574-2']]/hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.6.24'])=1"
			>ERRORE-b20| Sezione Dimissione: la sezione deve contenere l'elemento templateId valorizzato con l'attributo @root='2.16.840.1.113883.2.9.10.1.6.24'</assert>
			<assert test="count(hl7:component/hl7:section/hl7:code[@code='28574-2'])=0 or
			count(hl7:component/hl7:section[hl7:code[@code='28574-2']]/hl7:text)=1"
			>ERRORE-b21| Sezione Dimissione: la sezione DEVE contenere l'elemento 'text'</assert>
			<!--12.1-->
			<!--Controllo 1° entry/act "Dimissione"-->
				<let name="act_discharge" value="hl7:component/hl7:section[hl7:code[@code='28574-2']]/hl7:entry/hl7:act"/>
				<assert test="count(hl7:component/hl7:section/hl7:code[@code='28574-2'])=0 or
				count($act_discharge[@classCode='ACT'][@moodCode='EVN'])=1"
				>ERRORE-b22| Sezione Dimissione: l'entry "Dimissione" DEVE contenere un elemento 'act' con gli attributi @classCode='ACT' e @moodCode='EVN'</assert>
				<assert test="count(hl7:component/hl7:section/hl7:code[@code='28574-2'])=0 or
				count($act_discharge/hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.6.66'])=1"
				>ERRORE-b23| Sezione Dimissione: l'entry/act "Dimissione" DEVE contenere un elemento 'templateId' valorizzato con l'attrivuto @root='2.16.840.1.113883.2.9.10.1.6.66'</assert>
				<assert test="count(hl7:component/hl7:section/hl7:code[@code='28574-2'])=0 or
				count($act_discharge/hl7:code[@code='dimissione'][@codeSystem='2.16.840.1.113883.2.9.5.1.4'])=1"
				>ERRORE-b24| Sezione Dimissione: l'entry/act "Dimissione" DEVE contenere un elemento 'code' valorizzato con @code='dimissione' e @codeSystem='2.16.840.1.113883.2.9.5.1.4'</assert>
				<assert test="count(hl7:component/hl7:section/hl7:code[@code='28574-2'])=0 or 
				count($act_discharge/hl7:statusCode[@code='completed'])=1"
				>ERRORE-b25| Sezione Dimissione: l'entry/act "Dimissione" DEVE contenere un elemento 'statusCode' valorizzato con @code='completed'</assert>
				<assert test="count(hl7:component/hl7:section/hl7:code[@code='28574-2'])=0 or count($act_discharge/hl7:effectiveTime)=1"
				>ERRORE-b26| Sezione Dimissione: l'entry/act "Dimissione" DEVE contenere un elemento 'effectiveTime'</assert>
				<assert test="count(hl7:component/hl7:section/hl7:code[@code='28574-2'])=0 or count($act_discharge/hl7:performer)=1"
				>ERRORE-b27| Sezione Dimissione: l'entry/act "Dimissione" DEVE contenere un elemento 'performer'</assert>
				<!--Performer-->
				<assert test="count(hl7:component/hl7:section/hl7:code[@code='28574-2'])=0 or 
				count($act_discharge/hl7:performer/hl7:assignedEntity/hl7:assignedPerson/hl7:name/hl7:family)=1 and 
				count($act_discharge/hl7:performer/hl7:assignedEntity/hl7:assignedPerson/hl7:name/hl7:given)=1"
				>ERRORE-b28| Sezione Dimissione: l'entry/act/performer/assignedEntity/assignedPerson/name DEVE contenere gli elementi 'family' e 'given'</assert>
				
					<!--12.1.3-->
					<!--entryRelationship/observation Diagnosi(1..N)-->
					<assert test="count(hl7:component/hl7:section/hl7:code[@code='28574-2'])=0 or
					count($act_discharge/hl7:entryRelationship[hl7:observation/hl7:code[@code='29308-4']])>=1"
					>ERRORE-b29| Sezione Dimissione: l'entry/act "Dimissione" DEVE contenere almeno un elemento 'entryRelationship' relativo alla Diagnosi</assert>
					<!--12.1.4-->
					<!--entryRelationship/observation Esito(1..1)-->
					<assert test="count(hl7:component/hl7:section/hl7:code[@code='28574-2'])=0 or
					count($act_discharge/hl7:entryRelationship[hl7:observation/hl7:code[@code='11302-7']])=1"
					>ERRORE-b30| Sezione Dimissione: l'entry/act "Dimissione" DEVE contenere un solo elemento 'entryRelationship' relativo all'Esito</assert>
					<assert test="count(hl7:component/hl7:section/hl7:code[@code='28574-2'])=0 or
					count($act_discharge/hl7:entryRelationship/hl7:observation[hl7:code[@code='11302-7']]/hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.6.69'])=1"				
					>ERRORE-b31| Sezione Dimissione: l'entry/act/entryRelationship relativo all'Esito DEVE contenere  un elemento 'templateId' valorizzato con @root='2.16.840.1.113883.2.9.10.1.6.69'.</assert>		
					<assert test="count(hl7:component/hl7:section/hl7:code[@code='28574-2'])=0 or
					count($act_discharge/hl7:entryRelationship/hl7:observation[hl7:code[@code='11302-7']]/hl7:statusCode[@code='completed'])=1"	
					>ERRORE-b32| Sezione Dimissione: l'entry/act/entryRelationship relativo all'Esito DEVE contenere  un elemento 'statusCode' valorizzato con @code='completed'</assert>
					<assert test="count(hl7:component/hl7:section/hl7:code[@code='28574-2'])=0 or
					count($act_discharge/hl7:entryRelationship/hl7:observation[hl7:code[@code='11302-7']]/hl7:value[@codeSystem='2.16.840.1.113883.2.9.6.1.54.5'])=1"
					>ERRORE-b33| Sezione Dimissione: l'entry/act/entryRelationship relativo all'Esito DEVE contenere  un elemento 'value' valorizzato secondo il value set "EsitoTrattamento_VPS" - @codeSystem='2.16.840.1.113883.2.9.6.1.54.5'</assert>
			
			<!--12.2-->
			<!--Controllo 2° entry "Prognosi" (0..1)-->
				<let name="prognosi" value="hl7:component/hl7:section[hl7:code[@code='28574-2']]/hl7:entry[hl7:observation/hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.6.66']]"/>
				<assert test="(count($prognosi)&lt;=1)"
				>ERRORE-b34| Sezione Dimissione: l'entry/observation "Prognosi" può essere presente una sola volta</assert>
				<assert test="count($prognosi)=0 or count($prognosi/hl7:observation/hl7:code[@code='75328-5'][@codeSystem='2.16.840.1.113883.6.1'])=1"
				>ERRORE-b35| Sezione Dimissione: l'entry/observation "Prognosi" DEVE contenere un elemento 'code' valorizzato con @code='75328-5' @codeSystem='2.16.840.1.113883.6.1'</assert>
				<assert test="count($prognosi)=0 or count($prognosi/hl7:observation/hl7:statusCode[@code='completed'])=1"
				>ERRORE-b36| Sezione Dimissione: l'entry/observation "Prognosi" DEVE contenere un elemento 'statusCode' valorizzato con @code='completed'</assert>
				<assert test="count($prognosi)=0 or count($prognosi/hl7:observation/hl7:value)=1"
				>ERRORE-b37| Sezione Dimissione: l'entry/observation "Prognosi" DEVE contenere un elemento 'value'</assert>
			
			<!--12.3-->
			<!--Controllo 3° entry "Livello appropriatezza" (0..1)-->
				<let name="appropriatezza" value="hl7:component/hl7:section[hl7:code[@code='28574-2']]/hl7:entry[hl7:observation/hl7:code[@code='11283-9']]"/>
				<assert test="(count($appropriatezza)&lt;=1)"
				>ERRORE-b38| Sezione Dimissione: l'entry/observation "Livello di Appropriatezza" può essere presente una sola volta</assert>
				<assert test="count($appropriatezza)=0 or count($appropriatezza/hl7:observation/hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.6.72'])=1"
				>ERRORE-b39| Sezione Dimissione: l'entry/observation "Livello di Appropriatezza" DEVE contenere un elemento 'templateId' valorizzato con @root='2.16.840.1.113883.2.9.10.1.6.72'</assert>
				<assert test="count($appropriatezza)=0 or count($appropriatezza/hl7:observation/hl7:statusCode[@code='completed'])=1"
				>ERRORE-b40| Sezione Dimissione: l'entry/observation "Livello di Appropriatezza" DEVE contenere un elemento 'statusCode' valorizzato con @code='completed'</assert>
				<assert test="count($appropriatezza)=0 or count($appropriatezza/hl7:observation/hl7:value[@codeSystem='2.16.840.1.113883.2.9.6.1.54.4'])=1"
				>ERRORE-b41| Sezione Dimissione: l'entry/observation "Livello di Appropriatezza" DEVE contenere un elemento 'value' valorizzato secondo il value set "CodiceTriage_VPS" @codeSystem='2.16.840.1.113883.2.9.6.1.54.4'</assert>
			
			<!--12.4-->
			<!--Controllo 4° entry "Data Decesso" (0..1)-->
				<let name="data_decesso" value="hl7:component/hl7:section[hl7:code[@code='28574-2']]/hl7:entry[hl7:observation/hl7:code[@code='31211-6']]"/>
				<assert test="(count($data_decesso)&lt;=1)"
				>ERRORE-b42| Sezione Dimissione: l'entry/observation "Data Decesso" può essere presente una sola volta</assert>
				<assert test="count($data_decesso)=0 or count($data_decesso/hl7:observation/hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.6.86'])=1"
				>ERRORE-b43| Sezione Dimissione: l'entry/observation "Data Decesso" DEVE contenere un elemento 'templateId' valorizzato con @root='2.16.840.1.113883.2.9.10.1.6.86'</assert>
				<assert test="count($data_decesso)=0 or count($data_decesso/hl7:observation/hl7:statusCode[@code='completed'])=1"
				>ERRORE-b44| Sezione Dimissione: l'entry/observation "Data Decesso" DEVE contenere un elemento 'statusCode' @code='completed'</assert>
				<assert test="count($data_decesso)=0 or count($data_decesso/hl7:observation/hl7:effectiveTime)=1"
				>ERRORE-b45| Sezione Dimissione: l'entry/observation "Data Decesso" DEVE contenere un elemento 'effectiveTime'</assert>
			
			<!--12.5-->
			<!--Controllo 5° entry "Richiesta Autopsia" (0..1)-->
				<let name="autopsia" value="hl7:component/hl7:section[hl7:code[@code='28574-2']]/hl7:entry[hl7:observation/hl7:code[@code='45477-7']]"/>
				<assert test="(count($autopsia)&lt;=1)"
				>ERRORE-b46| Sezione Dimissione: l'entry/observation "Richiesta Autopsia" può essere presente una sola volta</assert>
				<assert test="count($autopsia)=0 or count($autopsia/hl7:observation/hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.6.73'])=1"
				>ERRORE-b47| Sezione Dimissione: l'entry/observation "Richiesta Autopsia" DEVE contenere un elemento 'templateId' @root='2.16.840.1.113883.2.9.10.1.6.73'</assert>
				<assert test="count($autopsia)=0 or count($autopsia/hl7:observation/hl7:statusCode[@code='completed'])=1"
				>ERRORE-b48| Sezione Dimissione: l'entry/observation "Richiesta Autopsia" DEVE contenere un elemento 'statusCode' @code='completed'</assert>
				<assert test="count($autopsia)=0 or count($autopsia/hl7:observation/hl7:value[@xsi:type='BL'])=1"
				>ERRORE-b49| Sezione Dimissione: l'entry/observation "Richiesta Autopsia" DEVE contenere un elemento 'value' di tipo @xsi:type='BL'</assert>
			
									<!--Controllo sulle Section opzionali-->
			<!--4-->
			<!--Inquadramento Clinico Iniziale-->		
			<assert test="count(hl7:component/hl7:section[hl7:code[@code='78337-3']])=0 or
			count(hl7:component/hl7:section[hl7:code[@code='78337-3']]/hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.6.56'])=1"
			>ERRORE-b50| Sezione Inquadramento Clinico Iniziale: la sezione deve contenere l'elemento templateId valorizzato con l'attributo @root='2.16.840.1.113883.2.9.10.1.6.56'</assert>	
			<assert test="count(hl7:component/hl7:section[hl7:code[@code='78337-3']])=0 or
			(count(hl7:component/hl7:section[hl7:code[@code='78337-3']]/hl7:component/hl7:section[hl7:code[@code='11329-0']])=1 or
			count(hl7:component/hl7:section[hl7:code[@code='78337-3']]/hl7:component/hl7:section[hl7:code[@code='29545-1']])=1 or
			count(hl7:component/hl7:section[hl7:code[@code='78337-3']]/hl7:component/hl7:section[hl7:code[@code='42346-7']])=1 or
			count(hl7:component/hl7:section[hl7:code[@code='78337-3']]/hl7:component/hl7:section[hl7:code[@code='48765-2']])=1 or
			count(hl7:component/hl7:section[hl7:code[@code='78337-3']]/hl7:component/hl7:section[hl7:code[@code='11450-4']])=1 or
			count(hl7:component/hl7:section[hl7:code[@code='78337-3']]/hl7:text)=1)"
			>ERRORE-b51| Sezione Inquadramento Clinico Iniziale: la sezione deve contenere l'elemento 'text'</assert>
			
			<!--controllo cardinalità sotto sezioni-->
			<assert test="(count(hl7:component/hl7:section[hl7:code[@code='78337-3']]/hl7:component[hl7:section/hl7:code[@code='11329-0']])&lt;=1)"
			>ERRORE-b52| Sezione Inquadramento Clinico Iniziale: la sezione può contenere al massimo una sotto-sezione "Anamnesi"</assert>	
			<assert test="(count(hl7:component/hl7:section[hl7:code[@code='78337-3']]/hl7:component[hl7:section/hl7:code[@code='29545-1']])&lt;=1)"
			>ERRORE-b53| Sezione Inquadramento Clinico Iniziale: la sezione può contenere al massimo una sotto-sezione "Esame Obiettivo"</assert>
			<assert test="(count(hl7:component/hl7:section[hl7:code[@code='78337-3']]/hl7:component[hl7:section/hl7:code[@code='42346-7']])&lt;=1)"
			>ERRORE-b54| Sezione Inquadramento Clinico Iniziale: la sezione può contenere al massimo una sotto-sezione "Terapia Farmacologica all'ingresso"</assert>
			<assert test="(count(hl7:component/hl7:section[hl7:code[@code='78337-3']]/hl7:component[hl7:section/hl7:code[@code='48765-2']])&lt;=1)"
			>ERRORE-b55| Sezione Inquadramento Clinico Iniziale: la sezione può contenere al massimo una sotto-sezione "Allergie"</assert>
			<assert test="(count(hl7:component/hl7:section[hl7:code[@code='78337-3']]/hl7:component[hl7:section/hl7:code[@code='11450-4']])&lt;=1)"
			>ERRORE-b56| Sezione Inquadramento Clinico Iniziale: la sezione può contenere al massimo una sotto-sezione "Problemi aperti"</assert>
			
			<!--5-->		
			<!--Encounters-->	
			<assert test="count(hl7:component/hl7:section[hl7:code[@code='46240-8']])=0 or count(hl7:component/hl7:section[hl7:code[@code='46240-8']]/hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.6.50'])=1"
			>ERRORE-b57| Sezione Encounters: la sezione deve contenere l'elemento templateId valorizzato con l'attributo @root='2.16.840.1.113883.2.9.10.1.6.50'</assert>
			<assert test="count(hl7:component/hl7:section[hl7:code[@code='46240-8']])=0 or count(hl7:component/hl7:section[hl7:code[@code='46240-8']]/hl7:text)=1"
			>ERRORE-b58| Sezione Encounters: la sezione deve contenere l'elemento 'text'</assert>
			<assert test="count(hl7:component/hl7:section[hl7:code[@code='46240-8']])=0 or count(hl7:component/hl7:section[hl7:code[@code='46240-8']]/hl7:entry)>=1"
			>ERRORE-b59| Sezione Encounters: la sezione deve contenere almeno un elemento 'entry'</assert>
			
			<!--6-->
			<!--Decorso Ospedaliero-->		
			<assert test="count(hl7:component/hl7:section[hl7:code[@code='8648-8']])=0 or count(hl7:component/hl7:section[hl7:code[@code='8648-8']]/hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.6.23'])=1"
			>ERRORE-b60| Sezione Decorso Ospedaliero: la sezione deve contenere l'elemento templateId valorizzato con l'attributo @root='2.16.840.1.113883.2.9.10.1.6.23'</assert>
			<assert test="count(hl7:component/hl7:section[hl7:code[@code='8648-8']])=0 or count(hl7:component/hl7:section[hl7:code[@code='8648-8']]/hl7:text)=1"
			>ERRORE-b61| Sezione Decorso Ospedaliero: la sezione deve contenere l'elemento 'text'</assert>
			
			
			<!--7-->
			<!--Complicanze-->		
			<assert test="count(hl7:component/hl7:section[hl7:code[@code='55109-3']])=0 or count(hl7:component/hl7:section[hl7:code[@code='55109-3']]/hl7:text)=1"
			>ERRORE-b62| Sezione Complicanze: la sezione deve contenere l'elemento 'text'</assert>
			
			<!--8-->
			<!--Interventi, Prestazioni, Consulenze e Richieste-->	
			<assert test="count(hl7:component/hl7:section[hl7:code[@code='62387-6']])=0 or count(hl7:component/hl7:section[hl7:code[@code='62387-6']]/hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.6.26'])=1"
			>ERRORE-b63| Sezione Interventi, Prestazioni, Consulenze e Richieste: la sezione deve contenere l'elemento templateId valorizzato con l'attributo @root='2.16.840.1.113883.2.9.10.1.6.26'</assert>
			<assert test="count(hl7:component/hl7:section[hl7:code[@code='62387-6']])=0 or count(hl7:component/hl7:section[hl7:code[@code='62387-6']]/hl7:text)=1"
			>ERRORE-b64| Sezione Interventi, Prestazioni, Consulenze e Richieste: la sezione deve contenere l'elemento 'text'</assert>
			
			<!--9-->
			<!--Accertamenti-->		
			<assert test="count(hl7:component/hl7:section[hl7:code[@code='30954-2']])=0 or count(hl7:component/hl7:section[hl7:code[@code='30954-2']]/hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.6.27'])=1"
			>ERRORE-b65| Sezione Accertamenti: la sezione deve contenere l'elemento templateId valorizzato con l'attributo @root='2.16.840.1.113883.2.9.10.1.6.27'</assert>
			<assert test="count(hl7:component/hl7:section[hl7:code[@code='30954-2']])=0 or count(hl7:component/hl7:section[hl7:code[@code='30954-2']]/hl7:text)=1"
			>ERRORE-b66| Sezione Accertamenti: Ll sezione deve contenere l'elemento 'text'</assert>
			
			<!--10-->
			<!--Parametri Vitali-->		
			<assert test="count(hl7:component/hl7:section[hl7:code[@code='8716-3']])=0 or count(hl7:component/hl7:section[hl7:code[@code='8716-3']]/hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.6.28'])=1"
			>ERRORE-b67| Sezione Parametri Vitali: la sezione deve contenere l'elemento templateId valorizzato con l'attributo @root='2.16.840.1.113883.2.9.10.1.6.28'</assert>
			<assert test="count(hl7:component/hl7:section[hl7:code[@code='8716-3']])=0 or count(hl7:component/hl7:section[hl7:code[@code='8716-3']]/hl7:text)=1"
			>ERRORE-b68| Sezione Parametri Vitali: la sezione deve contenere l'elemento 'text'</assert>
			
			<!--11-->
			<!--Terapia farmacologica in Pronto Soccorso-->		
			<assert test="count(hl7:component/hl7:section[hl7:code[@code='29549-3']])=0 or count(hl7:component/hl7:section[hl7:code[@code='29549-3']]/hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.6.29'])=1"
			>ERRORE-b69| Sezione Terapia farmacologica in Pronto Soccorso: la sezione deve contenere l'elemento templateId valorizzato con l'attributo @root='2.16.840.1.113883.2.9.10.1.6.29'</assert>
			<assert test="count(hl7:component/hl7:section[hl7:code[@code='29549-3']])=0 or count(hl7:component/hl7:section[hl7:code[@code='29549-3']]/hl7:text)=1"
			>ERRORE-b70| Sezione Terapia farmacologica in Pronto Soccorso: la sezione deve contenere l'elemento 'text'</assert>
			
			<!--13-->
			<!--Piano di cura alla dimissione-->		
			<assert test="count(hl7:component/hl7:section[hl7:code[@code='18776-5']])=0 or count(hl7:component/hl7:section[hl7:code[@code='18776-5']]/hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.6.34'])=1"
			>ERRORE-b71| Sezione Piano di cura alla dimissione: la sezione deve contenere l'elemento templateId valorizzato con l'attributo @root='2.16.840.1.113883.2.9.10.1.6.34'</assert>
			<assert test="count(hl7:component/hl7:section[hl7:code[@code='18776-5']])=0 or count(hl7:component/hl7:section[hl7:code[@code='18776-5']]/hl7:text)=1"
			>ERRORE-b72| Sezione Piano di cura alla dimissione: la sezione deve contenere l'elemento 'text'</assert>
			
			<!--14-->
			<!--Terapia farmacologica alla dimissione-->		
			<assert test="count(hl7:component/hl7:section[hl7:code[@code='75311-1']])=0 or count(hl7:component/hl7:section[hl7:code[@code='75311-1']]/hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.6.74'])=1"
			>ERRORE-b73| Sezione Terapia farmacologica alla dimissione: la sezione deve contenere l'elemento templateId valorizzato con l'attributo @root='2.16.840.1.113883.2.9.10.1.6.74'.</assert>
			<assert test="count(hl7:component/hl7:section[hl7:code[@code='75311-1']])=0 or count(hl7:component/hl7:section[hl7:code[@code='75311-1']]/hl7:text)=1"
			>ERRORE-b74| Sezione Terapia farmacologica alla dimissione: la sezione deve contenere l'elemento 'text'</assert>
			
		</rule>

		<!--Controllo sui codici delle Section-->
		<rule context="hl7:ClinicalDocument/hl7:component/hl7:structuredBody/hl7:component/hl7:section">
			<let name="codice" value="hl7:code/@code"/>
			<assert test="count(hl7:code[@code='11459-5'][@codeSystem='2.16.840.1.113883.6.1'])=1 or count(hl7:code[@code='46239-0'][@codeSystem='2.16.840.1.113883.6.1'])=1 or count(hl7:code[@code='54094-8'][@codeSystem='2.16.840.1.113883.6.1'])=1 
			or count(hl7:code[@code='78337-3'][@codeSystem='2.16.840.1.113883.6.1'])=1 or count(hl7:code[@code='46240-8'][@codeSystem='2.16.840.1.113883.6.1'])=1 or count(hl7:code[@code='8648-8'][@codeSystem='2.16.840.1.113883.6.1'])=1 
			or count(hl7:code[@code='55109-3'][@codeSystem='2.16.840.1.113883.6.1'])=1 or count(hl7:code[@code='62387-6'][@codeSystem='2.16.840.1.113883.6.1'])=1 or count(hl7:code[@code='30954-2'][@codeSystem='2.16.840.1.113883.6.1'])=1  
			or count(hl7:code[@code='8716-3'][@codeSystem='2.16.840.1.113883.6.1'])=1 or count(hl7:code[@code='29549-3'][@codeSystem='2.16.840.1.113883.6.1'])=1 or count(hl7:code[@code='28574-2'][@codeSystem='2.16.840.1.113883.6.1'])=1
			or count(hl7:code[@code='18776-5'][@codeSystem='2.16.840.1.113883.6.1'])=1 or count(hl7:code[@code='75311-1'][@codeSystem='2.16.840.1.113883.6.1'])=1"
			>ERRORE-b75| Il codice '<value-of select="$codice"/>' non è corretto. La sezione deve essere valorizzata con uno dei seguenti codici:
			11459-5 Sezione Motivo di trasporto
			46239-0	Sezione Motivo della visita
			54094-8	Sezione Triage
			78337-3 Sezione Inquadramento clinico iniziale
			46240-8 Sezione Encounters
			8648-8  Sezione Decorso ospedaliero
			55109-3 Sezione Complicanze
			62387-6 Sezione Interventi, prestazioni, consulenze e richieste
			30954-2 Sezione Accertamenti
			8716-3  Sezione Parametri vitali
			29549-3 Sezione Terapia farmacologica in pronto soccorso
			18776-5 Sezione Piano di cura alla dimissione
			75311-1 Sezione Terapia farmacologica alla dimissione
			</assert>
		</rule>	
		
		<!--1-->
		<!-- Modalità di trasporto: controllo sulla entry -->
		<rule context="hl7:ClinicalDocument/hl7:component/hl7:structuredBody/hl7:component/hl7:section[hl7:code[@code='11459-5']]/hl7:entry">
			<assert test="count(hl7:act/hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.6.40'])=1"
			>ERRORE-b76| Sezione Modalità di trasporto: l'elemento entry/act DEVE contenere l'elemento templateId valorizzato con l'attributo @root='2.16.840.1.113883.2.9.10.1.6.40'</assert>
			<assert test="count(hl7:act/hl7:code[@codeSystem='2.16.840.1.113883.2.9.6.1.54.6'])=1"
			>ERRORE-b77| Sezione Modalità di trasporto: l'elemento entry/act/code DEVE avere l'attributo @codeSystem con '2.16.840.1.113883.2.9.6.1.54.6'</assert>
			<assert test="count(hl7:act/hl7:statusCode[@code='completed'])=1"
			>ERRORE-b78| Sezione Modalità di trasporto: l'elemento entry/act/statusCode  DEVE  assumere il valore 'completed'</assert>
			<assert test="count(hl7:act/hl7:participant/hl7:participantRole/hl7:code[@codeSystem='2.16.840.1.113883.2.9.6.1.54.1'])=1"
			>ERRORE-b79| Sezione Modalità di trasporto: l'elemento entry/act/participant/participantRole DEVE contenere l'elemento code valorizzato con l'attributo @codeSystem='2.16.840.1.113883.2.9.6.1.54.1'</assert>
		</rule>
		
		<!--3-->
		<!--Triage: controllo sull'entry-->
		<rule context="hl7:ClinicalDocument/hl7:component/hl7:structuredBody/hl7:component/hl7:section[hl7:code[@code='54094-8']]/hl7:entry">
			<assert test="count(hl7:observation/hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.6.39'])=1"
			>ERRORE-b80| Sezione Triage: l'elemento entry/observation DEVE contenere l'elemento templateId valorizzato con l'attributo @root='2.16.840.1.113883.2.9.10.1.6.39'</assert>
			<assert test="count(hl7:observation/hl7:code[@code='11283-9'][@codeSystem='2.16.840.1.113883.6.1'])=1"
			>ERRORE-b81| Sezione Triage: l'elemento entry/observation/code deve avere l'attributo @code valorizzato con '11283-9' e l'attributo @codeSystem con '2.16.840.1.113883.6.1'</assert>
			<assert test="count(hl7:observation/hl7:statusCode[@code='completed'])=1"
			>ERRORE-b82| Sezione Triage: l'elemento entry/observation/statusCode  DEVE  assumere il valore 'completed'</assert>
			<assert test="count(hl7:observation/hl7:value[@codeSystem='2.16.840.1.113883.2.9.6.1.54.4'])=1"
			>ERRORE-b83| Sezione Triage: l'elemento entry/observation/value DEVE essere valorizzato col value set CodiceTriage_VPS</assert>	
		</rule>
		
			<!--3.1-->
			<!--Triage: controllo sull'entry/observation/performer-->
			<rule context="hl7:ClinicalDocument/hl7:component/hl7:structuredBody/hl7:component/hl7:section[hl7:code[@code='54094-8']]/hl7:entry/hl7:observation/hl7:performer">
					
				<assert test="count(hl7:assignedEntity/hl7:assignedPerson/hl7:name/hl7:given)=1 and 
				count(hl7:assignedEntity/hl7:assignedPerson/hl7:name/hl7:family)=1"
				>ERRORE-b84|Sezione Triage: entry/observation/performer/assignedEntity/assignedPerson/name deve contenere gli elementi "given" e "family" </assert>	
			</rule>
		
		<!--4-->
		<!--Sezione inquadramento clinico iniziale-->
		<rule context="hl7:ClinicalDocument/hl7:component/hl7:structuredBody/hl7:component/hl7:section[hl7:code[@code='78337-3']]/hl7:component">
		
			<!-- Anamnesi-->
			<assert test="count(hl7:section[hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.6.55']])=0 or count(hl7:section/hl7:code[@code='11329-0'][@codeSystem='2.16.840.1.113883.6.1'])=1"
			>ERRORE-b85| Sotto-sezione Anamnesi: deve contenere l'elemento code con attributi @code='11329-0' e @codeSystem='2.16.840.1.113883.6.1'</assert>
			<assert test="count(hl7:section[hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.6.55']])=0 or 
			count(hl7:section[hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.6.55']]/hl7:text)=1"
			>ERRORE-b86| Sotto-sezione Anamnesi: deve contenere l'elemento 'text'</assert>
			
			<!--Esame obiettivo-->
			<assert test="count(hl7:section[hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.6.58']])=0 or 
			count(hl7:section/hl7:code[@code='29545-1'][@codeSystem='2.16.840.1.113883.6.1'])=1"
			>ERRORE-b87| Sotto-sezione Esame obiettivo: deve contenere l'elemento code con attributi @code='29545-1' e @codeSystem='2.16.840.1.113883.6.1'</assert>
			<assert test="count(hl7:section[hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.6.58']])=0 or 
			count(hl7:section[hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.6.58']]/hl7:text)=1"
			>ERRORE-b88| Sotto-sezione Esame obiettivo: deve contenere l'elemento 'text'</assert>
			
			<!--Terapie in essere-->
			<assert test="count(hl7:section[hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.6.57']])=0 or count(hl7:section/hl7:code[@code='42346-7'][@codeSystem='2.16.840.1.113883.6.1'])=1"
			>ERRORE-b89| Sotto-sezione Terapie farmacologiche all'ingresso: deve contenere l'elemento code con attributi @code='42346-7' e @codeSystem='2.16.840.1.113883.6.1'</assert>
			<assert test="count(hl7:section[hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.6.57']])=0 or 
			count(hl7:section[hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.6.57']]/hl7:text)=1"
			>ERRORE-b90| Sotto-sezione Terapie farmacologiche all'ingresso: deve contenere l'elemento 'text'</assert>
			
			<!--Allergie-->
			<assert test="count(hl7:section[hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.6.33']])=0 or count(hl7:section/hl7:code[@code='48765-2'][@codeSystem='2.16.840.1.113883.6.1'])=1"
			>ERRORE-b91| Sotto-sezione Allergie: deve contenere l'elemento code con attributi @code='48765-2' e @codeSystem='2.16.840.1.113883.6.1'</assert>
			<assert test="count(hl7:section[hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.6.33']])=0 or 
			count(hl7:section[hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.6.33']]/hl7:text)=1"
			>ERRORE-b92| Sotto-sezione Allergie: deve contenere l'elemento 'text'</assert>
			
			<!--Problemi aperti-->
			<assert test="count(hl7:section[hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.6.59']])=0 or count(hl7:section/hl7:code[@code='11450-4'][@codeSystem='2.16.840.1.113883.6.1'])=1"
			>ERRORE-b93| Sotto-sezione Problemi aperti: deve contenere l'elemento code con attributi @code='11450-4' e @codeSystem='2.16.840.1.113883.6.1'</assert>
			<assert test="count(hl7:section[hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.6.59']])=0 or 
			count(hl7:section[hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.6.59']]/hl7:text)=1"
			>ERRORE-b94| Sotto-sezione Problemi aperti: deve contenere l'elemento 'text'</assert>
					
		</rule>
		
		<!--Sezione inquadramento clinico iniziale: controllo sugli author-->
		<rule context="hl7:ClinicalDocument/hl7:component/hl7:structuredBody/hl7:component/hl7:section[hl7:code[@code='78337-3']]/hl7:author">
			<assert test="count(hl7:assignedAuthor/hl7:assignedPerson)=0 or
			(count(hl7:assignedAuthor/hl7:assignedPerson/hl7:name/hl7:given)=1 and count(hl7:assignedAuthor/hl7:assignedPerson/hl7:name/hl7:family)=1)"
			>ERRORE-b95| Sezione Inquadramento clinico iniziale: l'elemento section/author/assignedAuthor/assignedPerson/name deve contenere i sotto elementi 'given' e 'family'</assert>
		</rule>
		
		<rule context="hl7:ClinicalDocument/hl7:component/hl7:structuredBody/hl7:component/hl7:section[hl7:code[@code='78337-3']]/hl7:component/hl7:section[hl7:code[@code='11329-0']]/hl7:author">
			<assert test="count(hl7:assignedAuthor/hl7:assignedPerson)=0 or 
			(count(hl7:assignedAuthor/hl7:assignedPerson/hl7:name/hl7:given)=1 and count(hl7:assignedAuthor/hl7:assignedPerson/hl7:name/hl7:family)=1)"
			>ERRORE-b96| Sotto-sezione Anamnesi: deve contenere l'elemento author/assignedAuthor/assignedPerson/name con i sotto-elementi 'given' e 'family' </assert>
		</rule>
		
		<rule context="hl7:ClinicalDocument/hl7:component/hl7:structuredBody/hl7:component/hl7:section[hl7:code[@code='78337-3']]/hl7:component/hl7:section[hl7:code[@code='29545-1']]/hl7:author">
			<assert test="count(hl7:assignedAuthor/hl7:assignedPerson)=0 or 
			(count(hl7:assignedAuthor/hl7:assignedPerson/hl7:name/hl7:given)=1 and count(hl7:assignedAuthor/hl7:assignedPerson/hl7:name/hl7:family)=1)"
			>ERRORE-b97| Sotto-sezione Esame obiettivo: deve contenere l'elemento author/assignedAuthor/assignedPerson/name con i sotto-elementi 'given' e 'family'</assert>
		</rule>
		
		<rule context="hl7:ClinicalDocument/hl7:component/hl7:structuredBody/hl7:component/hl7:section[hl7:code[@code='78337-3']]/hl7:component/hl7:section[hl7:code[@code='42346-7']]/hl7:author">
			<assert test="count(hl7:assignedAuthor/hl7:assignedPerson)=0 or 
			(count(hl7:assignedAuthor/hl7:assignedPerson/hl7:name/hl7:given)=1 and count(hl7:assignedAuthor/hl7:assignedPerson/hl7:name/hl7:family)=1)"
			>ERRORE-b98| Sotto-sezione Terapie in essere: deve contenere l'elemento author/assignedAuthor/assignedPerson/name con i sotto-elementi 'given' e 'family'</assert>
		</rule>
		
		<rule context="hl7:ClinicalDocument/hl7:component/hl7:structuredBody/hl7:component/hl7:section[hl7:code[@code='78337-3']]/hl7:component/hl7:section[hl7:code[@code='48765-2']]/hl7:author">
			<assert test="count(hl7:assignedAuthor/hl7:assignedPerson)=0 or 
			(count(hl7:assignedAuthor/hl7:assignedPerson/hl7:name/hl7:given)=1 and count(hl7:assignedAuthor/hl7:assignedPerson/hl7:name/hl7:family)=1)"
			>ERRORE-b99| Sotto-sezione Allergie: deve contenere l'elemento author/assignedAuthor/assignedPerson/name con i sotto-elementi 'given' e 'family'</assert>	
		</rule>
		
		<rule context="hl7:ClinicalDocument/hl7:component/hl7:structuredBody/hl7:component/hl7:section[hl7:code[@code='78337-3']]/hl7:component/hl7:section[hl7:code[@code='11450-4']]/hl7:author">
			<assert test="count(hl7:assignedAuthor/hl7:assignedPerson)=0 or 
			(count(hl7:assignedAuthor/hl7:assignedPerson/hl7:name/hl7:given)=1 and count(hl7:assignedAuthor/hl7:assignedPerson/hl7:name/hl7:family)=1)"
			>ERRORE-b100| Sotto-sezione Problemi aperti: deve contenere l'elemento author/assignedAuthor/assignedPerson/name con i sotto-elementi 'given' e 'family'</assert>
		</rule>
		
			
			<!--4.1-->
			<!--Anamnesi: Dettaglio Anamnesi Patologica e Fisiologica(entry/observation)-->
			<rule context="hl7:ClinicalDocument/hl7:component/hl7:structuredBody/hl7:component/hl7:section[hl7:code[@code='78337-3']]/hl7:component/hl7:section[hl7:code[@code='11329-0']]/hl7:entry">
				
				<!--controllo sui sotto elementi di entry-->
				<assert test="count(hl7:observation)=1 or count(hl7:organizer)=1"
				>ERRORE-b101| Sotto-sezione Anamnesi: l'elemento 'entry' deve avere uno dei seguenti sotto elementi:
				- 'observation': per l'Anamnesi patologica e fisiologica;
				- 'organizer': per l'Anamnesi familiare.</assert>
				
				<assert test="count(hl7:observation)=0 or count(hl7:observation/hl7:code[@code='75326-9'][@codeSystem='2.16.840.1.113883.6.1'])=1"
				>ERRORE-b102| Sotto-sezione Anamnesi: l'elemento entry/observation/code deve avere gli attributi @code='75326-9' e @codeSystem='2.16.840.1.113883.6.1'</assert>
				<assert test="count(hl7:observation)=0 or count(hl7:observation/hl7:statusCode[@code='completed'])=1"
				>ERRORE-b103| Sotto-sezione Anamnesi: l'elemento entry/observation/statusCode deve avere l'attributo @code='completed'</assert>
				<assert test="count(hl7:observation)=0 or count(hl7:observation/hl7:effectiveTime/hl7:low)=1"
				>ERRORE-b104| Sotto-sezione Anamnesi: l'elemento entry/observation/effectiveTime deve essere presente e deve avere l'elemento 'low' valorizzato</assert>
				<assert test="(count(hl7:observation)=0 or count(hl7:observation/hl7:entryRelationship/hl7:observation[hl7:code[@code='33999-4']])=0) or 
				(count(hl7:observation/hl7:entryRelationship/hl7:observation[hl7:code[@code='33999-4']]/hl7:value[@code='LA18632-2'])=1 and 
				count(hl7:observation/hl7:effectiveTime/hl7:high)=1) or count(hl7:observation/hl7:effectiveTime/hl7:high)=1"
				>ERRORE-b105| Sotto-sezione Anamnesi: l'elemento entry/observation/effectiveTime deve essere presente e deve avere l'elemento 'high' valorizzato</assert>
				<assert test="count(hl7:observation)=0 or count(hl7:observation/hl7:value[@xsi:type='CD'])=1"
				>ERRORE-b106| Sotto-sezione Anamnesi: l'elemento entry/observation/value deve avere l'attributo @xsi:type="CD" </assert>
				<assert test="count(hl7:observation)=0 or (count(hl7:observation/hl7:value/@code)=0 and count(hl7:observation/hl7:value/hl7:originalText/hl7:reference)=1)
				or (count(hl7:observation/hl7:value/@code)=1 and count(hl7:observation/hl7:value/hl7:originalText/hl7:reference)&lt;=1)"
				>ERRORE-b107| Sotto-sezione Anamnesi: nel caso di entry/observation/value non codificato, deve essere valorizzato l'elemento 'originalText/reference'</assert>
				<assert test="count(hl7:observation)=0 or (count(hl7:observation/hl7:entryRelationship[hl7:observation/hl7:code[@code='89261-2']])&lt;=1)"
				>ERRORE-b108| Sotto-sezione Anamnesi: l'entry/observation può contenere al più una entryRelationship relativa alla Cronicità</assert>
				<assert test="count(hl7:observation)=0 or (count(hl7:observation/hl7:entryRelationship[hl7:observation/hl7:code[@code='33999-4']])&lt;=1)"
				>ERRORE-b109| Sotto-sezione Anamnesi: l'entry/observation può contenere al più una 'entryRelationship' relativa allo Stato Clinico del problema</assert>
				
				<!--controllo puntuale cronicità e stato clinico problema-->
				
				<!--Anamnesi: dettaglio anamnesi familiare(entry/organizer)-->
				<assert test="count(hl7:organizer)=0 or count(hl7:organizer[@classCode='CLUSTER'])=1 and count(hl7:organizer/@moodCode)=1"
				>ERRORE-b110| Sotto-sezione Anamnesi: l'elemento entry/organizer deve avere gli attributi @classCode='CLUSTER' e @moodCode='EVN'</assert>
				<assert test="count(hl7:organizer)=0 or count(hl7:organizer/hl7:code[@code='10157-6'][@codeSystem='2.16.840.1.113883.6.1'])=1"
				>ERRORE-b111| Sotto-sezione Anamnesi: l'elemento entry/organizer/code deve avere gli attributi @code='10157-6' e @codeSystem='2.16.840.1.113883.6.1'</assert>
				<assert test="count(hl7:organizer)=0 or count(hl7:organizer/hl7:statusCode[@code='completed'])=1"
				>ERRORE-b112| Sotto-sezione Anamnesi: l'elemento entry/organizer/statusCode deve avere l'attributo @code='completed'</assert>
				<assert test="count(hl7:organizer)=0 or count(hl7:organizer/hl7:effectiveTime)=1"
				>ERRORE-b113| Sotto-sezione Anamnesi: l'elemento entry/organizer/effectiveTime deve essere presente</assert>
				<assert test="count(hl7:organizer)=0 or count(hl7:organizer/hl7:subject/hl7:relatedSubject[@classCode='PRS'])=1 and 
				count(hl7:organizer/hl7:subject/hl7:relatedSubject/hl7:code[@codeSystem='2.16.840.1.113883.5.111'])=1"
				>ERRORE-b114| Sotto-sezione Anamnesi: l'elemento entry/organizer/subject/relatedSubject deve avere l'attributo @classCode='PRS' e deve contenere l'elemento 'code'</assert>
				<assert test="count(hl7:organizer)=0 or count(hl7:organizer/hl7:component)>=1"
				>ERRORE-b115| Sotto-sezione Anamnesi: l'elemento entry/organizer deve contenere almeno un elelemento component di tipo observation.</assert>
			</rule>
				
				<!--4.1.1-->
				<!--Anamnesi: Cronicità della patologia\stato clinico del problema (entry/observation/entryRelationship/observation)-->
				<rule context="hl7:ClinicalDocument/hl7:component/hl7:structuredBody/hl7:component/hl7:section[hl7:code[@code='78337-3']]/hl7:component/hl7:section[hl7:code[@code='11329-0']]/hl7:entry/hl7:observation/hl7:entryRelationship">
					
					<assert test="(count(hl7:observation/hl7:code[@code='89261-2'][@codeSystem='2.16.840.1.113883.6.1'])=1 or
					count(hl7:observation/hl7:code[@code='33999-4'][@codeSystem='2.16.840.1.113883.6.1'])=1)"
					>ERRORE-b116| Sotto-sezione Anamnesi: l'elemento entry/observation/entryRelationship/observation/code deve avere l'attributo @code valorizzato con:
					"89261-2" per "Cronicità patologia";
					"33999-4" per "Stato clinico patologia"
					</assert>
					<assert test="count(hl7:observation[hl7:code[@code='89261-2']]/hl7:value)=0 or 
					(count(hl7:observation[hl7:code[@code='89261-2']]/hl7:value[@codeSystem='2.16.840.1.113883.6.1'])=1 or 
					count(hl7:observation[hl7:code[@code='89261-2']]/hl7:value[@codeSystem='2.16.840.1.113883.2.9.77.22.11.10'])=1)"
					>ERRORE-b117| Sotto-sezione Anamnesi: l'elemento entry/observation/entryRelationship/observation/value relativo alla Cronicità deve essere valorizzato secondo il Value set "CronicitàProblema"</assert>
					
					<assert test="count(hl7:observation[hl7:code[@code='89261-2']]/hl7:value)=0 or 
					(count(hl7:observation[hl7:code[@code='89261-2']]/hl7:value[@code='LA28752-6'])=1 or
					count(hl7:observation[hl7:code[@code='89261-2']]/hl7:value[@code='LA18821-1'])=1)"
					>ERRORE-b117a| Sotto-sezione Anamnesi: l'attributo @code di entry/observation/entryRelationship/observation/value relativo alla Cronicità deve essere valorizzato con:
					- "LA28752-6" se "chronic";
					- "LA18821-1" se "acute".
					</assert>
					<!--per il controllo inerente il sistema di codifica da utilizzare, c'è la possibilità di usare anche sistemi di codifica locali-->
					
					<assert test="count(hl7:observation[hl7:code[@code='33999-4']]/hl7:value)=0 or 
					(count(hl7:observation[hl7:code[@code='33999-4']]/hl7:value[@codeSystem='2.16.840.1.113883.6.1'])=1 or 
					count(hl7:observation[hl7:code[@code='33999-4']]/hl7:value[@codeSystem='2.16.840.1.113883.2.9.77.22.11.7'])=1)"
					>ERRORE-b118| Sotto-sezione Anamnesi: l'elemento entry/observation/entryRelationship/observation/value relativo allo Stato Clinico della patologia deve essere valorizzato secondo il Value set "StatoClinicoProblema"</assert>
					
					<assert test="count(hl7:observation[hl7:code[@code='33999-4']]/hl7:value)=0 or 
					(count(hl7:observation[hl7:code[@code='33999-4']]/hl7:value[@code='LA16666-2'])=1 or
					count(hl7:observation[hl7:code[@code='33999-4']]/hl7:value[@code='LA18632-2'])=1)"
					>ERRORE-b118a| Sotto-sezione Anamnesi: l'attributo @code di entry/observation/entryRelationship/observation/value relativo allo Stato Clinico della patologia deve essere valorizzato con:
					- "LA16666-2" se "active";
					- "LA18632-2" se "inactive".
					</assert>
					
				</rule>
				
				<!--4.1.2-->
				<!--Anamnesi: dettaglio anamnesi del familiare in oggetto (entry/organizer/component/observation)-->
				<rule context="hl7:ClinicalDocument/hl7:component/hl7:structuredBody/hl7:component/hl7:section[hl7:code[@code='78337-3']]/hl7:component/hl7:section[hl7:code[@code='11329-0']]/hl7:entry/hl7:organizer/hl7:component">
				
					<assert test="count(hl7:observation/hl7:code[@codeSystem='2.16.840.1.113883.6.1'])=1"
					>ERRORE-b119| Sotto-sezione Anamnesi: l'elemento entry/organizer/component/observation/code deve avere l'attributo @codeSystem='2.16.840.1.113883.6.1'</assert>
					<assert test="count(hl7:observation/hl7:statusCode[@code='completed'])=1"
					>ERRORE-b120| Sotto-sezione Anamnesi: l'elemento entry/organizer/component/observation/statusCode deve avere l'attributo @code='completed'</assert>
					<assert test="count(hl7:observation/hl7:effectiveTime)=1"
					>ERRORE-b121| Sotto-sezione Anamnesi: l'elemento entry/organizer/component/observation/effectiveTime deve essere presente </assert>
					<assert test="count(hl7:observation/hl7:value[@codeSystem='2.16.840.1.113883.6.103'])=1"
					>ERRORE-b122| Sotto-sezione Anamnesi: l'elemento entry/organizer/component/observation/value deve essere presente e valorizzato secondo il @codeSystem='2.16.840.1.113883.6.103' </assert>
					<assert test="count(hl7:observation/hl7:entryRelationship[hl7:observation/hl7:code[@code='35267-4']])&lt;=1"
					>ERRORE-b123| Sotto-sezione Anamnesi: l'elemento entry/organizer/component/observation può contenere una entryRelationship relativa all'Età di insorgenza. </assert>
					<assert test="count(hl7:observation/hl7:entryRelationship[hl7:observation/hl7:code[@code!='35267-4']])=1 and 
					count(hl7:observation/hl7:entryRelationship[hl7:observation/hl7:code[@code='39016-1']])=1 and 
					count(hl7:observation/hl7:entryRelationship/hl7:observation[hl7:code[@code='39016-1']]/hl7:value)=1"
					>ERRORE-b124| Sotto-sezione Anamnesi: l'elemento entry/organizer/component/observation/entryRelationship/observation deve avere il code valorizzato con @code='39016-1' e deve contenere un elemento 'value'</assert>
				</rule>
			
				<rule context="hl7:ClinicalDocument/hl7:component/hl7:structuredBody/hl7:component/hl7:section[hl7:code[@code='78337-3']]/hl7:component/hl7:section[hl7:code[@code='11329-0']]/hl7:entry/hl7:organizer/hl7:component/hl7:observation/hl7:entryRelationship[hl7:observation/hl7:code[@code='35267-4']]">
					
					<assert test="count(hl7:observation/hl7:value)=1"
					>ERRORE-b125| Sotto-sezione Anamnesi: l'elemento entry/organizer/component/observation/entryRelationship/observation deve contenere l'elemento value </assert>
				</rule>
	
			<!--Allergie (entry/act)-->	
			<rule context="hl7:ClinicalDocument/hl7:component/hl7:structuredBody/hl7:component/hl7:section[hl7:code[@code='78337-3']]/hl7:component/hl7:section[hl7:code[@code='48765-2']]/hl7:entry">
			
				<assert test="count(hl7:act[@classCode='ACT'][@moodCode='EVN'])=1"
				>ERRORE-b126| Sezione Allergie: la sezione deve contenere un elemento entry di tipo 'act'con attributi @classCode='ACT' e @moodCode='EVN'</assert>
				<assert test="count(hl7:act/hl7:effectiveTime/hl7:low)=1"
				>ERRORE-b127| Sezione Allergie: l'elemento entry/act/effectiveTime deve essere presente e deve avere l'elemento 'low' valorizzato</assert>
				<let name="status" value="hl7:act/hl7:statusCode/@code"/>
				<assert test="($status='completed' and count(hl7:act/hl7:effectiveTime/hl7:high)=1) or
						($status='aborted' and count(hl7:act/hl7:effectiveTime/hl7:high)=1) or 
						($status='suspended' and count(hl7:act/hl7:effectiveTime/hl7:high)=0) or 
						($status='active' and count(hl7:act/hl7:effectiveTime/hl7:high)=0)"
				>ERRORE-b128| Sezione Allergie: l'elemento entry/act/effectiveTime/high deve essere presente nel caso in cui lo 'statusCode' sia 'completed'oppure'aborted'</assert>
				
				<!--Allergie: osservazioni allergie\intolleranze (entry/act/entryRelationship/observation)-->
				<assert test="count(hl7:act/hl7:entryRelationship/hl7:observation/hl7:code[@code='52473-6'][@codeSystem='2.16.840.1.113883.6.1'])=1"
				>ERRORE-b129| Sezione Allergie: l'entry/act deve includere uno ed uno solo elemento entryRelationship/observation con attributo @code='52473-6'</assert>	
				<assert test="count(hl7:act/hl7:entryRelationship/hl7:observation/hl7:text)=0 or 
							count(hl7:act/hl7:entryRelationship/hl7:observation/hl7:text/hl7:reference/@value)=1"
				>ERRORE-b130| Sezione Allergie: l'entry/act/entryRelationship/observation/text/reference/value deve essere valorizzato con l'URI che punta alla descrizione di allarme, allergia o intolleranza nel narrative block della sezione </assert>
				<assert test="count(hl7:act/hl7:entryRelationship/hl7:observation/hl7:statusCode[@code='completed'])=1"
				>ERRORE-b131| Sezione Allergie: l'elemento entry/act/entryRelationship/observation/statusCode/@code deve assumere il valore costante 'completed'</assert>
				<assert test="count(hl7:act/hl7:entryRelationship/hl7:observation/hl7:effectiveTime/hl7:low)=1"
				>ERRORE-b132| Sezione Allergie: l'elemento entry/act/entryRelationship/observation/effectiveTime deve essere presente e deve avere l'elemento 'low' valorizzato </assert>
				<assert test="count(hl7:act/hl7:entryRelationship/hl7:observation/hl7:value[@xsi:type='CD'])=1"
				>ERRORE-b133| Sezione Allergie: l'elemento entry/act/entryRelationship/observation/value deve avere l'attributo @xsi:type='CD'</assert>
				<assert test="count(hl7:act/hl7:entryRelationship/hl7:observation/hl7:value/@code)=0 or 
							count(hl7:act/hl7:entryRelationship/hl7:observation/hl7:value[@codeSystem='2.16.840.1.113883.5.4'])=1"
				>ERRORE-b134| Sezione Allergie: l'elemento entry/act/entryRelationship/observation/value codificato, deve avere l'attributo @code valorizzato secondo il value set "ObservationIntoleranceType" - @codeSystem='2.16.840.1.113883.5.4'</assert>
				<assert test="(count(hl7:act/hl7:entryRelationship/hl7:observation/hl7:value/@code)=0 and 
				count(hl7:act/hl7:entryRelationship/hl7:observation/hl7:value/hl7:originalText/hl7:reference)=1) or 
				(hl7:act/hl7:entryRelationship/count(hl7:observation/hl7:value/@code)=1 and 
				count(hl7:act/hl7:entryRelationship/hl7:observation/hl7:value/hl7:originalText/hl7:reference)&lt;=1)"
				>ERRORE-b135| Sezione Allergie: l'elemento entry/act/entryRelationship/observation/value non codificato, deve avere l'elemento originalText/reference valorizzato, altrimenti l'elemento originalText/reference può non essere presente</assert>
				
				<assert test="count(hl7:act/hl7:entryRelationship/hl7:observation/hl7:participant)>=1"
				>ERRORE-b136| Sezione Allergie: entry/act/entryRelationship/observation deve contenere almeno un elemento 'participant'</assert>				
				<assert test="(count(hl7:act/hl7:entryRelationship/hl7:observation/hl7:entryRelationship[@typeCode='SUBJ'][hl7:observation])&lt;=1)"
				>ERRORE-b137| Sezione Allergie: entry/act/entryRelationship/observation deve contenere solo un elemento 'entryRelationship/observation' relativo alla Criticità</assert>
				<assert test="(count(hl7:act/hl7:entryRelationship/hl7:observation/hl7:entryRelationship[@typeCode='REFR'])&lt;=1)"
				>ERRORE-b138| Sezione Allergie: entry/act/entryRelationship/observation deve contenere solo un elemento 'entryRelationship/observation' relativo allo Stato dell'allergia</assert>
				<assert test="(count(hl7:act/hl7:entryRelationship/hl7:observation/hl7:entryRelationship[@typeCode='SUBJ'][hl7:act])&lt;=1)"
				>ERRORE-b139| Sezione Allergie: entry/act/entryRelationship/observation deve contenere solo un elemento 'entryRelationship/act' relativo ai Commenti</assert>
			
			</rule>
	
				<!--Allergie: descrizione agente (entry/act/entryRelationship/observation/participant)-->
				<rule context="hl7:ClinicalDocument/hl7:component/hl7:structuredBody/hl7:component/hl7:section[hl7:code[@code='78337-3']]/hl7:component/hl7:section[hl7:code[@code='48765-2']]/hl7:entry/hl7:act/hl7:entryRelationship/hl7:observation/hl7:participant">
			
					<!--Descrizione Agente Codificato-->
					<assert test="count(hl7:participantRole/hl7:playingEntity/hl7:code[@codeSystem='2.16.840.1.113883.6.73'])=1 or
					count(hl7:participantRole/hl7:playingEntity/hl7:code[@codeSystem='2.16.840.1.113883.2.9.6.1.5'])=1 or
					count(hl7:participantRole/hl7:playingEntity/hl7:code[@codeSystem='2.16.840.1.113883.2.9.77.22.11.2'])=1"
					>ERRORE-b140| Sezione Allergie (descrizione agente codificato): l'elemento entry/act/entryRelationship/observation/participant/participantRole/playingEntity deve avere l'attributo code/@codeSystem valorizzato come segue:
					- '2.16.840.1.113883.6.73' codifica "WHO ATC"
					- '2.16.840.1.113883.2.9.6.1.5' codifica "AIC"
					- '2.16.840.1.113883.2.9.77.22.11.2' value set "AllergenNoDrugs" (- per le allergie non a farmaci –)
					</assert>
				</rule>
			
				<!--Allergie: descrizione reazione (entry/act/entryRelationship/observation/entryRelationship[MFST]/observation)-->
				<rule context="hl7:ClinicalDocument/hl7:component/hl7:structuredBody/hl7:component/hl7:section[hl7:code[@code='78337-3']]/hl7:component/hl7:section[hl7:code[@code='48765-2']]/hl7:entry/hl7:act/hl7:entryRelationship/hl7:observation/hl7:entryRelationship[@typeCode='MFST']">	
					<assert test="count(hl7:observation/hl7:code[@code='75321-0'][@codeSystem='2.16.840.1.113883.6.1'])=1"
					>ERRORE-b141| Sezione Allergie (descrizione reazione): entry/act/entryRelationship/observation/entryRelationship/observation deve avere un elemento 'code' con gli attributi @code=75321-0' e @codeSystem='2.16.840.1.113883.6.1' e @displayName='Obiettività Clinica'</assert>
					<assert test="count(hl7:observation/hl7:effectiveTime/hl7:low)=1"
					>ERRORE-b142| Sezione Allergie (descrizione reazione): entry/act/entryRelationship/observation/entryRelationship/observation deve avere un 'effectiveTime' che contiene l'elemento 'low' valorizzato </assert>
					
					<!--Descrizione Reazione Codificata-->
					<assert test="count(hl7:observation/hl7:value)=0 or	count(hl7:observation/hl7:value[@xsi:type='CD'])=1"
					>ERRORE-b143| Sezione Allergie (descrizione reazione): l'elemento entry/act/entryRelationship/observation/entryRelationship/observation/value deve avere l'attributo @xsi:type='CD'</assert>
					<assert test="count(hl7:observation/hl7:value)=0 or
								(count(hl7:observation/hl7:value/@code)=0 and count(hl7:observation/hl7:value/hl7:originalText/hl7:reference)=1) or
								(count(hl7:observation/hl7:value/@code)=1 and (count(hl7:observation/hl7:value/hl7:originalText/hl7:reference)&lt;=1))"
					>ERRORE-b144| Sezione Allergie (descrizione reazione): nel caso di entry/act/entryRelationship/observation/entryRelationship/observation/value non codificato, questi deve avere l'elemento originalText/reference valorizzato</assert>
					<assert test="count(hl7:observation/hl7:value/@code)=0 or
								(count(hl7:observation/hl7:value[@codeSystem='2.16.840.1.113883.2.9.77.22.11.4'])=1 or 
								count(hl7:observation/hl7:value[@codeSystem='2.16.840.1.113883.2.9.77.22.11.3'])=1 or 
								count(hl7:observation/hl7:value[@codeSystem='2.16.840.1.113883.6.103'])=1)"
					>ERRORE-b145| Sezione Allergie (descrizione reazione): entry/act/entryRelationship/observation/entryRelationship/observation/value deve avere l'attributo @codeSystem valorizzato come segue:
					- "2.16.840.1.113883.2.9.77.22.11.4" per le reazioni da allergia 
					- "2.16.840.1.113883.2.9.77.22.11.3" per le reazioni da intolleranza 
					- "2.16.840.1.113883.6.103" per le reazioni riportate nel sistema ICD-9-CM
					</assert>
				</rule>
			
				<!--Criticità dell'allergia o intolleranza (entry/act/entryRelationship/observation/entryRelationship[SUBJ]/observation)-->
				<rule context="hl7:ClinicalDocument/hl7:component/hl7:structuredBody/hl7:component/hl7:section[hl7:code[@code='78337-3']]/hl7:component/hl7:section[hl7:code[@code='48765-2']]/hl7:entry/hl7:act/hl7:entryRelationship/hl7:observation/hl7:entryRelationship[@typeCode='SUBJ'][hl7:observation]">
					
					<assert test="count(hl7:observation/hl7:code[@codeSystem='2.16.840.1.113883.5.4'])=1"
					>ERRORE-b146| Sezione Allergie (criticità dell'allergia o intolleranza): entry/act/entryRelationship/observation/entryRelationship/observation/code deve avere l'attributo @codesystem='2.16.840.1.113883.5.4'</assert>
					<assert test="count(hl7:observation/hl7:text)=0 or count(hl7:observation/hl7:text/hl7:reference/@value)=1"
					>ERRORE-b147| Sezione Allergie (criticità dell'allergia o intolleranza): entry/act/entryRelationship/observation/entryRelationship/observation/text/reference/value deve essere valorizzato con l'URI che punta alla descrizione della severità nel narrative block della sezione </assert>	
					<assert test="count(hl7:observation/hl7:value[@codeSystem='2.16.840.1.113883.5.1063'])=1"
					>ERRORE-b148| Sezione Allergie (criticità dell'allergia o intolleranza): entry/act/entryRelationship/observation/entryRelationship/observation/value deve essere valorizzato secondo il value set "CriticalityObservation" @codesystem='2.16.840.1.113883.5.1063'</assert>
					
				</rule>
			
				<!--Stato dell'Allergia (entry/act/entryRelationship/observation/entryRelationship[REFR]/observation)-->
				<rule context="hl7:ClinicalDocument/hl7:component/hl7:structuredBody/hl7:component/hl7:section[hl7:code[@code='78337-3']]/hl7:component/hl7:section[hl7:code[@code='48765-2']]/hl7:entry/hl7:act/hl7:entryRelationship/hl7:observation/hl7:entryRelationship[@typeCode='REFR']">
					
					<assert test="count(hl7:observation/hl7:code[@code='33999-4'][@codeSystem='2.16.840.1.113883.6.1'])=1"
					>ERRORE-b149| Sezione Allergie (stato dell'allergia): entry/act/entryRelationship/observation/entryRelationship/observation/code deve avere l'attributo @code='33999-4' e @codesystem='2.16.840.1.113883.6.1'</assert>
					<assert test="count(hl7:observation/hl7:value[@codeSystem='2.16.840.1.113883.6.1'])=1 or count(hl7:observation/hl7:value[@codeSystem='2.16.840.1.113883.2.9.77.22.11.11'])=1"
					>ERRORE-b150| Sezione Allergie (stato dell'allergia): entry/act/entryRelationship/observation/entryRelationship/observation/value deve essere valorizzato secondo il value set "StatoClinicoAllergia" (@codesystem='2.16.840.1.113883.6.1' oppure '2.16.840.1.113883.2.9.77.22.11.11')</assert>
				
					<assert test="count(hl7:observation/hl7:value[@code='LA16666-2'])=1 or
					count(hl7:observation/hl7:value[@code='LA18632-2'])=1"
					>ERRORE-b150a| Sezione Allergie (stato dell'allergia): il @code di entry/act/entryRelationship/observation/entryRelationship/observation/value deve essere valorizzato con:
					- "LA16666-2" se "active";
					- "LA18632-2" se "inactive".
					</assert>
				
				
				</rule>
			
				<!--Allergie: commenti (entry/act/entryRelationship/observation/entryRelationship/act)-->	
				<rule context="hl7:ClinicalDocument/hl7:component/hl7:structuredBody/hl7:component/hl7:section[hl7:code[@code='78337-3']]/hl7:component/hl7:section[hl7:code[@code='48765-2']]/hl7:entry/hl7:act/hl7:entryRelationship/hl7:observation/hl7:entryRelationship[@typeCode='SUBJ'][hl7:act]">
					
					<assert test="count(hl7:act/hl7:code[@code='48767-8'][@codeSystem='2.16.840.1.113883.6.1'])=1"
					>ERRORE-b151| Sezione Allergie (commenti): l'elemento entry/act/entryRelationship/observation/entryRelationship/act deve contenere l'elemento act con attributi @code='48767-8' e @codeSystem='2.16.840.1.113883.6.1'</assert>
				
				</rule>
	
		
		<!--5-->
		<!--Encounters: controllo sull'entry-->
		<rule context="hl7:ClinicalDocument/hl7:component/hl7:structuredBody/hl7:component/hl7:section[hl7:code[@code='46240-8']]/hl7:entry">
			<assert test="count(hl7:encounter/hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.6.51'])=1"
			>ERRORE-b152| Sezione Encounters: L'elemento entry/encounters DEVE contenere l'elemento templateId valorizzato con l'atttributo @root='2.16.840.1.113883.2.9.10.1.6.51'</assert>
			<assert test="count(hl7:encounter/hl7:code)=1"
			>ERRORE-b153| Sezione Encounters: L'elemento entry/encounters DEVE contenere l'elemento code.</assert>
			<assert test="count(hl7:encounter/hl7:effectiveTime/hl7:low)=1 and count(hl7:encounter/hl7:effectiveTime/hl7:high)=1"
			>ERRORE-b154| Sezione Encounters: L'elemento entry/encounters/effectiveTime deve essere presente e deve avere gli elementi 'low' e 'high' valorizzati.</assert>
		</rule>
		
			<!--5.1-->
			<!--Encounters: diversi participant-->		
			<rule context="hl7:ClinicalDocument/hl7:component/hl7:structuredBody/hl7:component/hl7:section[hl7:code[@code='46240-8']]/hl7:entry/hl7:encounter/hl7:participant[@typeCode='ADM']">
				<assert test="count(hl7:participantRole/hl7:id)>=1"
				>ERRORE-b155| Sezione Encounters: l'elemento entry/encounter/participant DEVE contenere almeno un participantRole</assert>
				<assert test="count(hl7:participantRole/hl7:playingEntity)=0 or 
				count(hl7:participantRole/hl7:playingEntity/hl7:name/hl7:given)=1 and count(hl7:participantRole/hl7:playingEntity/hl7:name/hl7:family)=1"
				>ERRORE-b156| Sezione Encounters: l'elemento entry/encounter/participant/participantRole/playingEntity/name DEVE contenere gli elementi 'family' e 'given'</assert>			
			</rule>
			<rule context="hl7:ClinicalDocument/hl7:component/hl7:structuredBody/hl7:component/hl7:section[hl7:code[@code='46240-8']]/hl7:entry/hl7:encounter/hl7:participant[@typeCode='ATND']">
				<assert test="count(hl7:participantRole/hl7:id)>=1"
				>ERRORE-b157| Sezione Encounters: l'elemento entry/encounter/participant DEVE contenere l'elemento patientRole caratterizzato da un id obbligatorio</assert>
				<assert test="count(hl7:participantRole/hl7:playingEntity)=0 or 
				count(hl7:participantRole/hl7:playingEntity/hl7:name/hl7:given)=1 and count(hl7:participantRole/hl7:playingEntity/hl7:name/hl7:family)=1"
				>ERRORE-b158| Sezione Encounters: l'elemento entry/encounter/participant/participantRole/playingEntity/name DEVE contenere gli elementi 'family' e 'given'</assert>
			</rule>
			<rule context="hl7:ClinicalDocument/hl7:component/hl7:structuredBody/hl7:component/hl7:section[hl7:code[@code='46240-8']]/hl7:entry/hl7:encounter/hl7:participant[@typeCode='DIS']">
				<assert test="count(hl7:participantRole/hl7:id)>=1"
				>ERRORE-b159| Sezione Encounters: l'elemento entry/encounter/participant DEVE contenere l'elemento participantRole caratterizzato da un id obbligatorio</assert>
				<assert test="count(hl7:participantRole/hl7:playingEntity)=0 or 
				count(hl7:participantRole/hl7:playingEntity/hl7:name/hl7:given)=1 and count(hl7:participantRole/hl7:playingEntity/hl7:name/hl7:family)=1"
				>ERRORE-b160| Sezione Encounters: l'elemento entry/encounter/participant/participantRole/playingEntity/name DEVE contenere gli elementi 'family' e 'given'</assert>			
			</rule>
			<rule context="hl7:ClinicalDocument/hl7:component/hl7:structuredBody/hl7:component/hl7:section[hl7:code[@code='46240-8']]/hl7:entry/hl7:encounter/hl7:participant[@typeCode='LOC']">
				<assert test="count(hl7:participantRole/hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.6.64'])=1"
				>ERRORE-b161| Sezione Encounters: l'elemento entry/encounter/participant/participantRole DEVE contenere l'elemento templateId valorizzato dall'attributo @root='2.16.840.1.113883.2.9.10.1.6.64'</assert>						
				<assert test="count(hl7:participantRole/hl7:code)=0 or count(hl7:participantRole/hl7:code[@codeSystem='2.16.840.1.113883.2.9.1.11.1.2.10'])=1"
				>ERRORE-b162| Sezione Encounters: l'elemento entry/encounter/participant/participant/participantRole/code deve essere valorizzato secondo il value set "TipoLuogo_VPS" - @codeSystem='2.16.840.1.113883.2.9.1.11.1.2.10'</assert>
			</rule>
			
			<rule context="hl7:ClinicalDocument/hl7:component/hl7:structuredBody/hl7:component/hl7:section[hl7:code[@code='46240-8']]/hl7:entry/hl7:encounter/hl7:entryRelationship">
				<assert test="count(hl7:act[@classCode='ACT'][@moodCode='EVN'])=1"
				>ERRORE-b163| Sezione Encounters: l'elemento act DEVE essere valorizzato con gli attributi @classCode='ACT' e @moodCode='EVN'.</assert>
				<assert test="count(hl7:act/hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.6.47'])=1"
				>ERRORE-b164| Sezione Encounters: l'elemento entry/encounter/entryRelationship/act DEVE contenere l'elemento templateId valorizzato con l'attributo @root='2.16.840.1.113883.2.9.10.1.6.47'.</assert>
				<assert test="count(hl7:act/hl7:code[@code='48767-8'][@codeSystem='2.16.840.1.113883.6.1'])=1"
				>ERRORE-b165| Sezione Encounters: l'elemento entry/encounter/entryRelationship/act/code DEVE essere valorizzato con gli attributi @code='48767-8' e @codeSystem='2.16.840.1.113883.6.1'</assert>
				
			</rule>
			
		<!--6-->
		<!--Decorso Ospedaliero: controllo sull'author-->
		<rule context="hl7:ClinicalDocument/hl7:component/hl7:structuredBody/hl7:component/hl7:section[hl7:code[@code='8648-8']]/hl7:author">
			<assert test="count(hl7:assignedAuthor/hl7:assignedPerson)=0 or
			(count(hl7:assignedAuthor/hl7:assignedPerson/hl7:name/hl7:given)=1 and count(hl7:assignedAuthor/hl7:assignedPerson/hl7:name/hl7:family)=1)"
			>ERRORE-b166| Sezione Decorso Ospedaliero: l'elemento author/assignedAuthor/assignedPerson/name deve contenere i sotto elementi 'given' e 'family'</assert>
		
		</rule>
		
		<!--7-->
		<!--Complicanze: controllo entry-->
		<rule context="hl7:ClinicalDocument/hl7:component/hl7:structuredBody/hl7:component/hl7:section[hl7:code[@code='55109-3']]/hl7:entry">
			<assert test="count(hl7:observation/hl7:code[@code='75326-9'][@codeSystem='2.16.840.1.113883.6.1'])=1"
			>ERRORE-b167| Sezione Complicanze: l'elemento entry/observation/code DEVE essere valorizzato con gli attributi @code='75326-9' e @codeSystem='2.16.840.1.113883.6.1'</assert>
			<assert test="count(hl7:observation/hl7:value[@xsi:type='CD'])=1"
			>ERRORE-b168| Sezione Complicanze: l'elemento entry/observation/value DEVE essere valorizzato con l'attributo @xsi:type=CD.</assert>
		</rule>

		<!--8-->
		<!--Interventi Prestazioni Consulenze e Richieste: controllo entry-->
		<rule context="hl7:ClinicalDocument/hl7:component/hl7:structuredBody/hl7:component/hl7:section[hl7:code[@code='62387-6']]/hl7:entry">
			<assert test="count(hl7:act[@classCode='ACT'][@moodCode='EVN'])=1 or count(hl7:act[@classCode='ACT'][@moodCode='RQO'])=1"
			>ERRORE-b169| Sezione Interventi Prestazioni Consulenze e Richieste: l'elemento act DEVE essere valorizzato con gli attributi @classCode='ACT' e @moodCode='EVN' o @moodCode='RQO' </assert>
			<assert test="count(hl7:act/hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.6.62'])=1"
			>ERRORE-b170| Sezione Interventi Prestazioni Consulenze e Richieste: l'elemento entry/act DEVE contenere l'elemento templateId valorizzato con l'attributo @root='2.16.840.1.113883.2.9.10.1.6.62'.</assert>
			<assert test="count(hl7:act/hl7:code[@code='76645-1'][@codeSystem='2.16.840.1.113883.6.1'])=1"
			>ERRORE-b171| Sezione Interventi Prestazioni Consulenze e Richieste: l'elemento entry/act/code DEVE essere valorizzato con gli attributi @code='76645-1' e @codeSystem='2.16.840.1.113883.6.1'.</assert>
			<assert test="count(hl7:act/hl7:statusCode[@code='completed'])=1 or count(hl7:observation/hl7:statusCode[@code='aborted'])=1"
			>ERRORE-b172| Sezione Interventi Prestazioni Consulenze e Richieste: l'elemento entry/act DEVE contenere un elemento statusCode valorizzato con l'attributo @code='completed' o @code='aborted'.  </assert>			
			<assert test="count(hl7:act/hl7:participant)=0 or (count(hl7:act/hl7:participant[@typeCode='REF']))>=1"
			>ERRORE-b173| Sezione Interventi Prestazioni Consulenze e Richieste: l'elemento entry/act/participant se presente DEVE contenere l'attributo @typeCode='REF'.</assert>	
		</rule>
			<!--8.1-->
			<!--performer-->
			<rule context="hl7:ClinicalDocument/hl7:component/hl7:structuredBody/hl7:component/hl7:section[hl7:code[@code='62387-6']]/hl7:entry/hl7:act/hl7:performer">
				<assert test="count(hl7:assignedEntity/hl7:assignedPerson/hl7:name/hl7:given)=1 and count(hl7:assignedEntity/hl7:assignedPerson/hl7:name/hl7:family)=1"
				>ERRORE-b174| Sezione Interventi Prestazioni Consulenze e Richieste: l'elemento entry/act/performer/assignedEntity/assignedPerson/name se presente DEVE contenere gli elementi 'given' e 'family' .</assert>
			</rule>
			<!--8.2-->
			<!--participant-->
			<rule context="hl7:ClinicalDocument/hl7:component/hl7:structuredBody/hl7:component/hl7:section[hl7:code[@code='62387-6']]/hl7:entry/hl7:act/hl7:participant">		
				<assert test="(count(hl7:participantRole/hl7:id)&gt;=1)"
				>ERRORE-b175| Sezione Interventi Prestazioni Consulenze e Richieste: l'elemento entry/act/participant DEVE contenere almeno un elemento participantRole/id.</assert>
				<assert test="count(hl7:participantRole/hl7:playingEntity/hl7:name/hl7:family)=1 and count(hl7:participantRole/hl7:playingEntity/hl7:name/hl7:given)=1"
				>ERRORE-b176| Sezione Interventi Prestazioni Consulenze e Richieste: l'elemento entry/act/participant/participant/playingEntity/name DEVE contenere gli elementi 'family' e 'given' .</assert>		
			</rule>
			
		<!--9-->
		<!--Accertamenti: controllo entry-->
		<rule context="hl7:ClinicalDocument/hl7:component/hl7:structuredBody/hl7:component/hl7:section[hl7:code[@code='30954-2']]/hl7:entry">
			<assert test="count(hl7:organizer[@classCode='BATTERY'][@moodCode='EVN'])=1"
			>ERRORE-b177| Sezione Accertamenti:  l'elemento organizer DEVE essere valorizzato con gli attributi @classCode='BATTERY' e @moodCode='EVN'</assert>
			<assert test="count(hl7:organizer/hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.6.45'])=1"
			>ERRORE-b178| Sezione Accertamenti: l'elemento entry/organizer DEVE contenere l'elemento templateId valorizzato con l'attributo @root='2.16.840.1.113883.2.9.10.1.6.45'</assert>
			<assert test="count(hl7:organizer/hl7:statusCode[@code='completed'])=1"
			>ERRORE-b179| Sezione Accertamenti: l'elemento entry/organizer DEVE contenere un elemento statusCode valorizzato con l'attributo @code='completed'</assert>	
			<assert test="count(hl7:organizer/hl7:participant)=0 or (count(hl7:organizer/hl7:participant[@typeCode='REF']))>=1"
			>ERRORE-b180| Sezione Accertamenti: l'elemento entry/act/participant se presente DEVE contenere l'attributo @typeCode='REF'</assert>
		</rule>
		
			<!--9.1-->
			<!--performer-->
			<rule context="hl7:ClinicalDocument/hl7:component/hl7:structuredBody/hl7:component/hl7:section[hl7:code[@code='30954-2']]/hl7:entry/hl7:organizer/hl7:performer">
				<assert test="count(hl7:assignedEntity/hl7:assignedPerson/hl7:name/hl7:given)=1 and count(hl7:assignedEntity/hl7:assignedPerson/hl7:name/hl7:family)=1"
				>ERRORE-b181| Sezione Accertamenti: l'elemento entry/organizer/performer/assignedEntity/assignedPerson/name DEVE contenere gli elementi 'given' e 'family'.</assert>
			</rule>
			<!--9.2-->
			<!--participant-->
			<rule context="hl7:ClinicalDocument/hl7:component/hl7:structuredBody/hl7:component/hl7:section[hl7:code[@code='30954-2']]/hl7:entry/hl7:organizer/hl7:participant">	
				<assert test="(count(hl7:participantRole/hl7:id)&gt;=1)"
				>ERRORE-b182| Sezione Accertamenti: l'elemento entry/organizer/participant se presente DEVE contenere almeno un elemento participantRole/id</assert>
				<assert test="count(hl7:participantRole/hl7:playingEntity/hl7:name/hl7:given)=1 and count(hl7:participantRole/hl7:playingEntity/hl7:name/hl7:family)=1"
				>ERRORE-b183| Sezione Accertamenti: l'elemento entry/organizer/participant/playingEntity/name DEVE contenere gli elementi 'given' e 'family' </assert>		
			</rule>	
			<!--9.3-->	
			<!--component-->
			<rule context="hl7:ClinicalDocument/hl7:component/hl7:structuredBody/hl7:component/hl7:section[hl7:code[@code='30954-2']]/hl7:entry/hl7:organizer/hl7:component">	
				<assert test="count(hl7:observation/hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.6.46'])=1"
				>ERRORE-b184| Sezione Accertamenti: l'elemento entry/organizer/component/observation/templateId DEVE essere valorizzato con l'attributo @root='2.16.840.1.113883.2.9.10.1.6.46'</assert>
				<assert test="count(hl7:observation/hl7:code[@code='86524-6'][@codeSystem='2.16.840.1.113883.6.1'])=1"
				>ERRORE-b185| Sezione Accertamenti: l'elemento entry/organizer/component/observation/code DEVE essere valorizzato con gli attributi @code='86524-6' e @codeSystem='2.16.840.1.113883.6.1'</assert>
				<assert test="count(hl7:observation/hl7:statusCode[@code='completed'])=1"
				>ERRORE-b186| Sezione Accertamenti: l'elemento entry/organizer/component/observation DEVE contenere un elemento statusCode valorizzato con l'attributo @code='completed'</assert>			
				<assert test="count(hl7:observation/hl7:effectiveTime)=1"
				>ERRORE-b187| Sezione Accertamenti: l'elemento entry/organizer/component/observation/effectiveTime DEVE essere presente </assert>
			</rule>
		
		<!--10-->
		<!--Parametri Vitali: controllo entry-->
		<rule context="hl7:ClinicalDocument/hl7:component/hl7:structuredBody/hl7:component/hl7:section[hl7:code[@code='8716-3']]/hl7:entry">
			<assert test="count(hl7:organizer[@classCode='CLUSTER'][@moodCode='EVN'])=1"
			>ERRORE-b188| Sezione Parametri Vitali: l'elemento organizer DEVE essere valorizzato con gli attributi @classCode='CLUSTER' e @moodCode='EVN'.</assert>
			<assert test="count(hl7:organizer/hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.6.90'])=1"
			>ERRORE-b189| Sezione Parametri Vitali: l'elemento entry/organizer/templateId DEVE essere valorizzato con l'attributo @root='2.16.840.1.113883.2.9.10.1.6.90'.</assert> 
			<assert test="count(hl7:organizer/hl7:code)=0 or count(hl7:organizer/hl7:code[@code='85353-1'][@codeSystem='2.16.840.1.113883.6.1'])=1"
			>ERRORE-b190| Sezione Parametri Vitali: l'elemento entry/organizer/code DEVE essere valorizzato con gli attributi @code='85353-1' e @codeSystem='2.16.840.1.113883.6.1'.</assert>
			<assert test="count(hl7:organizer/hl7:statusCode[@code='completed'])=1"
			>ERRORE-b191| Sezione Parametri vitali: l'elemento entry/organizer DEVE contenere un elemento statusCode valorizzato con l'attributo @code='completed'.</assert>						
			<assert test="count(hl7:organizer/hl7:component[hl7:observation])>=1"
			>ERRORE-b192| Sezione Parametri vitali: l'elemento entry/organizer DEVE contenere almeno un elemento 'component' di tipo 'observation'</assert>
		</rule>	
			<!--10.1-->
			<!--component-->
			<rule context="hl7:ClinicalDocument/hl7:component/hl7:structuredBody/hl7:component/hl7:section[hl7:code[@code='8716-3']]/hl7:entry/hl7:organizer/hl7:component">
				<assert test="count(hl7:observation/hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.6.91'])=1"
				>ERRORE-b193| Sezione Parametri Vitali: l'elemento entry/organizer/component/observation/templateId DEVE essere valorizzato con l'attributo @root='2.16.840.1.113883.2.9.10.1.6.91'</assert> 
				<assert test="count(hl7:observation/hl7:code[@code='86678-0'][@codeSystem='2.16.840.1.113883.6.1'])=1"
				>ERRORE-b194| Sezione Parametri Vitali: l'elemento entry/organizer/component/observation/code DEVE essere valorizzato con gli attributi @code='86678-0' e @codeSystem='2.16.840.1.113883.6.1'</assert>
				<assert test="count(hl7:observation/hl7:statusCode[@code='completed'])=1"
				>ERRORE-b195| Sezione Parametri Vitali: l'elemento entry/organizer/component/observation DEVE contenere un elemento statusCode valorizzato con l'attributo @code='completed'</assert>		
				<assert test="count(hl7:observation/hl7:value)=1"
				>ERRORE-b196| Sezione Parametri Vitali: l'elemento entry/organizer/component/observation DEVE contenere un elemento 'value'</assert>
				<assert test="count(hl7:observation/hl7:participant)=0 or (count(hl7:observation/hl7:participant[@typeCode='REF']))>=1"
				>ERRORE-b197| Sezione Parametri Vitali: l'elemento entry/organizer/component/observation/participant se presente, DEVE contenere l'attributo @typeCode='REF'</assert>
			</rule>
			<!--10.2-->
			<!--performer-->
			<rule context="hl7:ClinicalDocument/hl7:component/hl7:structuredBody/hl7:component/hl7:section[hl7:code[@code='8716-3']]/hl7:entry/hl7:organizer/hl7:component/hl7:observation/hl7:performer">
				<assert test="count(hl7:assignedEntity/hl7:assignedPerson/hl7:name/hl7:given)=1 and count(hl7:assignedEntity/hl7:assignedPerson/hl7:name/hl7:family)=1"
				>ERRORE-b198| Sezione Parametri Vitali: l'elemento  entry/organizer/component/observation/performer/assignedEntity/assignedPerson/name DEVE contenere gli elementi 'given' e 'family' .</assert>
			</rule>
			<!--10.3-->
				<!--participant-->
			<rule context="hl7:ClinicalDocument/hl7:component/hl7:structuredBody/hl7:component/hl7:section[hl7:code[@code='8716-3']]/hl7:entry/hl7:organizer/hl7:component/hl7:observation/hl7:participant">
				<assert test="(count(hl7:participantRole/hl7:id)&gt;=1)"
				>ERRORE-b199| Sezione Parametri Vitali: l'elemento  entry/organizer/component/observation/participant DEVE contenere almeno un elemento participantRole/id</assert>
				<assert test="count(hl7:participantRole/hl7:playingEntity/hl7:name/hl7:given)=1 and count(hl7:participantRole/hl7:playingEntity/hl7:name/hl7:given)=1"
				>ERRORE-b200| Sezione Parametri Vitali: l'elemento  entry/organizer/component/observation/participant/playingEntity/name DEVE contenere gli elementi 'given' e 'family' </assert>		
			</rule>
		
	
			<!--11-->
			<!--Terapia Farmacologica in Pronto Soccorso: controllo sulle entry-->
			<rule context="hl7:ClinicalDocument/hl7:component/hl7:structuredBody/hl7:component/hl7:section[hl7:code[@code='29549-3']]/hl7:entry">
				
				<assert test="count(hl7:substanceAdministration[@classCode='SBADM'][@moodCode='EVN'])=1"
				>ERRORE-b201| Sezione Terapia Farmacologica in Pronto Soccorso: l'elemento entry/substanceAdministration DEVE avere valorizzati gli attributi @classCode='SBADM' e @moodCode='EVN'</assert>
				<assert test="count(hl7:substanceAdministration/hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.6.52'])=1"
				>ERRORE-b202| Sezione Terapia Farmacologica in Pronto Soccorso: l'elemento entry/substanceAdministration DEVE contenere l'elemento 'templateId' con attributo @root='2.16.840.1.113883.2.9.10.1.6.52'</assert>
				<assert test="count(hl7:substanceAdministration/hl7:statusCode[@code='completed'])=1"
				>ERRORE-b203| Sezione Terapia Farmacologica in Pronto Soccorso: l'elemento entry/substanceAdministration deve contenere un elemento 'statusCode' con attributo @code='completed'</assert>
				<assert test="count(hl7:substanceAdministration/hl7:effectiveTime[@xsi:type='IVL_TS']/hl7:low)=1 and count(hl7:substanceAdministration/hl7:effectiveTime[@xsi:type='IVL_TS']/hl7:high)=1"
				>ERRORE-b204| Sezione Terapia Farmacologica in Pronto Soccorso: l'elemento entry/substanceAdministration/effectiveTime deve avere l'elemento 'low' valorizzato</assert>
				<assert test="count(hl7:substanceAdministration/hl7:consumable/hl7:manufacturedProduct/hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.6.53'])=1"
				>ERRORE-b205| Sezione Terapia Farmacologica in Pronto Soccorso: l'elemento entry/substanceAdministration/consumable/manufacturedProduct deve contenere un elemento 'templateId' valorizzato con @root='2.16.840.1.113883.2.9.10.1.6.53'</assert>
				<let name="farma" value="hl7:substanceAdministration/hl7:consumable/hl7:manufacturedProduct/hl7:manufacturedMaterial"/>
				<assert test="count($farma/hl7:code[@codeSystem='2.16.840.1.113883.2.9.6.1.5'])=1 or count($farma/hl7:code[@codeSystem='2.16.840.1.113883.6.73'])=1"
				>ERRORE-b206| Sezione Terapia Farmacologica in Pronto Soccorso: l'elemento entry/substanceAdministration/consumable/manufacturedProduct/manufacturedMaterial deve contenere un elemento 'code' valorizzato secondo i seguenti sistemi di codifica:
				- @codeSystem='2.16.840.1.113883.2.9.6.1.5' (AIC)
				- @codeSystem='2.16.840.1.113883.6.73' (ATC)
				</assert>
				
				<!--Controllo incrociato tra code e translation-->
				<assert test="(count($farma/hl7:code[@codeSystem='2.16.840.1.113883.2.9.6.1.5']/hl7:translation)=0 or 
				count($farma/hl7:code[@codeSystem='2.16.840.1.113883.2.9.6.1.5']/hl7:translation[@codeSystem='2.16.840.1.113883.6.73'])=1) and
				(count($farma/hl7:code[@codeSystem='2.16.840.1.113883.6.73']/hl7:translation)=0 or
				count($farma/hl7:code[@codeSystem='2.16.840.1.113883.6.73']/hl7:translation[@codeSystem='2.16.840.1.113883.2.9.6.1.5'])=1)"
				>ERRORE-b207| Sezione Terapia Farmacologica in Pronto Soccorso: l'elemento entry/substanceAdministration/consumable/manufacturedProduct/manufacturedMaterial/code/translation deve essere valorizzato secondo i seguenti sistemi di codifica:
				- @codeSystem='2.16.840.1.113883.2.9.6.1.5' (AIC)
				- @codeSystem='2.16.840.1.113883.6.73' (ATC)</assert>
				<assert test="count(hl7:substanceAdministration/hl7:participant)=0 or (count(hl7:substanceAdministration/hl7:participant[@typeCode='REF']))>=1"
				>ERRORE-b208| Sezione Terapia Farmacologica in Pronto Soccorso: l'elementoentry/substanceAdministration/participant se presente, DEVE contenere l'attributo @typeCode='REF'</assert>
			</rule>
				
				<!--Terapia Farmacologica in Pronto Soccorso: performer (entry/substanceAdministration/performer)-->
				<rule context="hl7:ClinicalDocument/hl7:component/hl7:structuredBody/hl7:component/hl7:section[hl7:code[@code='29549-3']]/hl7:entry/hl7:substanceAdministration/hl7:performer">
					
					<assert test="(count(hl7:assignedEntity/hl7:assignedPerson/hl7:name/hl7:family)=1 and count(hl7:assignedEntity/hl7:assignedPerson/hl7:name/hl7:given)=1)"
					>ERRORE-b209| Sezione Terapia Farmacologica in Pronto Soccorso: l'elemento entry/substanceAdministration/performer/assignedEntity/assignedPerson/name deve contenere gli elementi 'given' e 'family'</assert>
				</rule>
				
				<!--Terapia Farmacologica in Pronto Soccorso: participant (entry/substanceAdministration/participant)-->
				<rule context="hl7:ClinicalDocument/hl7:component/hl7:structuredBody/hl7:component/hl7:section[hl7:code[@code='29549-3']]/hl7:entry/hl7:substanceAdministration/hl7:participant">
					
					<assert test="count(hl7:participantRole/hl7:id)>=1"
					>ERRORE-b210| Sezione Terapia Farmacologica in Pronto Soccorso: l'elemento entry/substanceAdministration/participant/participantRole deve contenere almeno un elemento 'id'</assert>
					<assert test="count(hl7:participantRole/hl7:playingEntity/hl7:name/hl7:family)=1 and 
					count(hl7:participantRole/hl7:playingEntity/hl7:name/hl7:given)=1"
					>ERRORE-b211| Sezione Terapia Farmacologica in Pronto Soccorso: l'elemento entry/substanceAdministration/participant/participantRole/name deve contenere gli elementi 'given' e 'family'</assert>
				</rule>
				
				<!--Terapia farmacologica in Pronto Soccorso: controllo sotto-elementi di entryRelationship-->
				<rule context="hl7:ClinicalDocument/hl7:component/hl7:structuredBody/hl7:component/hl7:section[hl7:code[@code='29549-3']]/hl7:entry/hl7:substanceAdministration/hl7:entryRelationship">
					
					<assert test="count(hl7:observation)=1 or count(hl7:supply)=1"
					>ERRORE-b212| Sezione Terapia farmacologica in Pronto Soccorso: entry/substanceAdministration/entryRelationship  deve contenere un elemento di tipo "observation" o "supply" </assert>
				</rule>
				
				
		<!--12.1.1-->
		<!--Dimissione: controlli sulle entryRelationship "Encounter Post Dimissione" (entry/act/entryRelationship/encounter)-->			
		<rule context="hl7:ClinicalDocument/hl7:component/hl7:structuredBody/hl7:component/hl7:section[hl7:code[@code='28574-2']]/hl7:entry/hl7:act[hl7:code[@code='dimissione']]/hl7:entryRelationship[hl7:encounter]">
			
			<assert test="count(hl7:encounter/@classCode)=1"				
			>ERRORE-b213| Sezione Dimissione - "Encounter Post Dimissione": l'elemento entry/act/entryRelationship/encounter deve avere l'attributo '@classCode' </assert>
			<assert test="count(hl7:encounter/hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.6.67'])=1"				
			>ERRORE-b214| Sezione Dimissione - "Encounter Post Dimissione": l'elemento entry/act/entryRelationship/encounter deve contenere l'elemento 'templateId' con attributo @root='2.16.840.1.113883.2.9.10.1.6.67' </assert>
			<assert test="count(hl7:encounter/hl7:id)=1"				
			>ERRORE-b215| Sezione Dimissione - "Encounter Post Dimissione":l'elemento entry/act/entryRelationship/encounter deve contenere l'elemento 'id'</assert>			
			<assert test="count(hl7:encounter/hl7:code)=0 or count(hl7:encounter/hl7:code[@code='IMP'][@codeSystem='2.16.840.1.113883.2.9.1.11.1.2.9'])=1"	
			>ERRORE-b216| Sezione Dimissione - "Encounter Post Dimissione": l'elemento entry/act/entryRelationship/encounter/code se presente, deve contenere gli attributi @code='IMP' e @codeSystem='2.16.840.1.113883.2.9.1.11.1.2.9' </assert>
			<assert test="count(hl7:encounter/hl7:effectiveTime)=1"
			>ERRORE-b217| Sezione Dimissione - "Encounter Post Dimissione": l'elemento entry/act/entryRelationship/encounter deve contenere l'elemento 'effectiveTime' </assert>
			<!--participant "Collocazione paziente post dimissione" -->
			<assert test="count(hl7:encounter/hl7:participant)=0 or count(hl7:encounter/hl7:participant[@typeCode='LOC'])>=1"
			>ERRORE-b218| Sezione Dimissione - "Encounter Post Dimissione": l'elemento entry/act/entryRelationship/encounter/participant se presente, deve essere avere attributo @typeCode='LOC' </assert>
			<!--entryRelationship "Ragione" -->
			<assert test="count(hl7:encounter/hl7:entryRelationship)=0 or count(hl7:encounter/hl7:entryRelationship[@typeCode='RSON'])>=1"
			>ERRORE-b219| Sezione Dimissione - "Encounter Post Dimissione":  l'elemento entry/act/entryRelationship/encounter/entryRelationship se presente, deve avere attributo @typeCode='RSON' </assert>
		</rule>
			
			<!--Dimissione-EncounterPostDimissione: controlli sui participant "Collocazione paziente post dimissione" (entry/act/entryRelationship/encounter/participant)-->
			<rule context="hl7:ClinicalDocument/hl7:component/hl7:structuredBody/hl7:component/hl7:section[hl7:code[@code='28574-2']]/hl7:entry/hl7:act[hl7:code[@code='dimissione']]/hl7:entryRelationship/hl7:encounter/hl7:participant">			
				
				<assert test="count(hl7:participantRole/@classCode)=0 or count(hl7:participantRole[@classCode='SDLOC'])=1"
				>ERRORE-b220| Sezione Dimissione - "Encounter Post Dimissione": l'elemento entry/act/entryRelationship/encounter/participant/participantRole, se presenta l'attibuto @classCode deve essere valorizzato con 'SDLOC'</assert>
				<assert test="count(hl7:participantRole/hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.6.64'])=1"
				>ERRORE-b221| Sezione Dimissione - "Encounter Post Dimissione": l'elemento entry/act/entryRelationship/encounter/participant/participantRole deve contenere l'elemento templateId con attributo @root='2.16.840.1.113883.2.9.10.1.6.64' </assert>
				<assert test="count(hl7:participantRole/hl7:code)=0 or count(hl7:participantRole/hl7:code[@codeSystem='2.16.840.1.113883.2.9.1.11.1.2.11'])=1"
				>ERRORE-b222| Sezione Dimissione - "Encounter Post Dimissione": l'elemento entry/act/entryRelationship/encounter/participant/participantRole/code se presente, deve essere valorizzato con l'attributo @codeSystem='2.16.840.1.113883.2.9.1.11.1.2.11' </assert>
			</rule>
			
			<!--Dimissione-EncounterPostDimissione: controlli sugli entryRelationship "Ragione" (entry/act/entryRelationship/encounter/entryRelationship) -->
			<rule context="hl7:ClinicalDocument/hl7:component/hl7:structuredBody/hl7:component/hl7:section[hl7:code[@code='28574-2']]/hl7:entry/hl7:act[hl7:code[@code='dimissione']]/hl7:entryRelationship/hl7:encounter/hl7:entryRelationship">			
				<assert test="count(hl7:observation/hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.6.68'])=1"
				>ERRORE-b223| Sezione Dimissione - "Encounter Post Dimissione": l'elemento entry/act/entryRelationship/encounter/entryRelationship/observation deve contenere l'elemento 'templateId' con attributo @root='2.16.840.1.113883.2.9.10.1.6.68' </assert>
				<assert test="count(hl7:observation/hl7:code[@codeSystem='2.16.840.1.113883.2.9.1.11.1.2.13'])=1"
				>ERRORE-b224| Sezione Dimissione - "Encounter Post Dimissione": l'elemento entry/act/entryRelationship/encounter/entryRelationship/observation deve contenere l'elemento 'code' con attributo @codeSystem='2.16.840.1.113883.2.9.1.11.1.2.13'</assert>
				<assert test="count(hl7:observation/hl7:statusCode[@code='completed'])=1"
				>ERRORE-b225| Sezione Dimissione - "Encounter Post Dimissione": l'elemento entry/act/entryRelationship/encounter/entryRelationship/observation deve contenere l'elemento 'statusCode' con attributo @code='completed' </assert>
			</rule>
			
		<!--12.1.2-->	
		<!--Dimissione: controlli sulle entryRelationship "Trasferimento post Dimissione" (entry/act/entryRelationship/act)-->			
		<rule context="hl7:ClinicalDocument/hl7:component/hl7:structuredBody/hl7:component/hl7:section[hl7:code[@code='28574-2']]/hl7:entry/hl7:act[hl7:code[@code='dimissione']]/hl7:entryRelationship[hl7:act]">
			
			<assert test="count(hl7:act[@classCode='TRNS'])=1"				
			>ERRORE-b226| Sezione Dimissione - "Trasferimento post dimissione": l'elemento entry/act/entryRelationship/act deve avere l'attributo @classCode='TRNS'</assert>
			<assert test="count(hl7:act/hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.6.92'])=1"				
			>ERRORE-b227| Sezione Dimissione - "Trasferimento post dimissione": l'elemento entry/act/entryRelationship/act deve contenere l'elemento templateId con attributo @root='2.16.840.1.113883.2.9.10.1.6.92'  </assert>			
			<assert test="count(hl7:act/hl7:effectiveTime)=1"	
			>ERRORE-b228| Sezione Dimissione - "Trasferimento post dimissione": l'elemento entry/act/entryRelationship/act deve contenere l'elemento 'effectiveTime'</assert>
			<!--participant "Collocazione paziente post dimissione" -->
			<assert test="count(hl7:act/hl7:participant)=0 or count(hl7:act/hl7:participant[@typeCode='LOC'])>=1"
			>ERRORE-b229| Sezione Dimissione - "Trasferimento post dimissione": l'elemento entry/act/entryRelationship/act/participant se presente, deve avere l'attributo @typeCode='LOC'</assert>
			<!--entryRelationship "Ragione" -->
			<assert test="count(hl7:act/hl7:entryRelationship)=0 or count(hl7:act/hl7:entryRelationship[@typeCode='RSON'])>=1"
			>ERRORE-b230| Sezione Dimissione - "Trasferimento post dimissione": l'elemento entry/act/entryRelationship/act/entryRelationship se presente, deve avere l'attributo @typeCode='RSON'</assert>
		</rule>
		
			<!--Dimissione- TrasferimentoPostDimissione: controlli sui 'participant' "Collocazione paziente post dimissione" (entry/act/entryRelationship/act/participant)-->
			<rule context="hl7:ClinicalDocument/hl7:component/hl7:structuredBody/hl7:component/hl7:section[hl7:code[@code='28574-2']]/hl7:entry/hl7:act[hl7:code[@code='dimissione']]/hl7:entryRelationship/hl7:act/hl7:participant">			
				<assert test="count(hl7:participantRole/@classCode)=0 or count(hl7:participantRole[@classCode='SDLOC'])=1"
				>ERRORE-b231| Sezione Dimissione - "Trasferimento post dimissione": l'attributo @classCode di entry/act/entryRelationship/act/participant/participantRole se presente, deve essere valorizzato con 'SDLOC'</assert>
				<assert test="count(hl7:participantRole/hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.6.64'])=1"
				>ERRORE-b232| Sezione Dimissione - "Trasferimento post dimissione": l'elemento entry/act/entryRelationship/act/participant/participantRole deve contenere l'elemento 'templateId' con attributo @root='2.16.840.1.113883.2.9.10.1.6.64'</assert>
				<assert test="count(hl7:participantRole/hl7:code)=0 or count(hl7:participantRole/hl7:code[@codeSystem='2.16.840.1.113883.2.9.1.11.1.2.11'])=1"
				>ERRORE-b233| Sezione Dimissione - "Trasferimento post dimissione":  l'elemento entry/act/entryRelationship/act/participant/participantRole/code se presente, deve avere l'attributo @codeSystem='2.16.840.1.113883.2.9.1.11.1.2.11'</assert>
			</rule>
		
			<!--Dimissione- TrasferimentoPostDimissione: controlli sugli 'entryRelationship' "Ragione" (entry/act/entryRelationship/act/entryRelationship/observation) -->
			<rule context="hl7:ClinicalDocument/hl7:component/hl7:structuredBody/hl7:component/hl7:section[hl7:code[@code='28574-2']]/hl7:entry/hl7:act[hl7:code[@code='dimissione']]/hl7:entryRelationship/hl7:act/hl7:entryRelationship">			
				<assert test="count(hl7:observation/hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.6.68'])=1"
				>ERRORE-b234| Sezione Dimissione - "Trasferimento post dimissione": l'elemento entry/act/entryRelationship/act/entryRelationship/observation deve contenere l'elemento 'templateId' con attributo @root='2.16.840.1.113883.2.9.10.1.6.68'</assert>
				<assert test="count(hl7:observation/hl7:code[@codeSystem='2.16.840.1.113883.2.9.1.11.1.2.13'])=1"
				>ERRORE-b235| Sezione Dimissione - "Trasferimento post dimissione": l'elemento entry/act/entryRelationship/act/entryRelationship/observation deve contenere l'elemento 'code' con attributo @codeSystem='2.16.840.1.113883.2.9.1.11.1.2.13'</assert>
				<assert test="count(hl7:observation/hl7:statusCode[@code='completed'])=1"
				>ERRORE-b236| Sezione Dimissione - "Trasferimento post dimissione": l'elemento entry/act/entryRelationship/act/entryRelationship/observation deve contenere l'elemento 'statusCode' con attributo @code='completed'</assert>
			</rule>
		
		<!--12.1.3-->
		<!--Dimissione: controlli sulle entryRelationship "Diagnosi di Dimissione" (entry/act/entryRelationship/observation)-->			
		<rule context="hl7:ClinicalDocument/hl7:component/hl7:structuredBody/hl7:component/hl7:section[hl7:code[@code='28574-2']]/hl7:entry/hl7:act[hl7:code[@code='dimissione']]/hl7:entryRelationship[hl7:observation/hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.6.70']]">
			<assert test="count(hl7:observation/hl7:code[@code='29308-4'][@codeSystem='2.16.840.1.113883.6.1'])=1"	
			>ERRORE-b237| Sezione Dimissione - "Diagnosi di Dimissione": l'elemento entry/act/entryRelationship/observation deve contenere l'elemento 'code' con attributi @code='29308-4' e @codeSystem='2.16.840.1.113883.6.1'</assert>
			<!--participant "Collocazione paziente post dimissione"-->
			<assert test="count(hl7:observation/hl7:statusCode[@code='completed'])=1"
			>ERRORE-b238| Sezione Dimissione - "Diagnosi di Dimissione": l'elemento entry/act/entryRelationship/observation deve contenere l'elemento 'statusCode' con attributo @code='completed'</assert>
			<!--entryRelationship "Ragione"-->
			<assert test="count(hl7:observation/hl7:value[@codeSystem='2.16.840.1.113883.6.103'])=1"
			>ERRORE-b239| Sezione Dimissione - "Diagnosi di Dimissione": l'elemento entry/act/entryRelationship/observation deve contenere l'elemento 'value' con attributo @codeSystem='2.16.840.1.113883.6.103'</assert>
		</rule>
		
		
		
		<!--Sezione Piano di cura alla dimissione: controllo entry-->
					
		<rule context="hl7:ClinicalDocument/hl7:component/hl7:structuredBody/hl7:component/hl7:section[hl7:code[@code='18776-5']]/hl7:entry">
			<assert test="count(hl7:act[@classCode='ACT'][@moodCode='INT'])=1"
			>ERRORE-b240| Sezione Piano di cura alla dimissione: l'elemento entry/act deve avere attributi @classCode='ACT' e @moodCode='INT'</assert>
			<assert test="count(hl7:act/hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.6.62'])=1"
			>ERRORE-b241| Sezione Piano di cura alla dimissione: l'elemento entry/act deve contenere un elemento templateId con attributo @root='2.16.840.1.113883.2.9.10.1.6.62'</assert>
			<assert test="count(hl7:act/hl7:statusCode[@code='active'])=1"
			>ERRORE-b242| Sezione Piano di cura alla dimissione: l'elemento entry/act deve contenere un elemento statusCode con attributo @code='active'</assert>
			<assert test="count(hl7:act/hl7:reference)=0 or (count(hl7:act/hl7:reference/hl7:externalAct/@moodCode)=1 and 
			count(hl7:act/hl7:reference/hl7:externalAct/@classCode)=1)"
			>ERRORE-b243| Sezione Piano di cura alla dimissione: l'elemento entry/act/reference se presente deve contenere un elemento 'externalAct' con attributi @classCode='ACT' e @moodCode='EVN'</assert>
			<assert test="count(hl7:act/hl7:reference)=0 or (count(hl7:act/hl7:reference/hl7:externalAct/hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.6.89'])=1)"
			>ERRORE-b244| Sezione Piano di cura alla dimissione: l'elemento entry/act/reference/externalAct deve contenere un elemento 'templateId' con attributo @root='2.16.840.1.113883.2.9.10.1.6.89'</assert>
			<assert test="count(hl7:act/hl7:reference)=0 or (count(hl7:act/hl7:reference/hl7:externalAct/hl7:id[@root='2.16.840.1.113883.2.9.4.3.9'])=1)"
			>ERRORE-b245| Sezione Piano di cura alla dimissione: l'elemento entry/act/reference/externalAct deve contenere un elemento 'id' con attributo @root='2.16.840.1.113883.2.9.4.3.9'</assert>

		</rule>
		
		<rule context="hl7:ClinicalDocument/hl7:component/hl7:structuredBody/hl7:component/hl7:section[hl7:code[@code='18776-5']]/hl7:author">
			<assert test="count(hl7:assignedAuthor/hl7:assignedPerson)=0 or 
			(count(hl7:assignedAuthor/hl7:assignedPerson/hl7:name/hl7:given)=1 and count(hl7:assignedAuthor/hl7:assignedPerson/hl7:name/hl7:family)=1)"
			>ERRORE-b246| Sezione Piano di cura alla dimissione: l'elemento author/assignedAuthor/assignedPerson/name deve contenere i sotto-elementi 'given' e 'family' </assert>		
				
		</rule>
		
		<rule context="hl7:ClinicalDocument/hl7:component/hl7:structuredBody/hl7:component/hl7:section[hl7:code[@code='18776-5']]/hl7:entry/hl7:act/hl7:author">
			<assert test="count(hl7:assignedAuthor/hl7:assignedPerson/hl7:name/hl7:given)=1 and count(hl7:assignedAuthor/hl7:assignedPerson/hl7:name/hl7:family)=1"
			>ERRORE-b247| Sezione Piano di cura alla dimissione: l'elemento entry/act/author/assignedAuthor/assignedPerson deve contenere l'elemento name con i sotto-elementi 'given' e 'family'</assert>		
		</rule>	
	

	
		
		<!--Terapia farmacologica alla dimissione-->
		<rule context="hl7:ClinicalDocument/hl7:component/hl7:structuredBody/hl7:component/hl7:section[hl7:code[@code='75311-1']]/hl7:author">
			<assert test="count(hl7:assignedAuthor/hl7:assignedPerson)=0 or 
			count(hl7:assignedAuthor/hl7:assignedPerson/hl7:name/hl7:family)=1 and count(hl7:assignedAuthor/hl7:assignedPerson/hl7:name/hl7:given)=1"
			>ERRORE-b248| Sezione Terapia Farmacologica alla dimissione: l'elemento author/assignedAuthor/assignedPerson/name DEVE contenere gli elementi family e given</assert>
		</rule>		
		
		<rule context="hl7:ClinicalDocument/hl7:component/hl7:structuredBody/hl7:component/hl7:section[hl7:code[@code='75311-1']]/hl7:entry">
			
			<assert test="count(hl7:substanceAdministration/@classCode)=1 and count(hl7:substanceAdministration[@moodCode='INT'])=1"
			>ERRORE-b249| Sezione Terapia Farmacologica alla dimissione: se presente entry deve avere l'elemento "substanceAdministration" con gli attributi "classCode=SBADM"e "moodCode=INT"</assert>
			<assert test="count(hl7:substanceAdministration/hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.6.52'])=1"
			>ERRORE-b250| Sezione Terapia Farmacologica alla dimissione: entry/substanceAdministration deve contenere l'elemento templateId valorizzato con l'attributo @root='2.16.840.1.113883.2.9.10.1.6.52'</assert>
			<assert test="count(hl7:substanceAdministration/hl7:statusCode[@code='active'])=1"
			>ERRORE-b251| Sezione Terapia Farmacologica alla dimissione: entry/substanceAdministration deve contenere un elemento statusCode valorizzato con l'attributo @code='active'</assert>	
			<assert test="count(hl7:substanceAdministration/hl7:effectiveTime[@xsi:type='IVL_TS']/hl7:low)=1"
			>ERRORE-b252|Sezione Terapia farmacologica alla dimissione: entry/substanceAdministration/effectiveTime deve avere l'elemento 'low' valorizzato </assert>
			<assert test="count(hl7:substanceAdministration/hl7:consumable/hl7:manufacturedProduct/hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.6.53'])=1"
			>ERRORE-b253| Sezione Terapia farmacologica alla dimissione: entry/substanceAdministration/consumable/manufacturedProduct DEVE contenere l'elemento templateId valorizzato con l'attributo @root='2.16.840.1.113883.2.9.10.1.6.53'</assert>
			<assert test="count(hl7:substanceAdministration/hl7:consumable/hl7:manufacturedProduct/hl7:manufacturedMaterial/hl7:code[@codeSystem='2.16.840.1.113883.2.9.6.1.5'])=1 or
			count(hl7:substanceAdministration/hl7:consumable/hl7:manufacturedProduct/hl7:manufacturedMaterial/hl7:code[@codeSystem='2.16.840.1.113883.6.73'])=1 or 
			count(hl7:substanceAdministration/hl7:consumable/hl7:manufacturedProduct/hl7:manufacturedMaterial/hl7:code[@codeSystem='2.16.840.1.113883.2.9.6.1.51'])=1"
			>ERRORE-b254|Sezione Terapia farmacologica alla dimissione: l'elemento entry/substanceAdministration/consumable/manufacturedProduct/manufacturedMaterial/code DEVE avere l'attributo "@codeSystem" valorizzato come segue:
			- '2.16.840.1.113883.2.9.6.1.5' codifica "AIC"
			- '2.16.840.1.113883.6.73' codifica "WHO ATC" 
			- '2.16.840.1.113883.2.9.6.1.51' codifica "GE"
			</assert>
			<let name="farma" value="hl7:substanceAdministration/hl7:consumable/hl7:manufacturedProduct/hl7:manufacturedMaterial/hl7:code"/>
			<assert test="count($farma/hl7:translation)=0 or count($farma/hl7:translation[@codeSystem='2.16.840.1.113883.2.9.6.1.5'])=1 or count($farma/hl7:translation[@codeSystem='2.16.840.1.113883.6.73'])=1 or
			count($farma/hl7:translation[@codeSystem='2.16.840.1.113883.2.9.6.1.51'])=1"
			>ERRORE-b255| Sezione Terapia farmacologica alla dimissione: l'elemento entry/substanceAdministration/consumable/manufacturedProduct/manufacturedMaterial/code/translation DEVE avere l'attributo "@codeSystem" valorizzato come segue: 
			- '2.16.840.1.113883.2.9.6.1.5'  codifica "AIC"
			- '2.16.840.1.113883.6.73'  codifica "WHO ATC" 
			- '2.16.840.1.113883.2.9.6.1.51'  codifica "GE"		
			</assert>			
			<assert test="count(hl7:substanceAdministration/hl7:participant)=0 or count(hl7:substanceAdministration/hl7:participant[@typeCode='REF'])=1"
			>ERRORE-b256| Sezione Terapia Farmacologica alla dimissione: se presente entry/substanceAdministration deve contenere l'elemento "participant" con attributo @typeCode='REF'</assert>
						
					
			<assert test="count(hl7:substanceAdministration/hl7:reference)=0 or count(hl7:substanceAdministration/hl7:reference[@typeCode='REFR'])=1"
			>ERRORE-b257| Sezione Terapia farmacologica alla dimissione: se presente entry/substanceAdministration/reference, DEVE contenere attributo @typeCode='REFR'</assert>	
		
		</rule>	
		<rule context="hl7:ClinicalDocument/hl7:component/hl7:structuredBody/hl7:component/hl7:section[hl7:code[@code='75311-1']]/hl7:entry/hl7:substanceAdministration/hl7:participant">
			<assert test="count(hl7:participantRole/hl7:id)&gt;=1"
			>ERRORE-b258| Sezione Terapia Farmacologica alla dimissione: se presente entry/substanceAdministration/participant, DEVE contenere almeno un elemento participantRole/id </assert>
			<assert test="count(hl7:participantRole/hl7:playingEntity/hl7:name/hl7:given)=1 and count(hl7:participantRole/hl7:playingEntity/hl7:name/hl7:family)=1"
			>ERRORE-b259| Sezione Terapia Farmacologica alla dimissione: se presente entry/substanceAdministration/participant, DEVE contenere l'elemento participant/playingEntity/name</assert>
		</rule>
		
		<rule context="hl7:ClinicalDocument/hl7:component/hl7:structuredBody/hl7:component/hl7:section[hl7:code[@code='75311-1']]/hl7:entry/hl7:substanceAdministration/hl7:reference">
			<assert test="count(hl7:externalAct/@classCode)=1"
			>ERRORE-b260| Sezione Terapia farmacologica alla dimissione: entry/substanceAdministration/reference/externalAct deve avere l'attributo @classCode</assert>
			<assert test="count(hl7:externalAct/hl7:templateId[@root='2.16.840.1.113883.2.9.10.1.6.89'])=1"
			>ERRORE-b261| Sezione Terapia farmacologica alla dimissione: l'elemento entry/substanceAdministration/reference/externalAct/templateId DEVE avere l'attributo @root='2.16.840.1.113883.2.9.10.1.6.89' </assert>
			<assert test="count(hl7:externalAct/hl7:id[@root='2.16.840.1.113883.2.9.4.3.9'])=1"
			>ERRORE-b262| Sezione Terapia farmacologica alla dimissione. l'elemento entry/substanceAdministration/reference/externalAct/id DEVE esssere valorizzato con l'attributo @root='2.16.840.1.113883.2.9.4.3.9'.</assert>
		
		</rule>
		
	</pattern>
</schema>
",
      "subType": "00"
    }
  },
  "version": "3.1",
  "template_id_root": "2.16.840.1.113883.2.9.10.1.6.1",
  "last_update_date": {
    "$date": "2023-01-16T22:59:33.676Z"
  },
  "deleted": false,
  "last_sync": {
    "$date": "2023-01-16T23:00:03.543Z"
  }
}]